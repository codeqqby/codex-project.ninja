<file path="codex/vendor/laravel/framework/src/Illuminate/Support/Arr.php" generated-path="codex.vendor.laravel.framework.src.Illuminate.Support.Arr.html" hash="2f4ea870e9384370abfa9668e3a3546e" package="Default">
    <docblock line="0">
      <description/>
      <long-description/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ArrayAccess">\ArrayAccess</namespace-alias>
    <namespace-alias name="Macroable">\Illuminate\Support\Traits\Macroable</namespace-alias>
    <class final="false" abstract="false" namespace="Illuminate\Support" line="8" package="Default">
      <extends/>
      <name>Arr</name>
      <full_name>\Illuminate\Support\Arr</full_name>
      <docblock line="8">
        <description/>
        <long-description/>
        <tag name="package" line="8" description="Default"/>
      </docblock>
      <property static="true" visibility="protected" namespace="Illuminate\Support" line="15" package="Default">
        <name>$macros</name>
        <full_name>\Illuminate\Support\Traits\Macroable::macros</full_name>
        <default>array()</default>
        <docblock line="15">
          <description>The registered string macros.</description>
          <long-description/>
          <tag name="var" line="15" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Support" line="18" package="Default">
        <name>accessible</name>
        <full_name>\Illuminate\Support\Arr::accessible()</full_name>
        <docblock line="18">
          <description>Determine whether the given value is array accessible.</description>
          <long-description/>
          <tag name="param" line="18" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="18" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Support" line="31" package="Default">
        <name>add</name>
        <full_name>\Illuminate\Support\Arr::add()</full_name>
        <docblock line="31">
          <description>Add an element to an array using "dot" notation if it doesn't exist.</description>
          <long-description/>
          <tag name="param" line="31" description="" type="array" variable="$array">
            <type>array</type>
          </tag>
          <tag name="param" line="31" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="31" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="31" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$array</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Support" line="49" package="Default">
        <name>build</name>
        <full_name>\Illuminate\Support\Arr::build()</full_name>
        <docblock line="49">
          <description>Build a new array using a callback.</description>
          <long-description/>
          <tag name="param" line="49" description="" type="array" variable="$array">
            <type>array</type>
          </tag>
          <tag name="param" line="49" description="" type="callable" variable="$callback">
            <type>callable</type>
          </tag>
          <tag name="return" line="49" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="deprecated" line="49" description="since version 5.2."/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$array</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Support" line="68" package="Default">
        <name>collapse</name>
        <full_name>\Illuminate\Support\Arr::collapse()</full_name>
        <docblock line="68">
          <description>Collapse an array of arrays into a single array.</description>
          <long-description/>
          <tag name="param" line="68" description="" type="array" variable="$array">
            <type>array</type>
          </tag>
          <tag name="return" line="68" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$array</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Support" line="91" package="Default">
        <name>divide</name>
        <full_name>\Illuminate\Support\Arr::divide()</full_name>
        <docblock line="91">
          <description>Divide an array into two arrays. One with keys and the other with values.</description>
          <long-description/>
          <tag name="param" line="91" description="" type="array" variable="$array">
            <type>array</type>
          </tag>
          <tag name="return" line="91" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$array</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Support" line="103" package="Default">
        <name>dot</name>
        <full_name>\Illuminate\Support\Arr::dot()</full_name>
        <docblock line="103">
          <description>Flatten a multi-dimensional associative array with dots.</description>
          <long-description/>
          <tag name="param" line="103" description="" type="array" variable="$array">
            <type>array</type>
          </tag>
          <tag name="param" line="103" description="" type="string" variable="$prepend">
            <type>string</type>
          </tag>
          <tag name="return" line="103" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$array</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$prepend</name>
          <default>''</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Support" line="125" package="Default">
        <name>except</name>
        <full_name>\Illuminate\Support\Arr::except()</full_name>
        <docblock line="125">
          <description>Get all of the given array except for a specified array of items.</description>
          <long-description/>
          <tag name="param" line="125" description="" type="array" variable="$array">
            <type>array</type>
          </tag>
          <tag name="param" line="125" description="" type="array|string" variable="$keys">
            <type>array</type>
            <type>string</type>
          </tag>
          <tag name="return" line="125" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$array</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$keys</name>
          <default/>
          <type>array|string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Support" line="139" package="Default">
        <name>exists</name>
        <full_name>\Illuminate\Support\Arr::exists()</full_name>
        <docblock line="139">
          <description>Determine if the given key exists in the provided array.</description>
          <long-description/>
          <tag name="param" line="139" description="" type="\ArrayAccess|array" variable="$array">
            <type>\ArrayAccess</type>
            <type>array</type>
          </tag>
          <tag name="param" line="139" description="" type="string|integer" variable="$key">
            <type>string</type>
            <type>integer</type>
          </tag>
          <tag name="return" line="139" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$array</name>
          <default/>
          <type>\ArrayAccess|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string|integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Support" line="156" package="Default">
        <name>first</name>
        <full_name>\Illuminate\Support\Arr::first()</full_name>
        <docblock line="156">
          <description>Return the first element in an array passing a given truth test.</description>
          <long-description/>
          <tag name="param" line="156" description="" type="array" variable="$array">
            <type>array</type>
          </tag>
          <tag name="param" line="156" description="" type="callable|null" variable="$callback">
            <type>callable</type>
            <type>null</type>
          </tag>
          <tag name="param" line="156" description="" type="mixed" variable="$default">
            <type>mixed</type>
          </tag>
          <tag name="return" line="156" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$array</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default>null</default>
          <type>callable|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$default</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Support" line="179" package="Default">
        <name>last</name>
        <full_name>\Illuminate\Support\Arr::last()</full_name>
        <docblock line="179">
          <description>Return the last element in an array passing a given truth test.</description>
          <long-description/>
          <tag name="param" line="179" description="" type="array" variable="$array">
            <type>array</type>
          </tag>
          <tag name="param" line="179" description="" type="callable|null" variable="$callback">
            <type>callable</type>
            <type>null</type>
          </tag>
          <tag name="param" line="179" description="" type="mixed" variable="$default">
            <type>mixed</type>
          </tag>
          <tag name="return" line="179" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$array</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default>null</default>
          <type>callable|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$default</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Support" line="195" package="Default">
        <name>flatten</name>
        <full_name>\Illuminate\Support\Arr::flatten()</full_name>
        <docblock line="195">
          <description>Flatten a multi-dimensional array into a single level.</description>
          <long-description/>
          <tag name="param" line="195" description="" type="array" variable="$array">
            <type>array</type>
          </tag>
          <tag name="param" line="195" description="" type="integer" variable="$depth">
            <type>integer</type>
          </tag>
          <tag name="return" line="195" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$array</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$depth</name>
          <default>INF</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Support" line="225" package="Default">
        <name>forget</name>
        <full_name>\Illuminate\Support\Arr::forget()</full_name>
        <docblock line="225">
          <description>Remove one or many array items from a given array using "dot" notation.</description>
          <long-description/>
          <tag name="param" line="225" description="" type="array" variable="$array">
            <type>array</type>
          </tag>
          <tag name="param" line="225" description="" type="array|string" variable="$keys">
            <type>array</type>
            <type>string</type>
          </tag>
          <tag name="return" line="225" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$array</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$keys</name>
          <default/>
          <type>array|string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Support" line="270" package="Default">
        <name>get</name>
        <full_name>\Illuminate\Support\Arr::get()</full_name>
        <docblock line="270">
          <description>Get an item from an array using "dot" notation.</description>
          <long-description/>
          <tag name="param" line="270" description="" type="\ArrayAccess|array" variable="$array">
            <type>\ArrayAccess</type>
            <type>array</type>
          </tag>
          <tag name="param" line="270" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="270" description="" type="mixed" variable="$default">
            <type>mixed</type>
          </tag>
          <tag name="return" line="270" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$array</name>
          <default/>
          <type>\ArrayAccess|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$default</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Support" line="302" package="Default">
        <name>has</name>
        <full_name>\Illuminate\Support\Arr::has()</full_name>
        <docblock line="302">
          <description>Check if an item exists in an array using "dot" notation.</description>
          <long-description/>
          <tag name="param" line="302" description="" type="\ArrayAccess|array" variable="$array">
            <type>\ArrayAccess</type>
            <type>array</type>
          </tag>
          <tag name="param" line="302" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="302" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$array</name>
          <default/>
          <type>\ArrayAccess|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Support" line="335" package="Default">
        <name>isAssoc</name>
        <full_name>\Illuminate\Support\Arr::isAssoc()</full_name>
        <docblock line="335">
          <description>Determines if an array is associative.</description>
          <long-description>An array is "associative" if it doesn't have sequential numerical keys beginning with zero.</long-description>
          <tag name="param" line="335" description="" type="array" variable="$array">
            <type>array</type>
          </tag>
          <tag name="return" line="335" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$array</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Support" line="349" package="Default">
        <name>only</name>
        <full_name>\Illuminate\Support\Arr::only()</full_name>
        <docblock line="349">
          <description>Get a subset of the items from the given array.</description>
          <long-description/>
          <tag name="param" line="349" description="" type="array" variable="$array">
            <type>array</type>
          </tag>
          <tag name="param" line="349" description="" type="array|string" variable="$keys">
            <type>array</type>
            <type>string</type>
          </tag>
          <tag name="return" line="349" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$array</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$keys</name>
          <default/>
          <type>array|string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Support" line="362" package="Default">
        <name>pluck</name>
        <full_name>\Illuminate\Support\Arr::pluck()</full_name>
        <docblock line="362">
          <description>Pluck an array of values from an array.</description>
          <long-description/>
          <tag name="param" line="362" description="" type="array" variable="$array">
            <type>array</type>
          </tag>
          <tag name="param" line="362" description="" type="string|array" variable="$value">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="362" description="" type="string|array|null" variable="$key">
            <type>string</type>
            <type>array</type>
            <type>null</type>
          </tag>
          <tag name="return" line="362" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$array</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>string|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string|array|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Illuminate\Support" line="393" package="Default">
        <name>explodePluckParameters</name>
        <full_name>\Illuminate\Support\Arr::explodePluckParameters()</full_name>
        <docblock line="393">
          <description>Explode the "value" and "key" arguments passed to "pluck".</description>
          <long-description/>
          <tag name="param" line="393" description="" type="string|array" variable="$value">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="393" description="" type="string|array|null" variable="$key">
            <type>string</type>
            <type>array</type>
            <type>null</type>
          </tag>
          <tag name="return" line="393" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>string|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string|array|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Support" line="410" package="Default">
        <name>prepend</name>
        <full_name>\Illuminate\Support\Arr::prepend()</full_name>
        <docblock line="410">
          <description>Push an item onto the beginning of an array.</description>
          <long-description/>
          <tag name="param" line="410" description="" type="array" variable="$array">
            <type>array</type>
          </tag>
          <tag name="param" line="410" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="param" line="410" description="" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="return" line="410" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$array</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Support" line="429" package="Default">
        <name>pull</name>
        <full_name>\Illuminate\Support\Arr::pull()</full_name>
        <docblock line="429">
          <description>Get a value from the array, and remove it.</description>
          <long-description/>
          <tag name="param" line="429" description="" type="array" variable="$array">
            <type>array</type>
          </tag>
          <tag name="param" line="429" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="429" description="" type="mixed" variable="$default">
            <type>mixed</type>
          </tag>
          <tag name="return" line="429" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$array</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$default</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Support" line="448" package="Default">
        <name>set</name>
        <full_name>\Illuminate\Support\Arr::set()</full_name>
        <docblock line="448">
          <description>Set an array item to a given value using "dot" notation.</description>
          <long-description>If no key is given to the method, the entire array will be replaced.</long-description>
          <tag name="param" line="448" description="" type="array" variable="$array">
            <type>array</type>
          </tag>
          <tag name="param" line="448" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="448" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="448" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$array</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Support" line="481" package="Default">
        <name>sort</name>
        <full_name>\Illuminate\Support\Arr::sort()</full_name>
        <docblock line="481">
          <description>Sort the array using the given callback.</description>
          <long-description/>
          <tag name="param" line="481" description="" type="array" variable="$array">
            <type>array</type>
          </tag>
          <tag name="param" line="481" description="" type="callable" variable="$callback">
            <type>callable</type>
          </tag>
          <tag name="return" line="481" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$array</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Support" line="492" package="Default">
        <name>sortRecursive</name>
        <full_name>\Illuminate\Support\Arr::sortRecursive()</full_name>
        <docblock line="492">
          <description>Recursively sort an array by keys and values.</description>
          <long-description/>
          <tag name="param" line="492" description="" type="array" variable="$array">
            <type>array</type>
          </tag>
          <tag name="return" line="492" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$array</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Support" line="516" package="Default">
        <name>where</name>
        <full_name>\Illuminate\Support\Arr::where()</full_name>
        <docblock line="516">
          <description>Filter the array using the given callback.</description>
          <long-description/>
          <tag name="param" line="516" description="" type="array" variable="$array">
            <type>array</type>
          </tag>
          <tag name="param" line="516" description="" type="callable" variable="$callback">
            <type>callable</type>
          </tag>
          <tag name="return" line="516" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$array</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Support" line="24" package="Default">
        <name>macro</name>
        <full_name>\Illuminate\Support\Traits\Macroable::macro()</full_name>
        <docblock line="24">
          <description>Register a custom macro.</description>
          <long-description/>
          <tag name="param" line="24" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="24" description="" type="callable" variable="$macro">
            <type>callable</type>
          </tag>
          <tag name="return" line="24" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$macro</name>
          <default/>
          <type>callable</type>
        </argument>
        <inherited_from>\Illuminate\Support\Traits\Macroable</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Support" line="35" package="Default">
        <name>hasMacro</name>
        <full_name>\Illuminate\Support\Traits\Macroable::hasMacro()</full_name>
        <docblock line="35">
          <description>Checks if macro is registered.</description>
          <long-description/>
          <tag name="param" line="35" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="35" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default/>
          <type>string</type>
        </argument>
        <inherited_from>\Illuminate\Support\Traits\Macroable</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Support" line="49" package="Default">
        <name>__callStatic</name>
        <full_name>\Illuminate\Support\Traits\Macroable::__callStatic()</full_name>
        <docblock line="49">
          <description>Dynamically handle calls to the class.</description>
          <long-description/>
          <tag name="param" line="49" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="param" line="49" description="" type="array" variable="$parameters">
            <type>array</type>
          </tag>
          <tag name="return" line="49" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="49" description="" type="\BadMethodCallException">
            <type>\BadMethodCallException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$parameters</name>
          <default/>
          <type>array</type>
        </argument>
        <inherited_from>\Illuminate\Support\Traits\Macroable</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="71" package="Default">
        <name>__call</name>
        <full_name>\Illuminate\Support\Traits\Macroable::__call()</full_name>
        <docblock line="71">
          <description>Dynamically handle calls to the class.</description>
          <long-description/>
          <tag name="param" line="71" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="param" line="71" description="" type="array" variable="$parameters">
            <type>array</type>
          </tag>
          <tag name="return" line="71" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="71" description="" type="\BadMethodCallException">
            <type>\BadMethodCallException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$parameters</name>
          <default/>
          <type>array</type>
        </argument>
        <inherited_from>\Illuminate\Support\Traits\Macroable</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="8" code="PPC:ERR-50005">No summary for class \Illuminate\Support\Arr</error>
    </parse_markers>
    <source>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</source>
  <type>class</type></file>