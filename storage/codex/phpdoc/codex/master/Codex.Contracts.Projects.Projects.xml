<file path="codex/workbench/codex/core/src/Contracts/Projects/Projects.php" generated-path="codex.workbench.codex.core.src.Contracts.Projects.Projects.html" hash="160f5d2ac898575ebf4a4242d72195b9" package="Default">
    <docblock line="0">
      <description>Part of the CLI PHP packages.</description>
      <long-description>License and copyright information bundled with this package in the LICENSE file</long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Codex">\Codex\Contracts\Codex</namespace-alias>
    <namespace-alias name="CodexTrait">\Codex\Traits\CodexTrait</namespace-alias>
    <namespace-alias name="Container">\Illuminate\Contracts\Container\Container</namespace-alias>
    <namespace-alias name="Dispatcher">\Illuminate\Contracts\Events\Dispatcher</namespace-alias>
    <interface namespace="Codex\Contracts\Projects" line="14" package="Default">
      <name>Projects</name>
      <full_name>\Codex\Contracts\Projects\Projects</full_name>
      <docblock line="14">
        <description/>
        <long-description/>
        <tag name="package" line="14" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Contracts\Projects" line="20" package="Default">
        <name>getCodex</name>
        <full_name>\Codex\Contracts\Projects\Projects::getCodex()</full_name>
        <docblock line="20">
          <description>getCodex method</description>
          <long-description/>
          <tag name="return" line="20" description="" type="\Codex\Codex|\Codex\Contracts\Codex">
            <type>\Codex\Codex</type>
            <type>\Codex\Contracts\Codex</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Contracts\Projects" line="29" package="Default">
        <name>setCodex</name>
        <full_name>\Codex\Contracts\Projects\Projects::setCodex()</full_name>
        <docblock line="29">
          <description>Set the codex value</description>
          <long-description/>
          <tag name="param" line="29" description="" type="\Codex\Contracts\Codex" variable="$codex">
            <type>\Codex\Contracts\Codex</type>
          </tag>
          <tag name="return" line="29" description="" type="\Codex\Traits\CodexTrait">
            <type>\Codex\Traits\CodexTrait</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$codex</name>
          <default/>
          <type>\Codex\Contracts\Codex</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Contracts\Projects" line="36" package="Default">
        <name>getContainer</name>
        <full_name>\Codex\Contracts\Projects\Projects::getContainer()</full_name>
        <docblock line="36">
          <description>Returns the IoC container.</description>
          <long-description/>
          <tag name="return" line="36" description="" type="\Illuminate\Container\Container">
            <type>\Illuminate\Container\Container</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Contracts\Projects" line="45" package="Default">
        <name>setContainer</name>
        <full_name>\Codex\Contracts\Projects\Projects::setContainer()</full_name>
        <docblock line="45">
          <description>Sets the IoC container instance.</description>
          <long-description/>
          <tag name="param" line="45" description="" type="\Illuminate\Container\Container" variable="$container">
            <type>\Illuminate\Container\Container</type>
          </tag>
          <tag name="return" line="45" description="" type="\Codex\Contracts\Projects\Projects">
            <type>\Codex\Contracts\Projects\Projects</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$container</name>
          <default/>
          <type>\Illuminate\Container\Container</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Codex\Contracts\Projects" line="52" package="Default">
        <name>getDispatcher</name>
        <full_name>\Codex\Contracts\Projects\Projects::getDispatcher()</full_name>
        <docblock line="52">
          <description>Returns the event dispatcher.</description>
          <long-description/>
          <tag name="return" line="52" description="" type="\Illuminate\Events\Dispatcher">
            <type>\Illuminate\Events\Dispatcher</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Codex\Contracts\Projects" line="61" package="Default">
        <name>setDispatcher</name>
        <full_name>\Codex\Contracts\Projects\Projects::setDispatcher()</full_name>
        <docblock line="61">
          <description>Sets the event dispatcher instance.</description>
          <long-description/>
          <tag name="param" line="61" description="" type="\Illuminate\Events\Dispatcher" variable="$dispatcher">
            <type>\Illuminate\Events\Dispatcher</type>
          </tag>
          <tag name="return" line="61" description="" type="\Codex\Contracts\Projects\Projects">
            <type>\Codex\Contracts\Projects\Projects</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$dispatcher</name>
          <default/>
          <type>\Illuminate\Events\Dispatcher</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Codex\Contracts\Projects" line="68" package="Default">
        <name>unsetEventDispatcher</name>
        <full_name>\Codex\Contracts\Projects\Projects::unsetEventDispatcher()</full_name>
        <docblock line="68">
          <description>Unset the event dispatcher for models.</description>
          <long-description/>
          <tag name="return" line="68" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Codex\Contracts\Projects" line="75" package="Default">
        <name>getEventNamespace</name>
        <full_name>\Codex\Contracts\Projects\Projects::getEventNamespace()</full_name>
        <docblock line="75">
          <description>getEventNamespace method</description>
          <long-description/>
          <tag name="throw" line="75" description="" type="\Codex\Contracts\Projects\RuntimeException">
            <type>\Codex\Contracts\Projects\RuntimeException</type>
          </tag>
          <tag name="return" line="75" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Contracts\Projects" line="82" package="Default">
        <name>getFiles</name>
        <full_name>\Codex\Contracts\Projects\Projects::getFiles()</full_name>
        <docblock line="82">
          <description>Get the filesystem instance.</description>
          <long-description/>
          <tag name="return" line="82" description="" type="\Illuminate\Contracts\Filesystem\Filesystem">
            <type>\Illuminate\Contracts\Filesystem\Filesystem</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Contracts\Projects" line="91" package="Default">
        <name>setFiles</name>
        <full_name>\Codex\Contracts\Projects\Projects::setFiles()</full_name>
        <docblock line="91">
          <description>Set the filesystem instance</description>
          <long-description/>
          <tag name="param" line="91" description="&lt;p&gt;The filesystem instance&lt;/p&gt;" type="mixed|string|\Illuminate\Contracts\Filesystem\Filesystem" variable="$files">
            <type>mixed</type>
            <type>string</type>
            <type>\Illuminate\Contracts\Filesystem\Filesystem</type>
          </tag>
          <tag name="return" line="91" description="" type="\Codex\Contracts\Projects\Projects">
            <type>\Codex\Contracts\Projects\Projects</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$files</name>
          <default/>
          <type>mixed|string|\Illuminate\Contracts\Filesystem\Filesystem</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Codex\Contracts\Projects" line="100" package="Default">
        <name>getEventName</name>
        <full_name>\Codex\Contracts\Projects\Projects::getEventName()</full_name>
        <docblock line="100">
          <description>Returns the transformed (namespaced) event name for a hook</description>
          <long-description/>
          <tag name="param" line="100" description="&lt;p&gt;The hook name&lt;/p&gt;" type="string" variable="$event">
            <type>string</type>
          </tag>
          <tag name="return" line="100" description="The transformed event name" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$event</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Codex\Contracts\Projects" line="109" package="Default">
        <name>hook</name>
        <full_name>\Codex\Contracts\Projects\Projects::hook()</full_name>
        <docblock line="109">
          <description>Create a Codex Hook</description>
          <long-description/>
          <tag name="param" line="109" description="&lt;p&gt;The hook name&lt;/p&gt;" type="string" variable="$event">
            <type>string</type>
          </tag>
          <tag name="param" line="109" description="&lt;p&gt;The callback to execute&lt;/p&gt;" type="string|\Closure" variable="$callback">
            <type>string</type>
            <type>\Closure</type>
          </tag>
          <tag name="param" line="109" description="&lt;p&gt;(optional) The priority&lt;/p&gt;" type="integer" variable="$priority">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$event</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>string|\Closure</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$priority</name>
          <default>1</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Contracts\Projects" line="118" package="Default">
        <name>setActive</name>
        <full_name>\Codex\Contracts\Projects\Projects::setActive()</full_name>
        <docblock line="118">
          <description>Mark a project as active</description>
          <long-description/>
          <tag name="param" line="118" description="" type="" variable="$project"/>
          <tag name="throws" line="118" description="" type="\Codex\Exception\ProjectNotFoundException">
            <type>\Codex\Exception\ProjectNotFoundException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$project</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Contracts\Projects" line="124" package="Default">
        <name>hasActive</name>
        <full_name>\Codex\Contracts\Projects\Projects::hasActive()</full_name>
        <docblock line="124">
          <description>Check if a active project has been set</description>
          <long-description/>
          <tag name="return" line="124" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Contracts\Projects" line="130" package="Default">
        <name>getActive</name>
        <full_name>\Codex\Contracts\Projects\Projects::getActive()</full_name>
        <docblock line="130">
          <description>Gets the active project. Returns null if not set</description>
          <long-description/>
          <tag name="return" line="130" description="" type="\Codex\Projects\Project|null">
            <type>\Codex\Projects\Project</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Contracts\Projects" line="136" package="Default">
        <name>renderMenu</name>
        <full_name>\Codex\Contracts\Projects\Projects::renderMenu()</full_name>
        <docblock line="136">
          <description>Renders the project picker menu</description>
          <long-description/>
          <tag name="return" line="136" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Contracts\Projects" line="146" package="Default">
        <name>get</name>
        <full_name>\Codex\Contracts\Projects\Projects::get()</full_name>
        <docblock line="146">
          <description>Gets a project by name</description>
          <long-description/>
          <tag name="param" line="146" description="&lt;p&gt;The project name&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="146" description="" type="\Codex\Projects\Project">
            <type>\Codex\Projects\Project</type>
          </tag>
          <tag name="throws" line="146" description="" type="\Codex\Exception\ProjectNotFoundException">
            <type>\Codex\Exception\ProjectNotFoundException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Contracts\Projects" line="152" package="Default">
        <name>renderSidebar</name>
        <full_name>\Codex\Contracts\Projects\Projects::renderSidebar()</full_name>
        <docblock line="152">
          <description>Renders the sidebar menu</description>
          <long-description/>
          <tag name="return" line="152" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Contracts\Projects" line="161" package="Default">
        <name>has</name>
        <full_name>\Codex\Contracts\Projects\Projects::has()</full_name>
        <docblock line="161">
          <description>Check if the given project exists.</description>
          <long-description/>
          <tag name="param" line="161" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="161" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Contracts\Projects" line="168" package="Default">
        <name>all</name>
        <full_name>\Codex\Contracts\Projects\Projects::all()</full_name>
        <docblock line="168">
          <description>Return all found projects.</description>
          <long-description/>
          <tag name="return" line="168" description="" type="array&lt;mixed,\Codex\Projects\Project&gt;">
            <type>array&lt;mixed,\Codex\Projects\Project&gt;</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Contracts\Projects" line="174" package="Default">
        <name>toArray</name>
        <full_name>\Codex\Contracts\Projects\Projects::toArray()</full_name>
        <docblock line="174">
          <description>Returns all found projects as array</description>
          <long-description/>
          <tag name="return" line="174" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Contracts\Projects" line="181" package="Default">
        <name>query</name>
        <full_name>\Codex\Contracts\Projects\Projects::query()</full_name>
        <docblock line="181">
          <description>Returns the items (projects) Collection instance to provide advanced sorting and filtering</description>
          <long-description/>
          <tag name="return" line="181" description="" type="\Codex\Support\Collection|array&lt;mixed,\Codex\Projects\Project&gt;">
            <type>\Codex\Support\Collection</type>
            <type>array&lt;mixed,\Codex\Projects\Project&gt;</type>
          </tag>
        </docblock>
      </method>
    </interface>
    <parse_markers>
      <error line="14" code="PPC:ERR-50009">No summary for interface ""</error>
    </parse_markers>
    <source>eJy1V8Fu4zYQvesr5uCDEywS9Lwt2oWb7QbIBkGSnuoeaGlssZFIlaS8Nur+e4ekKNkyJTktqoMtSzPz3jwOZ+jvf6zyKrm9vk7gGp6YMiDXYHKExcM9PH15goqlb2yD+oYMrM0DT1FoBCYySGW1V3yTG+BiLVXJDJcCVrXICszgGzc5heI6xCArF/rhfnH3+HIHa14ghbxNBCtRkxGhygx3y4UURrHU6OWTkn8g3XxMklqfv3a/Px69elWMh+fu3r+8L4q65IIZPHEWhnGBqrsbsb7boqCvnzkRNWlubRMuDKq15R14Jn8lQJfT017XsEHj2ECJJpdZePyTQlMrAcuQEn0eltH8Gpdb913Vq4KnsK5F6sQO4edXxKcH/YLG6Z06/C0ramxetSwqplgJcVyYpUfwfeKdxKP8dOB3HDLC9dlF1Y7vvVwQ52ZJbgbwl71V6q3ktGiN4YBwESZUvtowkeIZJa/iFCWb/Cm7fk4zu1um5QzMY5EnpEVbxZC1RXyJumeVH2NIypiexJ3DqMZ9Su+S+YwbzLI+z4tV7uegT3KIY0Qy+5Xao4mnRk0SStoBhR4Sfit5dgm32oK47Mdl3jRWj22L7fUhkyv5DZ5rYXiJd7sUKxu/T0sbxcXmwoU/BYyx+qURyE4AvdcGy+FVH9jvvlF9bgMc3U7tfWc51jAjtOK1WPIdZgcvzuEdDGHmIOD1MrD3tAefnI8/0QyIodB2btOwnrczOLtq6tY+cRXLIJfyLa6Azx1m3sXmY22d70AWjcdrj0CH+d4qm3vwSLILhbQYxN8Pny9TWbRXkw5dsYxOvWhqF1LXCqkLs6JY0VnHebU/jATcYVqbvj/3EB1qpbhU3OxhLt0uZMWVCxWeX6KMJdso8qFj9OEo+A/wXUSrr0y9kVKVP8gA00Dly7cDhT9r7PpvXTfR4UDRtpNwjnuU5rOk42G/zwxW8yfHYR7gYmucI2nM18TdE25TyCmHFaKL0y/ClZTFKDY5N9jx9uV30CniTbu7RF0UlpOQJobeyBMOjeHmYN2mmtcwq2cUGSpPLGhQ8fSN5k6Jor68pbdwykX8Ss6DKnQVs9pHd/1pm3A95fWI4EijGFDp/6k1Unbu2E0Iq3mGK/YfFX3xQWKituVswTa00qKVCndcm/ODQ3MqOlZ4QNBLin5EBBeD+gnNBJI10Bo8yQws32+/j1Kg+PHa9hvrHN51KqXYvo9//DCOZeQnazOGZ1eB02jWMA+AVzRNigJ9iDCxbZMngy0tLLBsax9loKUydk3sX2Wax/RfsSsPGJDrpa4qclt2GId/J+SfNSqX2t/JP/sL1b0=</source>
  <type>interface</type></file>