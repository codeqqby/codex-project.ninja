<file path="codex/vendor/laravel/framework/src/Illuminate/Container/Container.php" generated-path="codex.vendor.laravel.framework.src.Illuminate.Container.Container.html" hash="e9b5e2ebf5895489320e90a9f772a686" package="Default">
    <docblock line="0">
      <description/>
      <long-description/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Closure">\Closure</namespace-alias>
    <namespace-alias name="ArrayAccess">\ArrayAccess</namespace-alias>
    <namespace-alias name="ReflectionClass">\ReflectionClass</namespace-alias>
    <namespace-alias name="ReflectionMethod">\ReflectionMethod</namespace-alias>
    <namespace-alias name="ReflectionFunction">\ReflectionFunction</namespace-alias>
    <namespace-alias name="ReflectionParameter">\ReflectionParameter</namespace-alias>
    <namespace-alias name="InvalidArgumentException">\InvalidArgumentException</namespace-alias>
    <namespace-alias name="BindingResolutionException">\Illuminate\Contracts\Container\BindingResolutionException</namespace-alias>
    <namespace-alias name="ContainerContract">\Illuminate\Contracts\Container\Container</namespace-alias>
    <class final="false" abstract="false" namespace="Illuminate\Container" line="15" package="Default">
      <extends/>
      <implements>\ArrayAccess</implements>
      <implements>\Illuminate\Contracts\Container\Container</implements>
      <name>Container</name>
      <full_name>\Illuminate\Container\Container</full_name>
      <docblock line="15">
        <description/>
        <long-description/>
        <tag name="package" line="15" description="Default"/>
      </docblock>
      <property static="true" visibility="protected" namespace="Illuminate\Container" line="22" package="Default">
        <name>$instance</name>
        <full_name>\Illuminate\Container\Container::instance</full_name>
        <default/>
        <docblock line="22">
          <description>The current globally available container (if any).</description>
          <long-description/>
          <tag name="var" line="22" description="" type="static" variable="">
            <type>static</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Illuminate\Container" line="29" package="Default">
        <name>$resolved</name>
        <full_name>\Illuminate\Container\Container::resolved</full_name>
        <default>array()</default>
        <docblock line="29">
          <description>An array of the types that have been resolved.</description>
          <long-description/>
          <tag name="var" line="29" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Illuminate\Container" line="36" package="Default">
        <name>$bindings</name>
        <full_name>\Illuminate\Container\Container::bindings</full_name>
        <default>array()</default>
        <docblock line="36">
          <description>The container's bindings.</description>
          <long-description/>
          <tag name="var" line="36" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Illuminate\Container" line="43" package="Default">
        <name>$instances</name>
        <full_name>\Illuminate\Container\Container::instances</full_name>
        <default>array()</default>
        <docblock line="43">
          <description>The container's shared instances.</description>
          <long-description/>
          <tag name="var" line="43" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Illuminate\Container" line="50" package="Default">
        <name>$aliases</name>
        <full_name>\Illuminate\Container\Container::aliases</full_name>
        <default>array()</default>
        <docblock line="50">
          <description>The registered type aliases.</description>
          <long-description/>
          <tag name="var" line="50" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Illuminate\Container" line="57" package="Default">
        <name>$extenders</name>
        <full_name>\Illuminate\Container\Container::extenders</full_name>
        <default>array()</default>
        <docblock line="57">
          <description>The extension closures for services.</description>
          <long-description/>
          <tag name="var" line="57" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Illuminate\Container" line="64" package="Default">
        <name>$tags</name>
        <full_name>\Illuminate\Container\Container::tags</full_name>
        <default>array()</default>
        <docblock line="64">
          <description>All of the registered tags.</description>
          <long-description/>
          <tag name="var" line="64" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Illuminate\Container" line="71" package="Default">
        <name>$buildStack</name>
        <full_name>\Illuminate\Container\Container::buildStack</full_name>
        <default>array()</default>
        <docblock line="71">
          <description>The stack of concretions currently being built.</description>
          <long-description/>
          <tag name="var" line="71" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="Illuminate\Container" line="78" package="Default">
        <name>$contextual</name>
        <full_name>\Illuminate\Container\Container::contextual</full_name>
        <default>array()</default>
        <docblock line="78">
          <description>The contextual binding map.</description>
          <long-description/>
          <tag name="var" line="78" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Illuminate\Container" line="85" package="Default">
        <name>$reboundCallbacks</name>
        <full_name>\Illuminate\Container\Container::reboundCallbacks</full_name>
        <default>array()</default>
        <docblock line="85">
          <description>All of the registered rebound callbacks.</description>
          <long-description/>
          <tag name="var" line="85" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Illuminate\Container" line="92" package="Default">
        <name>$globalResolvingCallbacks</name>
        <full_name>\Illuminate\Container\Container::globalResolvingCallbacks</full_name>
        <default>array()</default>
        <docblock line="92">
          <description>All of the global resolving callbacks.</description>
          <long-description/>
          <tag name="var" line="92" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Illuminate\Container" line="99" package="Default">
        <name>$globalAfterResolvingCallbacks</name>
        <full_name>\Illuminate\Container\Container::globalAfterResolvingCallbacks</full_name>
        <default>array()</default>
        <docblock line="99">
          <description>All of the global after resolving callbacks.</description>
          <long-description/>
          <tag name="var" line="99" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Illuminate\Container" line="106" package="Default">
        <name>$resolvingCallbacks</name>
        <full_name>\Illuminate\Container\Container::resolvingCallbacks</full_name>
        <default>array()</default>
        <docblock line="106">
          <description>All of the resolving callbacks by class type.</description>
          <long-description/>
          <tag name="var" line="106" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Illuminate\Container" line="113" package="Default">
        <name>$afterResolvingCallbacks</name>
        <full_name>\Illuminate\Container\Container::afterResolvingCallbacks</full_name>
        <default>array()</default>
        <docblock line="113">
          <description>All of the after resolving callbacks by class type.</description>
          <long-description/>
          <tag name="var" line="113" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Container" line="121" package="Default">
        <name>when</name>
        <full_name>\Illuminate\Container\Container::when()</full_name>
        <docblock line="121">
          <description>Define a contextual binding.</description>
          <long-description/>
          <tag name="param" line="121" description="" type="string" variable="$concrete">
            <type>string</type>
          </tag>
          <tag name="return" line="121" description="" type="\Illuminate\Contracts\Container\ContextualBindingBuilder">
            <type>\Illuminate\Contracts\Container\ContextualBindingBuilder</type>
          </tag>
          <tag name="inherited_from" description="\Illuminate\Contracts\Container\Container::when()" refers="\Illuminate\Contracts\Container\Container::when()" link="/classes/Illuminate.Contracts.Container.Container.html#method_when"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$concrete</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Container" line="134" package="Default">
        <name>bound</name>
        <full_name>\Illuminate\Container\Container::bound()</full_name>
        <docblock line="134">
          <description>Determine if the given abstract type has been bound.</description>
          <long-description/>
          <tag name="param" line="134" description="" type="string" variable="$abstract">
            <type>string</type>
          </tag>
          <tag name="return" line="134" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\Illuminate\Contracts\Container\Container::bound()" refers="\Illuminate\Contracts\Container\Container::bound()" link="/classes/Illuminate.Contracts.Container.Container.html#method_bound"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$abstract</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Container" line="147" package="Default">
        <name>resolved</name>
        <full_name>\Illuminate\Container\Container::resolved()</full_name>
        <docblock line="147">
          <description>Determine if the given abstract type has been resolved.</description>
          <long-description/>
          <tag name="param" line="147" description="" type="string" variable="$abstract">
            <type>string</type>
          </tag>
          <tag name="return" line="147" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\Illuminate\Contracts\Container\Container::resolved()" refers="\Illuminate\Contracts\Container\Container::resolved()" link="/classes/Illuminate.Contracts.Container.Container.html#method_resolved"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$abstract</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Container" line="164" package="Default">
        <name>isAlias</name>
        <full_name>\Illuminate\Container\Container::isAlias()</full_name>
        <docblock line="164">
          <description>Determine if a given string is an alias.</description>
          <long-description/>
          <tag name="param" line="164" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="164" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Container" line="177" package="Default">
        <name>bind</name>
        <full_name>\Illuminate\Container\Container::bind()</full_name>
        <docblock line="177">
          <description>Register a binding with the container.</description>
          <long-description/>
          <tag name="param" line="177" description="" type="string|array" variable="$abstract">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="177" description="" type="\Closure|string|null" variable="$concrete">
            <type>\Closure</type>
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="param" line="177" description="" type="boolean" variable="$shared">
            <type>boolean</type>
          </tag>
          <tag name="return" line="177" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\Illuminate\Contracts\Container\Container::bind()" refers="\Illuminate\Contracts\Container\Container::bind()" link="/classes/Illuminate.Contracts.Container.Container.html#method_bind"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$abstract</name>
          <default/>
          <type>string|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$concrete</name>
          <default>null</default>
          <type>\Closure|string|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$shared</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Container" line="225" package="Default">
        <name>getClosure</name>
        <full_name>\Illuminate\Container\Container::getClosure()</full_name>
        <docblock line="225">
          <description>Get the Closure to be used when building a type.</description>
          <long-description/>
          <tag name="param" line="225" description="" type="string" variable="$abstract">
            <type>string</type>
          </tag>
          <tag name="param" line="225" description="" type="string" variable="$concrete">
            <type>string</type>
          </tag>
          <tag name="return" line="225" description="" type="\Closure">
            <type>\Closure</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$abstract</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$concrete</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Container" line="242" package="Default">
        <name>addContextualBinding</name>
        <full_name>\Illuminate\Container\Container::addContextualBinding()</full_name>
        <docblock line="242">
          <description>Add a contextual binding to the container.</description>
          <long-description/>
          <tag name="param" line="242" description="" type="string" variable="$concrete">
            <type>string</type>
          </tag>
          <tag name="param" line="242" description="" type="string" variable="$abstract">
            <type>string</type>
          </tag>
          <tag name="param" line="242" description="" type="\Closure|string" variable="$implementation">
            <type>\Closure</type>
            <type>string</type>
          </tag>
          <tag name="return" line="242" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$concrete</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$abstract</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$implementation</name>
          <default/>
          <type>\Closure|string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Container" line="255" package="Default">
        <name>bindIf</name>
        <full_name>\Illuminate\Container\Container::bindIf()</full_name>
        <docblock line="255">
          <description>Register a binding if it hasn't already been registered.</description>
          <long-description/>
          <tag name="param" line="255" description="" type="string" variable="$abstract">
            <type>string</type>
          </tag>
          <tag name="param" line="255" description="" type="\Closure|string|null" variable="$concrete">
            <type>\Closure</type>
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="param" line="255" description="" type="boolean" variable="$shared">
            <type>boolean</type>
          </tag>
          <tag name="return" line="255" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\Illuminate\Contracts\Container\Container::bindIf()" refers="\Illuminate\Contracts\Container\Container::bindIf()" link="/classes/Illuminate.Contracts.Container.Container.html#method_bindIf"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$abstract</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$concrete</name>
          <default>null</default>
          <type>\Closure|string|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$shared</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Container" line="269" package="Default">
        <name>singleton</name>
        <full_name>\Illuminate\Container\Container::singleton()</full_name>
        <docblock line="269">
          <description>Register a shared binding in the container.</description>
          <long-description/>
          <tag name="param" line="269" description="" type="string|array" variable="$abstract">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="269" description="" type="\Closure|string|null" variable="$concrete">
            <type>\Closure</type>
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="269" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\Illuminate\Contracts\Container\Container::singleton()" refers="\Illuminate\Contracts\Container\Container::singleton()" link="/classes/Illuminate.Contracts.Container.Container.html#method_singleton"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$abstract</name>
          <default/>
          <type>string|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$concrete</name>
          <default>null</default>
          <type>\Closure|string|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Container" line="280" package="Default">
        <name>share</name>
        <full_name>\Illuminate\Container\Container::share()</full_name>
        <docblock line="280">
          <description>Wrap a Closure such that it is shared.</description>
          <long-description/>
          <tag name="param" line="280" description="" type="\Closure" variable="$closure">
            <type>\Closure</type>
          </tag>
          <tag name="return" line="280" description="" type="\Closure">
            <type>\Closure</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$closure</name>
          <default/>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Container" line="305" package="Default">
        <name>extend</name>
        <full_name>\Illuminate\Container\Container::extend()</full_name>
        <docblock line="305">
          <description>"Extend" an abstract type in the container.</description>
          <long-description/>
          <tag name="param" line="305" description="" type="string" variable="$abstract">
            <type>string</type>
          </tag>
          <tag name="param" line="305" description="" type="\Closure" variable="$closure">
            <type>\Closure</type>
          </tag>
          <tag name="return" line="305" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="throws" line="305" description="" type="\InvalidArgumentException">
            <type>\InvalidArgumentException</type>
          </tag>
          <tag name="inherited_from" description="\Illuminate\Contracts\Container\Container::extend()" refers="\Illuminate\Contracts\Container\Container::extend()" link="/classes/Illuminate.Contracts.Container.Container.html#method_extend"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$abstract</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$closure</name>
          <default/>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Container" line="325" package="Default">
        <name>instance</name>
        <full_name>\Illuminate\Container\Container::instance()</full_name>
        <docblock line="325">
          <description>Register an existing instance as shared in the container.</description>
          <long-description/>
          <tag name="param" line="325" description="" type="string" variable="$abstract">
            <type>string</type>
          </tag>
          <tag name="param" line="325" description="" type="mixed" variable="$instance">
            <type>mixed</type>
          </tag>
          <tag name="return" line="325" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\Illuminate\Contracts\Container\Container::instance()" refers="\Illuminate\Contracts\Container\Container::instance()" link="/classes/Illuminate.Contracts.Container.Container.html#method_instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$abstract</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$instance</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Container" line="359" package="Default">
        <name>tag</name>
        <full_name>\Illuminate\Container\Container::tag()</full_name>
        <docblock line="359">
          <description>Assign a set of tags to a given binding.</description>
          <long-description/>
          <tag name="param" line="359" description="" type="array|string" variable="$abstracts">
            <type>array</type>
            <type>string</type>
          </tag>
          <tag name="param" line="359" description="" type="array|mixed" variable="$tags">
            <type>array</type>
            <type>mixed</type>
          </tag>
          <tag name="return" line="359" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\Illuminate\Contracts\Container\Container::tag()" refers="\Illuminate\Contracts\Container\Container::tag()" link="/classes/Illuminate.Contracts.Container.Container.html#method_tag"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$abstracts</name>
          <default/>
          <type>array|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$tags</name>
          <default/>
          <type>array|mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Container" line="380" package="Default">
        <name>tagged</name>
        <full_name>\Illuminate\Container\Container::tagged()</full_name>
        <docblock line="380">
          <description>Resolve all of the bindings for a given tag.</description>
          <long-description/>
          <tag name="param" line="380" description="" type="string" variable="$tag">
            <type>string</type>
          </tag>
          <tag name="return" line="380" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\Illuminate\Contracts\Container\Container::tagged()" refers="\Illuminate\Contracts\Container\Container::tagged()" link="/classes/Illuminate.Contracts.Container.Container.html#method_tagged"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$tag</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Container" line="400" package="Default">
        <name>alias</name>
        <full_name>\Illuminate\Container\Container::alias()</full_name>
        <docblock line="400">
          <description>Alias a type to a different name.</description>
          <long-description/>
          <tag name="param" line="400" description="" type="string" variable="$abstract">
            <type>string</type>
          </tag>
          <tag name="param" line="400" description="" type="string" variable="$alias">
            <type>string</type>
          </tag>
          <tag name="return" line="400" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\Illuminate\Contracts\Container\Container::alias()" refers="\Illuminate\Contracts\Container\Container::alias()" link="/classes/Illuminate.Contracts.Container.Container.html#method_alias"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$abstract</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$alias</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Container" line="411" package="Default">
        <name>extractAlias</name>
        <full_name>\Illuminate\Container\Container::extractAlias()</full_name>
        <docblock line="411">
          <description>Extract the type and alias from a given definition.</description>
          <long-description/>
          <tag name="param" line="411" description="" type="array" variable="$definition">
            <type>array</type>
          </tag>
          <tag name="return" line="411" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$definition</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Container" line="423" package="Default">
        <name>rebinding</name>
        <full_name>\Illuminate\Container\Container::rebinding()</full_name>
        <docblock line="423">
          <description>Bind a new callback to an abstract's rebind event.</description>
          <long-description/>
          <tag name="param" line="423" description="" type="string" variable="$abstract">
            <type>string</type>
          </tag>
          <tag name="param" line="423" description="" type="\Closure" variable="$callback">
            <type>\Closure</type>
          </tag>
          <tag name="return" line="423" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$abstract</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Container" line="440" package="Default">
        <name>refresh</name>
        <full_name>\Illuminate\Container\Container::refresh()</full_name>
        <docblock line="440">
          <description>Refresh an instance on the given target and method.</description>
          <long-description/>
          <tag name="param" line="440" description="" type="string" variable="$abstract">
            <type>string</type>
          </tag>
          <tag name="param" line="440" description="" type="mixed" variable="$target">
            <type>mixed</type>
          </tag>
          <tag name="param" line="440" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="440" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$abstract</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$target</name>
          <default/>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Container" line="453" package="Default">
        <name>rebound</name>
        <full_name>\Illuminate\Container\Container::rebound()</full_name>
        <docblock line="453">
          <description>Fire the "rebound" callbacks for the given abstract type.</description>
          <long-description/>
          <tag name="param" line="453" description="" type="string" variable="$abstract">
            <type>string</type>
          </tag>
          <tag name="return" line="453" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$abstract</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Container" line="468" package="Default">
        <name>getReboundCallbacks</name>
        <full_name>\Illuminate\Container\Container::getReboundCallbacks()</full_name>
        <docblock line="468">
          <description>Get the rebound callbacks for a given type.</description>
          <long-description/>
          <tag name="param" line="468" description="" type="string" variable="$abstract">
            <type>string</type>
          </tag>
          <tag name="return" line="468" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$abstract</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Container" line="484" package="Default">
        <name>wrap</name>
        <full_name>\Illuminate\Container\Container::wrap()</full_name>
        <docblock line="484">
          <description>Wrap the given closure such that its dependencies will be injected when executed.</description>
          <long-description/>
          <tag name="param" line="484" description="" type="\Closure" variable="$callback">
            <type>\Closure</type>
          </tag>
          <tag name="param" line="484" description="" type="array" variable="$parameters">
            <type>array</type>
          </tag>
          <tag name="return" line="484" description="" type="\Closure">
            <type>\Closure</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>\Closure</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$parameters</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Container" line="499" package="Default">
        <name>call</name>
        <full_name>\Illuminate\Container\Container::call()</full_name>
        <docblock line="499">
          <description>Call the given Closure / class@method and inject its dependencies.</description>
          <long-description/>
          <tag name="param" line="499" description="" type="callable|string" variable="$callback">
            <type>callable</type>
            <type>string</type>
          </tag>
          <tag name="param" line="499" description="" type="array" variable="$parameters">
            <type>array</type>
          </tag>
          <tag name="param" line="499" description="" type="string|null" variable="$defaultMethod">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="499" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\Illuminate\Contracts\Container\Container::call()" refers="\Illuminate\Contracts\Container\Container::call()" link="/classes/Illuminate.Contracts.Container.Container.html#method_call"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>callable|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$parameters</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$defaultMethod</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Container" line="516" package="Default">
        <name>isCallableWithAtSign</name>
        <full_name>\Illuminate\Container\Container::isCallableWithAtSign()</full_name>
        <docblock line="516">
          <description>Determine if the given string is in Class@method syntax.</description>
          <long-description/>
          <tag name="param" line="516" description="" type="mixed" variable="$callback">
            <type>mixed</type>
          </tag>
          <tag name="return" line="516" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Container" line="528" package="Default">
        <name>getMethodDependencies</name>
        <full_name>\Illuminate\Container\Container::getMethodDependencies()</full_name>
        <docblock line="528">
          <description>Get all dependencies for a given method.</description>
          <long-description/>
          <tag name="param" line="528" description="" type="callable|string" variable="$callback">
            <type>callable</type>
            <type>string</type>
          </tag>
          <tag name="param" line="528" description="" type="array" variable="$parameters">
            <type>array</type>
          </tag>
          <tag name="return" line="528" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>callable|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$parameters</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Container" line="545" package="Default">
        <name>getCallReflector</name>
        <full_name>\Illuminate\Container\Container::getCallReflector()</full_name>
        <docblock line="545">
          <description>Get the proper reflection instance for the given callback.</description>
          <long-description/>
          <tag name="param" line="545" description="" type="callable|string" variable="$callback">
            <type>callable</type>
            <type>string</type>
          </tag>
          <tag name="return" line="545" description="" type="\ReflectionFunctionAbstract">
            <type>\ReflectionFunctionAbstract</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>callable|string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Container" line="566" package="Default">
        <name>addDependencyForCallParameter</name>
        <full_name>\Illuminate\Container\Container::addDependencyForCallParameter()</full_name>
        <docblock line="566">
          <description>Get the dependency for the given call parameter.</description>
          <long-description/>
          <tag name="param" line="566" description="" type="\ReflectionParameter" variable="$parameter">
            <type>\ReflectionParameter</type>
          </tag>
          <tag name="param" line="566" description="" type="array" variable="$parameters">
            <type>array</type>
          </tag>
          <tag name="param" line="566" description="" type="array" variable="$dependencies">
            <type>array</type>
          </tag>
          <tag name="return" line="566" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parameter</name>
          <default/>
          <type>\ReflectionParameter</type>
        </argument>
        <argument line="0" by_reference="true">
          <name>$parameters</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="true">
          <name>$dependencies</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Container" line="589" package="Default">
        <name>callClass</name>
        <full_name>\Illuminate\Container\Container::callClass()</full_name>
        <docblock line="589">
          <description>Call a string reference to a class using Class@method syntax.</description>
          <long-description/>
          <tag name="param" line="589" description="" type="string" variable="$target">
            <type>string</type>
          </tag>
          <tag name="param" line="589" description="" type="array" variable="$parameters">
            <type>array</type>
          </tag>
          <tag name="param" line="589" description="" type="string|null" variable="$defaultMethod">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="589" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="589" description="" type="\InvalidArgumentException">
            <type>\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$target</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$parameters</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$defaultMethod</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Container" line="612" package="Default">
        <name>make</name>
        <full_name>\Illuminate\Container\Container::make()</full_name>
        <docblock line="612">
          <description>Resolve the given type from the container.</description>
          <long-description/>
          <tag name="param" line="612" description="" type="string" variable="$abstract">
            <type>string</type>
          </tag>
          <tag name="param" line="612" description="" type="array" variable="$parameters">
            <type>array</type>
          </tag>
          <tag name="return" line="612" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\Illuminate\Contracts\Container\Container::make()" refers="\Illuminate\Contracts\Container\Container::make()" link="/classes/Illuminate.Contracts.Container.Container.html#method_make"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$abstract</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$parameters</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Container" line="661" package="Default">
        <name>getConcrete</name>
        <full_name>\Illuminate\Container\Container::getConcrete()</full_name>
        <docblock line="661">
          <description>Get the concrete type for a given abstract.</description>
          <long-description/>
          <tag name="param" line="661" description="" type="string" variable="$abstract">
            <type>string</type>
          </tag>
          <tag name="return" line="661" description="$concrete" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$abstract</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Container" line="683" package="Default">
        <name>getContextualConcrete</name>
        <full_name>\Illuminate\Container\Container::getContextualConcrete()</full_name>
        <docblock line="683">
          <description>Get the contextual concrete binding for the given abstract.</description>
          <long-description/>
          <tag name="param" line="683" description="" type="string" variable="$abstract">
            <type>string</type>
          </tag>
          <tag name="return" line="683" description="" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$abstract</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Container" line="696" package="Default">
        <name>normalize</name>
        <full_name>\Illuminate\Container\Container::normalize()</full_name>
        <docblock line="696">
          <description>Normalize the given class name by removing leading slashes.</description>
          <long-description/>
          <tag name="param" line="696" description="" type="mixed" variable="$service">
            <type>mixed</type>
          </tag>
          <tag name="return" line="696" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$service</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Container" line="707" package="Default">
        <name>getExtenders</name>
        <full_name>\Illuminate\Container\Container::getExtenders()</full_name>
        <docblock line="707">
          <description>Get the extender callbacks for a given type.</description>
          <long-description/>
          <tag name="param" line="707" description="" type="string" variable="$abstract">
            <type>string</type>
          </tag>
          <tag name="return" line="707" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$abstract</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Container" line="725" package="Default">
        <name>build</name>
        <full_name>\Illuminate\Container\Container::build()</full_name>
        <docblock line="725">
          <description>Instantiate a concrete instance of the given type.</description>
          <long-description/>
          <tag name="param" line="725" description="" type="string" variable="$concrete">
            <type>string</type>
          </tag>
          <tag name="param" line="725" description="" type="array" variable="$parameters">
            <type>array</type>
          </tag>
          <tag name="return" line="725" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="725" description="" type="\Illuminate\Contracts\Container\BindingResolutionException">
            <type>\Illuminate\Contracts\Container\BindingResolutionException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$concrete</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$parameters</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Container" line="789" package="Default">
        <name>getDependencies</name>
        <full_name>\Illuminate\Container\Container::getDependencies()</full_name>
        <docblock line="789">
          <description>Resolve all of the dependencies from the ReflectionParameters.</description>
          <long-description/>
          <tag name="param" line="789" description="" type="array" variable="$parameters">
            <type>array</type>
          </tag>
          <tag name="param" line="789" description="" type="array" variable="$primitives">
            <type>array</type>
          </tag>
          <tag name="return" line="789" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parameters</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$primitives</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Container" line="819" package="Default">
        <name>resolveNonClass</name>
        <full_name>\Illuminate\Container\Container::resolveNonClass()</full_name>
        <docblock line="819">
          <description>Resolve a non-class hinted dependency.</description>
          <long-description/>
          <tag name="param" line="819" description="" type="\ReflectionParameter" variable="$parameter">
            <type>\ReflectionParameter</type>
          </tag>
          <tag name="return" line="819" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="819" description="" type="\Illuminate\Contracts\Container\BindingResolutionException">
            <type>\Illuminate\Contracts\Container\BindingResolutionException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parameter</name>
          <default/>
          <type>\ReflectionParameter</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Container" line="846" package="Default">
        <name>resolveClass</name>
        <full_name>\Illuminate\Container\Container::resolveClass()</full_name>
        <docblock line="846">
          <description>Resolve a class based dependency from the container.</description>
          <long-description/>
          <tag name="param" line="846" description="" type="\ReflectionParameter" variable="$parameter">
            <type>\ReflectionParameter</type>
          </tag>
          <tag name="return" line="846" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="846" description="" type="\Illuminate\Contracts\Container\BindingResolutionException">
            <type>\Illuminate\Contracts\Container\BindingResolutionException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parameter</name>
          <default/>
          <type>\ReflectionParameter</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Container" line="871" package="Default">
        <name>keyParametersByArgument</name>
        <full_name>\Illuminate\Container\Container::keyParametersByArgument()</full_name>
        <docblock line="871">
          <description>If extra parameters are passed by numeric ID, rekey them by argument name.</description>
          <long-description/>
          <tag name="param" line="871" description="" type="array" variable="$dependencies">
            <type>array</type>
          </tag>
          <tag name="param" line="871" description="" type="array" variable="$parameters">
            <type>array</type>
          </tag>
          <tag name="return" line="871" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$dependencies</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$parameters</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Container" line="891" package="Default">
        <name>resolving</name>
        <full_name>\Illuminate\Container\Container::resolving()</full_name>
        <docblock line="891">
          <description>Register a new resolving callback.</description>
          <long-description/>
          <tag name="param" line="891" description="" type="string" variable="$abstract">
            <type>string</type>
          </tag>
          <tag name="param" line="891" description="" type="\Closure|null" variable="$callback">
            <type>\Closure</type>
            <type>null</type>
          </tag>
          <tag name="return" line="891" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\Illuminate\Contracts\Container\Container::resolving()" refers="\Illuminate\Contracts\Container\Container::resolving()" link="/classes/Illuminate.Contracts.Container.Container.html#method_resolving"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$abstract</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default>null</default>
          <type>\Closure|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Container" line="907" package="Default">
        <name>afterResolving</name>
        <full_name>\Illuminate\Container\Container::afterResolving()</full_name>
        <docblock line="907">
          <description>Register a new after resolving callback for all types.</description>
          <long-description/>
          <tag name="param" line="907" description="" type="string" variable="$abstract">
            <type>string</type>
          </tag>
          <tag name="param" line="907" description="" type="\Closure|null" variable="$callback">
            <type>\Closure</type>
            <type>null</type>
          </tag>
          <tag name="return" line="907" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\Illuminate\Contracts\Container\Container::afterResolving()" refers="\Illuminate\Contracts\Container\Container::afterResolving()" link="/classes/Illuminate.Contracts.Container.Container.html#method_afterResolving"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$abstract</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default>null</default>
          <type>\Closure|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Container" line="922" package="Default">
        <name>resolvingCallback</name>
        <full_name>\Illuminate\Container\Container::resolvingCallback()</full_name>
        <docblock line="922">
          <description>Register a new resolving callback by type of its first argument.</description>
          <long-description/>
          <tag name="param" line="922" description="" type="\Closure" variable="$callback">
            <type>\Closure</type>
          </tag>
          <tag name="return" line="922" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Container" line="939" package="Default">
        <name>afterResolvingCallback</name>
        <full_name>\Illuminate\Container\Container::afterResolvingCallback()</full_name>
        <docblock line="939">
          <description>Register a new after resolving callback by type of its first argument.</description>
          <long-description/>
          <tag name="param" line="939" description="" type="\Closure" variable="$callback">
            <type>\Closure</type>
          </tag>
          <tag name="return" line="939" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Container" line="956" package="Default">
        <name>getFunctionHint</name>
        <full_name>\Illuminate\Container\Container::getFunctionHint()</full_name>
        <docblock line="956">
          <description>Get the type hint for this closure's first argument.</description>
          <long-description/>
          <tag name="param" line="956" description="" type="\Closure" variable="$callback">
            <type>\Closure</type>
          </tag>
          <tag name="return" line="956" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Container" line="980" package="Default">
        <name>fireResolvingCallbacks</name>
        <full_name>\Illuminate\Container\Container::fireResolvingCallbacks()</full_name>
        <docblock line="980">
          <description>Fire all of the resolving callbacks.</description>
          <long-description/>
          <tag name="param" line="980" description="" type="string" variable="$abstract">
            <type>string</type>
          </tag>
          <tag name="param" line="980" description="" type="mixed" variable="$object">
            <type>mixed</type>
          </tag>
          <tag name="return" line="980" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$abstract</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$object</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Container" line="1008" package="Default">
        <name>getCallbacksForType</name>
        <full_name>\Illuminate\Container\Container::getCallbacksForType()</full_name>
        <docblock line="1008">
          <description>Get all callbacks for a given type.</description>
          <long-description/>
          <tag name="param" line="1008" description="" type="string" variable="$abstract">
            <type>string</type>
          </tag>
          <tag name="param" line="1008" description="" type="object" variable="$object">
            <type>object</type>
          </tag>
          <tag name="param" line="1008" description="" type="array" variable="$callbacksPerType">
            <type>array</type>
          </tag>
          <tag name="return" line="1008" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$abstract</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$object</name>
          <default/>
          <type>object</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$callbacksPerType</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Container" line="1028" package="Default">
        <name>fireCallbackArray</name>
        <full_name>\Illuminate\Container\Container::fireCallbackArray()</full_name>
        <docblock line="1028">
          <description>Fire an array of callbacks with an object.</description>
          <long-description/>
          <tag name="param" line="1028" description="" type="mixed" variable="$object">
            <type>mixed</type>
          </tag>
          <tag name="param" line="1028" description="" type="array" variable="$callbacks">
            <type>array</type>
          </tag>
          <tag name="return" line="1028" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$object</name>
          <default/>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$callbacks</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Container" line="1041" package="Default">
        <name>isShared</name>
        <full_name>\Illuminate\Container\Container::isShared()</full_name>
        <docblock line="1041">
          <description>Determine if a given type is shared.</description>
          <long-description/>
          <tag name="param" line="1041" description="" type="string" variable="$abstract">
            <type>string</type>
          </tag>
          <tag name="return" line="1041" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$abstract</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Container" line="1063" package="Default">
        <name>isBuildable</name>
        <full_name>\Illuminate\Container\Container::isBuildable()</full_name>
        <docblock line="1063">
          <description>Determine if the given concrete is buildable.</description>
          <long-description/>
          <tag name="param" line="1063" description="" type="mixed" variable="$concrete">
            <type>mixed</type>
          </tag>
          <tag name="param" line="1063" description="" type="string" variable="$abstract">
            <type>string</type>
          </tag>
          <tag name="return" line="1063" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$concrete</name>
          <default/>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$abstract</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Container" line="1074" package="Default">
        <name>getAlias</name>
        <full_name>\Illuminate\Container\Container::getAlias()</full_name>
        <docblock line="1074">
          <description>Get the alias for an abstract if available.</description>
          <long-description/>
          <tag name="param" line="1074" description="" type="string" variable="$abstract">
            <type>string</type>
          </tag>
          <tag name="return" line="1074" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$abstract</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Container" line="1084" package="Default">
        <name>getBindings</name>
        <full_name>\Illuminate\Container\Container::getBindings()</full_name>
        <docblock line="1084">
          <description>Get the container's bindings.</description>
          <long-description/>
          <tag name="return" line="1084" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Container" line="1095" package="Default">
        <name>dropStaleInstances</name>
        <full_name>\Illuminate\Container\Container::dropStaleInstances()</full_name>
        <docblock line="1095">
          <description>Drop all of the stale instances and aliases.</description>
          <long-description/>
          <tag name="param" line="1095" description="" type="string" variable="$abstract">
            <type>string</type>
          </tag>
          <tag name="return" line="1095" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$abstract</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Container" line="1106" package="Default">
        <name>forgetInstance</name>
        <full_name>\Illuminate\Container\Container::forgetInstance()</full_name>
        <docblock line="1106">
          <description>Remove a resolved instance from the instance cache.</description>
          <long-description/>
          <tag name="param" line="1106" description="" type="string" variable="$abstract">
            <type>string</type>
          </tag>
          <tag name="return" line="1106" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$abstract</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Container" line="1116" package="Default">
        <name>forgetInstances</name>
        <full_name>\Illuminate\Container\Container::forgetInstances()</full_name>
        <docblock line="1116">
          <description>Clear all of the instances from the container.</description>
          <long-description/>
          <tag name="return" line="1116" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Container" line="1126" package="Default">
        <name>flush</name>
        <full_name>\Illuminate\Container\Container::flush()</full_name>
        <docblock line="1126">
          <description>Flush the container of all bindings and resolved instances.</description>
          <long-description/>
          <tag name="return" line="1126" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Container" line="1139" package="Default">
        <name>getInstance</name>
        <full_name>\Illuminate\Container\Container::getInstance()</full_name>
        <docblock line="1139">
          <description>Set the globally available instance of the container.</description>
          <long-description/>
          <tag name="return" line="1139" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Container" line="1150" package="Default">
        <name>setInstance</name>
        <full_name>\Illuminate\Container\Container::setInstance()</full_name>
        <docblock line="1150">
          <description>Set the shared instance of the container.</description>
          <long-description/>
          <tag name="param" line="1150" description="" type="\Illuminate\Contracts\Container\Container" variable="$container">
            <type>\Illuminate\Contracts\Container\Container</type>
          </tag>
          <tag name="return" line="1150" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$container</name>
          <default/>
          <type>\Illuminate\Contracts\Container\Container</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Container" line="1161" package="Default">
        <name>offsetExists</name>
        <full_name>\Illuminate\Container\Container::offsetExists()</full_name>
        <docblock line="1161">
          <description>Determine if a given offset exists.</description>
          <long-description/>
          <tag name="param" line="1161" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="1161" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Container" line="1172" package="Default">
        <name>offsetGet</name>
        <full_name>\Illuminate\Container\Container::offsetGet()</full_name>
        <docblock line="1172">
          <description>Get the value at a given offset.</description>
          <long-description/>
          <tag name="param" line="1172" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="1172" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Container" line="1184" package="Default">
        <name>offsetSet</name>
        <full_name>\Illuminate\Container\Container::offsetSet()</full_name>
        <docblock line="1184">
          <description>Set the value at a given offset.</description>
          <long-description/>
          <tag name="param" line="1184" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="1184" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="1184" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Container" line="1204" package="Default">
        <name>offsetUnset</name>
        <full_name>\Illuminate\Container\Container::offsetUnset()</full_name>
        <docblock line="1204">
          <description>Unset the value at a given offset.</description>
          <long-description/>
          <tag name="param" line="1204" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="1204" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Container" line="1217" package="Default">
        <name>__get</name>
        <full_name>\Illuminate\Container\Container::__get()</full_name>
        <docblock line="1217">
          <description>Dynamically access container services.</description>
          <long-description/>
          <tag name="param" line="1217" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="1217" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Container" line="1229" package="Default">
        <name>__set</name>
        <full_name>\Illuminate\Container\Container::__set()</full_name>
        <docblock line="1229">
          <description>Dynamically set container services.</description>
          <long-description/>
          <tag name="param" line="1229" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="1229" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="1229" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="15" code="PPC:ERR-50005">No summary for class \Illuminate\Container\Container</error>
    </parse_markers>
    <source></source>
  <type>class</type></file>