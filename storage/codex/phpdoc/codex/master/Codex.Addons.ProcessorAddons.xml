<file path="codex/workbench/codex/core/src/Addons/ProcessorAddons.php" generated-path="codex.workbench.codex.core.src.Addons.ProcessorAddons.html" hash="cefe70bfeb2894c65d7a878dc7206a62" package="Default">
    <docblock line="0">
      <description/>
      <long-description/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Processor">\Codex\Addons\Annotations\Processor</namespace-alias>
    <namespace-alias name="ClassFileInfo">\Codex\Addons\Scanner\ClassFileInfo</namespace-alias>
    <namespace-alias name="Document">\Codex\Documents\Document</namespace-alias>
    <namespace-alias name="CodexException">\Codex\Exception\CodexException</namespace-alias>
    <namespace-alias name="Collection">\Codex\Support\Collection</namespace-alias>
    <namespace-alias name="Sorter">\Codex\Support\Sorter</namespace-alias>
    <namespace-alias name="HookableTrait">\Codex\Traits\HookableTrait</namespace-alias>
    <class final="false" abstract="false" namespace="Codex\Addons" line="20" package="Codex\Core">
      <extends>\Codex\Addons\AbstractAddonCollection</extends>
      <name>ProcessorAddons</name>
      <full_name>\Codex\Addons\ProcessorAddons</full_name>
      <docblock line="20">
        <description>This is the class FilterAddons.</description>
        <long-description/>
        <tag name="package" line="20" description="Codex\Core"/>
        <tag name="author" line="20" description="CLI"/>
        <tag name="copyright" line="20" description="Copyright (c) 2015, CLI. All rights reserved"/>
        <tag name="inherited_from" description="\Codex\Addons\AbstractAddonCollection" refers="\Codex\Addons\AbstractAddonCollection" link="/classes/Codex.Addons.AbstractAddonCollection.html"/>
      </docblock>
      <constant namespace="Codex\Addons" line="24" package="Codex\Core">
        <name>MISSING_THROWS_EXECEPTION</name>
        <full_name>\Codex\Addons\ProcessorAddons::MISSING_THROWS_EXECEPTION</full_name>
        <value>1</value>
        <docblock line="24">
          <description/>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="Codex\Addons" line="25" package="Codex\Core">
        <name>MISSING_IGNORED</name>
        <full_name>\Codex\Addons\ProcessorAddons::MISSING_IGNORED</full_name>
        <value>2</value>
        <docblock line="25">
          <description/>
          <long-description/>
        </docblock>
      </constant>
      <property static="true" visibility="public" namespace="Codex\Addons" line="27" package="Codex\Core">
        <name>$handleMissing</name>
        <full_name>\Codex\Addons\ProcessorAddons::handleMissing</full_name>
        <default>self::MISSING_IGNORED</default>
        <docblock line="27">
          <description/>
          <long-description/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Codex\Addons" line="29" package="Codex\Core">
        <name>$currentDocument</name>
        <full_name>\Codex\Addons\ProcessorAddons::currentDocument</full_name>
        <default/>
        <docblock line="29">
          <description/>
          <long-description/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Codex\Addons" line="15" package="Default">
        <name>$addons</name>
        <full_name>\Codex\Addons\AbstractAddonCollection::addons</full_name>
        <default/>
        <docblock line="15">
          <description/>
          <long-description/>
          <tag name="var" line="15" description="" type="\Codex\Addons\Addons" variable="">
            <type>\Codex\Addons\Addons</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Codex\Addons" line="18" package="Default">
        <name>$app</name>
        <full_name>\Codex\Addons\AbstractAddonCollection::app</full_name>
        <default/>
        <docblock line="18">
          <description/>
          <long-description/>
          <tag name="var" line="18" description="" type="\Illuminate\Contracts\Foundation\Application" variable="">
            <type>\Illuminate\Contracts\Foundation\Application</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Codex\Addons" line="25" package="Default">
        <name>$items</name>
        <full_name>\Illuminate\Support\Collection::items</full_name>
        <default>array()</default>
        <docblock line="25">
          <description>The items contained in the collection.</description>
          <long-description/>
          <tag name="var" line="25" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="protected" namespace="Codex\Addons" line="15" package="Default">
        <name>$macros</name>
        <full_name>\Illuminate\Support\Traits\Macroable::macros</full_name>
        <default>array()</default>
        <docblock line="15">
          <description>The registered string macros.</description>
          <long-description/>
          <tag name="var" line="15" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="31" package="Codex\Core">
        <name>add</name>
        <full_name>\Codex\Addons\ProcessorAddons::add()</full_name>
        <docblock line="31">
          <description/>
          <long-description/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$file</name>
          <default/>
          <type>\Codex\Addons\Scanner\ClassFileInfo</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$annotation</name>
          <default/>
          <type>\Codex\Addons\Annotations\Processor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Codex\Addons" line="40" package="Codex\Core">
        <name>getInstance</name>
        <full_name>\Codex\Addons\ProcessorAddons::getInstance()</full_name>
        <docblock line="40">
          <description/>
          <long-description/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="51" package="Codex\Core">
        <name>run</name>
        <full_name>\Codex\Addons\ProcessorAddons::run()</full_name>
        <docblock line="51">
          <description/>
          <long-description/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$document</name>
          <default/>
          <type>\Codex\Documents\Document</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="105" package="Codex\Core">
        <name>get</name>
        <full_name>\Codex\Addons\ProcessorAddons::get()</full_name>
        <docblock line="105">
          <description>Get an item from the collection by key.</description>
          <long-description/>
          <tag name="inherited_from" description="\Codex\Addons\AbstractAddonCollection::get()" refers="\Codex\Addons\AbstractAddonCollection::get()" link="/classes/Codex.Addons.AbstractAddonCollection.html#method_get"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$default</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="115" package="Codex\Core">
        <name>hasAll</name>
        <full_name>\Codex\Addons\ProcessorAddons::hasAll()</full_name>
        <docblock line="115">
          <description/>
          <long-description/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$names</name>
          <default/>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$returnHasNot</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="131" package="Codex\Core">
        <name>getSorted</name>
        <full_name>\Codex\Addons\ProcessorAddons::getSorted()</full_name>
        <docblock line="131">
          <description/>
          <long-description/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$names</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="178" package="Codex\Core">
        <name>replaceProcessors</name>
        <full_name>\Codex\Addons\ProcessorAddons::replaceProcessors()</full_name>
        <docblock line="178">
          <description/>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Codex\Addons" line="191" package="Codex\Core">
        <name>replaceProcessor</name>
        <full_name>\Codex\Addons\ProcessorAddons::replaceProcessor()</full_name>
        <docblock line="191">
          <description/>
          <long-description/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$items</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Codex\Addons" line="23" package="Default">
        <name>getEventName</name>
        <full_name>\Codex\Traits\HookableTrait::getEventName()</full_name>
        <docblock line="23">
          <description>Returns the transformed (namespaced) event name for a hook</description>
          <long-description/>
          <tag name="param" line="23" description="&lt;p&gt;The hook name&lt;/p&gt;" type="string" variable="$event">
            <type>string</type>
          </tag>
          <tag name="return" line="23" description="The transformed event name" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$event</name>
          <default/>
          <type>string</type>
        </argument>
        <inherited_from>\Codex\Traits\HookableTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Codex\Addons" line="37" package="Default">
        <name>hook</name>
        <full_name>\Codex\Traits\HookableTrait::hook()</full_name>
        <docblock line="37">
          <description>Create a Codex Hook</description>
          <long-description/>
          <tag name="param" line="37" description="&lt;p&gt;The hook name&lt;/p&gt;" type="string" variable="$event">
            <type>string</type>
          </tag>
          <tag name="param" line="37" description="&lt;p&gt;The callback to execute&lt;/p&gt;" type="string|\Closure" variable="$callback">
            <type>string</type>
            <type>\Closure</type>
          </tag>
          <tag name="param" line="37" description="&lt;p&gt;(optional) The priority&lt;/p&gt;" type="integer" variable="$priority">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$event</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>string|\Closure</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$priority</name>
          <default>1</default>
          <type>integer</type>
        </argument>
        <inherited_from>\Codex\Traits\HookableTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Codex\Addons" line="51" package="Default">
        <name>hookPoint</name>
        <full_name>\Codex\Traits\HookableTrait::hookPoint()</full_name>
        <docblock line="51">
          <description>Defines a point where hooks can hook</description>
          <long-description/>
          <tag name="param" line="51" description="&lt;p&gt;The hook name&lt;/p&gt;" type="string" variable="$event">
            <type>string</type>
          </tag>
          <tag name="param" line="51" description="&lt;p&gt;(optional) The arguments to pass along&lt;/p&gt;" type="array" variable="$args">
            <type>array</type>
          </tag>
          <tag name="param" line="51" description="&lt;p&gt;(optional) If this hook can halt&lt;/p&gt;" type="boolean" variable="$halt">
            <type>boolean</type>
          </tag>
          <tag name="return" line="51" description="" type="array|null">
            <type>array</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$event</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$halt</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\Codex\Traits\HookableTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Codex\Addons" line="65" package="Default">
        <name>fireEvent</name>
        <full_name>\Codex\Traits\HookableTrait::fireEvent()</full_name>
        <docblock line="65">
          <description>Fires an event for hooks</description>
          <long-description/>
          <tag name="param" line="65" description="&lt;p&gt;The hook name&lt;/p&gt;" type="string" variable="$event">
            <type>string</type>
          </tag>
          <tag name="param" line="65" description="&lt;p&gt;(optional) The arguments to pass along&lt;/p&gt;" type="array" variable="$args">
            <type>array</type>
          </tag>
          <tag name="param" line="65" description="&lt;p&gt;(optional) If this hook can halt&lt;/p&gt;" type="boolean" variable="$halt">
            <type>boolean</type>
          </tag>
          <tag name="return" line="65" description="" type="array|null">
            <type>array</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$event</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$halt</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\Codex\Traits\HookableTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="33" package="Default">
        <name>__construct</name>
        <full_name>\Illuminate\Support\Collection::__construct()</full_name>
        <docblock line="33">
          <description>Create a new collection.</description>
          <long-description/>
          <tag name="param" line="33" description="" type="mixed" variable="$items">
            <type>mixed</type>
          </tag>
          <tag name="return" line="33" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$items</name>
          <default>array()</default>
          <type>mixed</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="324" package="Default">
        <name>get</name>
        <full_name>\Illuminate\Support\Collection::get()</full_name>
        <docblock line="324">
          <description>Get an item from the collection by key.</description>
          <long-description/>
          <tag name="param" line="324" description="" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="param" line="324" description="" type="mixed" variable="$default">
            <type>mixed</type>
          </tag>
          <tag name="return" line="324" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$default</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="32" package="Default">
        <name>set</name>
        <full_name>\Codex\Addons\AbstractAddonCollection::set()</full_name>
        <docblock line="32">
          <description/>
          <long-description/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
        <inherited_from>\Codex\Addons\AbstractAddonCollection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="37" package="Default">
        <name>whereHas</name>
        <full_name>\Codex\Addons\AbstractAddonCollection::whereHas()</full_name>
        <docblock line="37">
          <description/>
          <long-description/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
        <inherited_from>\Codex\Addons\AbstractAddonCollection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="46" package="Default">
        <name>createProvider</name>
        <full_name>\Codex\Addons\AbstractAddonCollection::createProvider()</full_name>
        <docblock line="46">
          <description/>
          <long-description/>
          <tag name="deprecated" line="46" description=""/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$file</name>
          <default/>
          <type>\Codex\Addons\Scanner\ClassFileInfo</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$instance</name>
          <default>null</default>
          <type/>
        </argument>
        <inherited_from>\Codex\Addons\AbstractAddonCollection</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Codex\Addons" line="44" package="Default">
        <name>make</name>
        <full_name>\Illuminate\Support\Collection::make()</full_name>
        <docblock line="44">
          <description>Create a new collection instance if the value isn't one already.</description>
          <long-description/>
          <tag name="param" line="44" description="" type="mixed" variable="$items">
            <type>mixed</type>
          </tag>
          <tag name="return" line="44" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$items</name>
          <default>array()</default>
          <type>mixed</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="54" package="Default">
        <name>all</name>
        <full_name>\Illuminate\Support\Collection::all()</full_name>
        <docblock line="54">
          <description>Get all of the items in the collection.</description>
          <long-description/>
          <tag name="return" line="54" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="65" package="Default">
        <name>avg</name>
        <full_name>\Illuminate\Support\Collection::avg()</full_name>
        <docblock line="65">
          <description>Get the average value of a given key.</description>
          <long-description/>
          <tag name="param" line="65" description="" type="string|null" variable="$key">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="65" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="78" package="Default">
        <name>average</name>
        <full_name>\Illuminate\Support\Collection::average()</full_name>
        <docblock line="78">
          <description>Alias for the "avg" method.</description>
          <long-description/>
          <tag name="param" line="78" description="" type="string|null" variable="$key">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="78" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="88" package="Default">
        <name>collapse</name>
        <full_name>\Illuminate\Support\Collection::collapse()</full_name>
        <docblock line="88">
          <description>Collapse the collection of items into a single array.</description>
          <long-description/>
          <tag name="return" line="88" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="100" package="Default">
        <name>contains</name>
        <full_name>\Illuminate\Support\Collection::contains()</full_name>
        <docblock line="100">
          <description>Determine if an item exists in the collection.</description>
          <long-description/>
          <tag name="param" line="100" description="" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="param" line="100" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="100" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="121" package="Default">
        <name>diff</name>
        <full_name>\Illuminate\Support\Collection::diff()</full_name>
        <docblock line="121">
          <description>Get the items in the collection that are not present in the given items.</description>
          <long-description/>
          <tag name="param" line="121" description="" type="mixed" variable="$items">
            <type>mixed</type>
          </tag>
          <tag name="return" line="121" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$items</name>
          <default/>
          <type>mixed</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="132" package="Default">
        <name>diffKeys</name>
        <full_name>\Illuminate\Support\Collection::diffKeys()</full_name>
        <docblock line="132">
          <description>Get the items in the collection whose keys are not present in the given items.</description>
          <long-description/>
          <tag name="param" line="132" description="" type="mixed" variable="$items">
            <type>mixed</type>
          </tag>
          <tag name="return" line="132" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$items</name>
          <default/>
          <type>mixed</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="143" package="Default">
        <name>each</name>
        <full_name>\Illuminate\Support\Collection::each()</full_name>
        <docblock line="143">
          <description>Execute a callback over each item.</description>
          <long-description/>
          <tag name="param" line="143" description="" type="callable" variable="$callback">
            <type>callable</type>
          </tag>
          <tag name="return" line="143" description="" type="\Codex\Addons\ProcessorAddons">
            <type>\Codex\Addons\ProcessorAddons</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>callable</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="161" package="Default">
        <name>every</name>
        <full_name>\Illuminate\Support\Collection::every()</full_name>
        <docblock line="161">
          <description>Create a new collection consisting of every n-th element.</description>
          <long-description/>
          <tag name="param" line="161" description="" type="integer" variable="$step">
            <type>integer</type>
          </tag>
          <tag name="param" line="161" description="" type="integer" variable="$offset">
            <type>integer</type>
          </tag>
          <tag name="return" line="161" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$step</name>
          <default/>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="184" package="Default">
        <name>except</name>
        <full_name>\Illuminate\Support\Collection::except()</full_name>
        <docblock line="184">
          <description>Get all items except for those with the specified keys.</description>
          <long-description/>
          <tag name="param" line="184" description="" type="mixed" variable="$keys">
            <type>mixed</type>
          </tag>
          <tag name="return" line="184" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$keys</name>
          <default/>
          <type>mixed</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="197" package="Default">
        <name>filter</name>
        <full_name>\Illuminate\Support\Collection::filter()</full_name>
        <docblock line="197">
          <description>Run a filter over each of the items.</description>
          <long-description/>
          <tag name="param" line="197" description="" type="callable|null" variable="$callback">
            <type>callable</type>
            <type>null</type>
          </tag>
          <tag name="return" line="197" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default>null</default>
          <type>callable|null</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="222" package="Default">
        <name>where</name>
        <full_name>\Illuminate\Support\Collection::where()</full_name>
        <docblock line="222">
          <description>Filter items by the given key value pair.</description>
          <long-description/>
          <tag name="param" line="222" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="222" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="param" line="222" description="" type="boolean" variable="$strict">
            <type>boolean</type>
          </tag>
          <tag name="return" line="222" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$strict</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="237" package="Default">
        <name>whereLoose</name>
        <full_name>\Illuminate\Support\Collection::whereLoose()</full_name>
        <docblock line="237">
          <description>Filter items by the given key value pair using loose comparison.</description>
          <long-description/>
          <tag name="param" line="237" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="237" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="237" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>mixed</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="250" package="Default">
        <name>whereIn</name>
        <full_name>\Illuminate\Support\Collection::whereIn()</full_name>
        <docblock line="250">
          <description>Filter items by the given key value pair.</description>
          <long-description/>
          <tag name="param" line="250" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="250" description="" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="param" line="250" description="" type="boolean" variable="$strict">
            <type>boolean</type>
          </tag>
          <tag name="return" line="250" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$strict</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="264" package="Default">
        <name>whereInLoose</name>
        <full_name>\Illuminate\Support\Collection::whereInLoose()</full_name>
        <docblock line="264">
          <description>Filter items by the given key value pair using loose comparison.</description>
          <long-description/>
          <tag name="param" line="264" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="264" description="" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="return" line="264" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default/>
          <type>array</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="276" package="Default">
        <name>first</name>
        <full_name>\Illuminate\Support\Collection::first()</full_name>
        <docblock line="276">
          <description>Get the first item from the collection.</description>
          <long-description/>
          <tag name="param" line="276" description="" type="callable|null" variable="$callback">
            <type>callable</type>
            <type>null</type>
          </tag>
          <tag name="param" line="276" description="" type="mixed" variable="$default">
            <type>mixed</type>
          </tag>
          <tag name="return" line="276" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default>null</default>
          <type>callable|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$default</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="287" package="Default">
        <name>flatten</name>
        <full_name>\Illuminate\Support\Collection::flatten()</full_name>
        <docblock line="287">
          <description>Get a flattened array of the items in the collection.</description>
          <long-description/>
          <tag name="param" line="287" description="" type="integer" variable="$depth">
            <type>integer</type>
          </tag>
          <tag name="return" line="287" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$depth</name>
          <default>INF</default>
          <type>integer</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="297" package="Default">
        <name>flip</name>
        <full_name>\Illuminate\Support\Collection::flip()</full_name>
        <docblock line="297">
          <description>Flip the items in the collection.</description>
          <long-description/>
          <tag name="return" line="297" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="308" package="Default">
        <name>forget</name>
        <full_name>\Illuminate\Support\Collection::forget()</full_name>
        <docblock line="308">
          <description>Remove an item from the collection by key.</description>
          <long-description/>
          <tag name="param" line="308" description="" type="string|array" variable="$keys">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="return" line="308" description="" type="\Codex\Addons\ProcessorAddons">
            <type>\Codex\Addons\ProcessorAddons</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$keys</name>
          <default/>
          <type>string|array</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="340" package="Default">
        <name>groupBy</name>
        <full_name>\Illuminate\Support\Collection::groupBy()</full_name>
        <docblock line="340">
          <description>Group an associative array by a field or using a callback.</description>
          <long-description/>
          <tag name="param" line="340" description="" type="callable|string" variable="$groupBy">
            <type>callable</type>
            <type>string</type>
          </tag>
          <tag name="param" line="340" description="" type="boolean" variable="$preserveKeys">
            <type>boolean</type>
          </tag>
          <tag name="return" line="340" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$groupBy</name>
          <default/>
          <type>callable|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$preserveKeys</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="371" package="Default">
        <name>keyBy</name>
        <full_name>\Illuminate\Support\Collection::keyBy()</full_name>
        <docblock line="371">
          <description>Key an associative array by a field or using a callback.</description>
          <long-description/>
          <tag name="param" line="371" description="" type="callable|string" variable="$keyBy">
            <type>callable</type>
            <type>string</type>
          </tag>
          <tag name="return" line="371" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$keyBy</name>
          <default/>
          <type>callable|string</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="390" package="Default">
        <name>has</name>
        <full_name>\Illuminate\Support\Collection::has()</full_name>
        <docblock line="390">
          <description>Determine if an item exists in the collection by key.</description>
          <long-description/>
          <tag name="param" line="390" description="" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="return" line="390" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>mixed</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="402" package="Default">
        <name>implode</name>
        <full_name>\Illuminate\Support\Collection::implode()</full_name>
        <docblock line="402">
          <description>Concatenate values of a given key as a string.</description>
          <long-description/>
          <tag name="param" line="402" description="" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="param" line="402" description="" type="string" variable="$glue">
            <type>string</type>
          </tag>
          <tag name="return" line="402" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$glue</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="419" package="Default">
        <name>intersect</name>
        <full_name>\Illuminate\Support\Collection::intersect()</full_name>
        <docblock line="419">
          <description>Intersect the collection with the given items.</description>
          <long-description/>
          <tag name="param" line="419" description="" type="mixed" variable="$items">
            <type>mixed</type>
          </tag>
          <tag name="return" line="419" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$items</name>
          <default/>
          <type>mixed</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="429" package="Default">
        <name>isEmpty</name>
        <full_name>\Illuminate\Support\Collection::isEmpty()</full_name>
        <docblock line="429">
          <description>Determine if the collection is empty or not.</description>
          <long-description/>
          <tag name="return" line="429" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Codex\Addons" line="440" package="Default">
        <name>useAsCallable</name>
        <full_name>\Illuminate\Support\Collection::useAsCallable()</full_name>
        <docblock line="440">
          <description>Determine if the given value is callable, but not a string.</description>
          <long-description/>
          <tag name="param" line="440" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="440" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>mixed</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="450" package="Default">
        <name>keys</name>
        <full_name>\Illuminate\Support\Collection::keys()</full_name>
        <docblock line="450">
          <description>Get the keys of the collection items.</description>
          <long-description/>
          <tag name="return" line="450" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="462" package="Default">
        <name>last</name>
        <full_name>\Illuminate\Support\Collection::last()</full_name>
        <docblock line="462">
          <description>Get the last item from the collection.</description>
          <long-description/>
          <tag name="param" line="462" description="" type="callable|null" variable="$callback">
            <type>callable</type>
            <type>null</type>
          </tag>
          <tag name="param" line="462" description="" type="mixed" variable="$default">
            <type>mixed</type>
          </tag>
          <tag name="return" line="462" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default>null</default>
          <type>callable|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$default</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="474" package="Default">
        <name>pluck</name>
        <full_name>\Illuminate\Support\Collection::pluck()</full_name>
        <docblock line="474">
          <description>Get the values of a given key.</description>
          <long-description/>
          <tag name="param" line="474" description="" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="param" line="474" description="" type="string|null" variable="$key">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="474" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="488" package="Default">
        <name>lists</name>
        <full_name>\Illuminate\Support\Collection::lists()</full_name>
        <docblock line="488">
          <description>Alias for the "pluck" method.</description>
          <long-description/>
          <tag name="param" line="488" description="" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="param" line="488" description="" type="string|null" variable="$key">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="488" description="" type="static">
            <type>static</type>
          </tag>
          <tag name="deprecated" line="488" description="since version 5.2. Use the &quot;pluck&quot; method directly."/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="499" package="Default">
        <name>map</name>
        <full_name>\Illuminate\Support\Collection::map()</full_name>
        <docblock line="499">
          <description>Run a map over each of the items.</description>
          <long-description/>
          <tag name="param" line="499" description="" type="callable" variable="$callback">
            <type>callable</type>
          </tag>
          <tag name="return" line="499" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>callable</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="514" package="Default">
        <name>flatMap</name>
        <full_name>\Illuminate\Support\Collection::flatMap()</full_name>
        <docblock line="514">
          <description>Map a collection and flatten the result by a single level.</description>
          <long-description/>
          <tag name="param" line="514" description="" type="callable" variable="$callback">
            <type>callable</type>
          </tag>
          <tag name="return" line="514" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>callable</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="525" package="Default">
        <name>max</name>
        <full_name>\Illuminate\Support\Collection::max()</full_name>
        <docblock line="525">
          <description>Get the max value of a given key.</description>
          <long-description/>
          <tag name="param" line="525" description="" type="string|null" variable="$key">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="525" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="540" package="Default">
        <name>merge</name>
        <full_name>\Illuminate\Support\Collection::merge()</full_name>
        <docblock line="540">
          <description>Merge the collection with the given items.</description>
          <long-description/>
          <tag name="param" line="540" description="" type="mixed" variable="$items">
            <type>mixed</type>
          </tag>
          <tag name="return" line="540" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$items</name>
          <default/>
          <type>mixed</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="551" package="Default">
        <name>combine</name>
        <full_name>\Illuminate\Support\Collection::combine()</full_name>
        <docblock line="551">
          <description>Create a collection by using this collection for keys and another for its values.</description>
          <long-description/>
          <tag name="param" line="551" description="" type="mixed" variable="$values">
            <type>mixed</type>
          </tag>
          <tag name="return" line="551" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default/>
          <type>mixed</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="562" package="Default">
        <name>union</name>
        <full_name>\Illuminate\Support\Collection::union()</full_name>
        <docblock line="562">
          <description>Union the collection with the given items.</description>
          <long-description/>
          <tag name="param" line="562" description="" type="mixed" variable="$items">
            <type>mixed</type>
          </tag>
          <tag name="return" line="562" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$items</name>
          <default/>
          <type>mixed</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="573" package="Default">
        <name>min</name>
        <full_name>\Illuminate\Support\Collection::min()</full_name>
        <docblock line="573">
          <description>Get the min value of a given key.</description>
          <long-description/>
          <tag name="param" line="573" description="" type="string|null" variable="$key">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="573" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="588" package="Default">
        <name>only</name>
        <full_name>\Illuminate\Support\Collection::only()</full_name>
        <docblock line="588">
          <description>Get the items with the specified keys.</description>
          <long-description/>
          <tag name="param" line="588" description="" type="mixed" variable="$keys">
            <type>mixed</type>
          </tag>
          <tag name="return" line="588" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$keys</name>
          <default/>
          <type>mixed</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="602" package="Default">
        <name>forPage</name>
        <full_name>\Illuminate\Support\Collection::forPage()</full_name>
        <docblock line="602">
          <description>"Paginate" the collection by slicing it into a smaller collection.</description>
          <long-description/>
          <tag name="param" line="602" description="" type="integer" variable="$page">
            <type>integer</type>
          </tag>
          <tag name="param" line="602" description="" type="integer" variable="$perPage">
            <type>integer</type>
          </tag>
          <tag name="return" line="602" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$page</name>
          <default/>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$perPage</name>
          <default/>
          <type>integer</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="612" package="Default">
        <name>pop</name>
        <full_name>\Illuminate\Support\Collection::pop()</full_name>
        <docblock line="612">
          <description>Get and remove the last item from the collection.</description>
          <long-description/>
          <tag name="return" line="612" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="624" package="Default">
        <name>prepend</name>
        <full_name>\Illuminate\Support\Collection::prepend()</full_name>
        <docblock line="624">
          <description>Push an item onto the beginning of the collection.</description>
          <long-description/>
          <tag name="param" line="624" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="param" line="624" description="" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="return" line="624" description="" type="\Codex\Addons\ProcessorAddons">
            <type>\Codex\Addons\ProcessorAddons</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="637" package="Default">
        <name>push</name>
        <full_name>\Illuminate\Support\Collection::push()</full_name>
        <docblock line="637">
          <description>Push an item onto the end of the collection.</description>
          <long-description/>
          <tag name="param" line="637" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="637" description="" type="\Codex\Addons\ProcessorAddons">
            <type>\Codex\Addons\ProcessorAddons</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>mixed</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="651" package="Default">
        <name>pull</name>
        <full_name>\Illuminate\Support\Collection::pull()</full_name>
        <docblock line="651">
          <description>Get and remove an item from the collection.</description>
          <long-description/>
          <tag name="param" line="651" description="" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="param" line="651" description="" type="mixed" variable="$default">
            <type>mixed</type>
          </tag>
          <tag name="return" line="651" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$default</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="663" package="Default">
        <name>put</name>
        <full_name>\Illuminate\Support\Collection::put()</full_name>
        <docblock line="663">
          <description>Put an item in the collection by key.</description>
          <long-description/>
          <tag name="param" line="663" description="" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="param" line="663" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="663" description="" type="\Codex\Addons\ProcessorAddons">
            <type>\Codex\Addons\ProcessorAddons</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>mixed</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="678" package="Default">
        <name>random</name>
        <full_name>\Illuminate\Support\Collection::random()</full_name>
        <docblock line="678">
          <description>Get one or more items randomly from the collection.</description>
          <long-description/>
          <tag name="param" line="678" description="" type="integer" variable="$amount">
            <type>integer</type>
          </tag>
          <tag name="return" line="678" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="678" description="" type="\InvalidArgumentException">
            <type>\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$amount</name>
          <default>1</default>
          <type>integer</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="700" package="Default">
        <name>reduce</name>
        <full_name>\Illuminate\Support\Collection::reduce()</full_name>
        <docblock line="700">
          <description>Reduce the collection to a single value.</description>
          <long-description/>
          <tag name="param" line="700" description="" type="callable" variable="$callback">
            <type>callable</type>
          </tag>
          <tag name="param" line="700" description="" type="mixed" variable="$initial">
            <type>mixed</type>
          </tag>
          <tag name="return" line="700" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>callable</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$initial</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="711" package="Default">
        <name>reject</name>
        <full_name>\Illuminate\Support\Collection::reject()</full_name>
        <docblock line="711">
          <description>Create a collection of all elements that do not pass a given truth test.</description>
          <long-description/>
          <tag name="param" line="711" description="" type="callable|mixed" variable="$callback">
            <type>callable</type>
            <type>mixed</type>
          </tag>
          <tag name="return" line="711" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>callable|mixed</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="729" package="Default">
        <name>reverse</name>
        <full_name>\Illuminate\Support\Collection::reverse()</full_name>
        <docblock line="729">
          <description>Reverse items order.</description>
          <long-description/>
          <tag name="return" line="729" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="741" package="Default">
        <name>search</name>
        <full_name>\Illuminate\Support\Collection::search()</full_name>
        <docblock line="741">
          <description>Search the collection for a given value and return the corresponding key if successful.</description>
          <long-description/>
          <tag name="param" line="741" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="param" line="741" description="" type="boolean" variable="$strict">
            <type>boolean</type>
          </tag>
          <tag name="return" line="741" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$strict</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="761" package="Default">
        <name>shift</name>
        <full_name>\Illuminate\Support\Collection::shift()</full_name>
        <docblock line="761">
          <description>Get and remove the first item from the collection.</description>
          <long-description/>
          <tag name="return" line="761" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="771" package="Default">
        <name>shuffle</name>
        <full_name>\Illuminate\Support\Collection::shuffle()</full_name>
        <docblock line="771">
          <description>Shuffle the items in the collection.</description>
          <long-description/>
          <tag name="return" line="771" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="787" package="Default">
        <name>slice</name>
        <full_name>\Illuminate\Support\Collection::slice()</full_name>
        <docblock line="787">
          <description>Slice the underlying collection array.</description>
          <long-description/>
          <tag name="param" line="787" description="" type="integer" variable="$offset">
            <type>integer</type>
          </tag>
          <tag name="param" line="787" description="" type="integer" variable="$length">
            <type>integer</type>
          </tag>
          <tag name="return" line="787" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default/>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$length</name>
          <default>null</default>
          <type>integer</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="798" package="Default">
        <name>chunk</name>
        <full_name>\Illuminate\Support\Collection::chunk()</full_name>
        <docblock line="798">
          <description>Chunk the underlying collection array.</description>
          <long-description/>
          <tag name="param" line="798" description="" type="integer" variable="$size">
            <type>integer</type>
          </tag>
          <tag name="return" line="798" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$size</name>
          <default/>
          <type>integer</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="815" package="Default">
        <name>sort</name>
        <full_name>\Illuminate\Support\Collection::sort()</full_name>
        <docblock line="815">
          <description>Sort through each item with a callback.</description>
          <long-description/>
          <tag name="param" line="815" description="" type="callable|null" variable="$callback">
            <type>callable</type>
            <type>null</type>
          </tag>
          <tag name="return" line="815" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default>null</default>
          <type>callable|null</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="838" package="Default">
        <name>sortBy</name>
        <full_name>\Illuminate\Support\Collection::sortBy()</full_name>
        <docblock line="838">
          <description>Sort the collection using the given callback.</description>
          <long-description/>
          <tag name="param" line="838" description="" type="callable|string" variable="$callback">
            <type>callable</type>
            <type>string</type>
          </tag>
          <tag name="param" line="838" description="" type="integer" variable="$options">
            <type>integer</type>
          </tag>
          <tag name="param" line="838" description="" type="boolean" variable="$descending">
            <type>boolean</type>
          </tag>
          <tag name="return" line="838" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>callable|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>SORT_REGULAR</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$descending</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="871" package="Default">
        <name>sortByDesc</name>
        <full_name>\Illuminate\Support\Collection::sortByDesc()</full_name>
        <docblock line="871">
          <description>Sort the collection in descending order using the given callback.</description>
          <long-description/>
          <tag name="param" line="871" description="" type="callable|string" variable="$callback">
            <type>callable</type>
            <type>string</type>
          </tag>
          <tag name="param" line="871" description="" type="integer" variable="$options">
            <type>integer</type>
          </tag>
          <tag name="return" line="871" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>callable|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>SORT_REGULAR</default>
          <type>integer</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="884" package="Default">
        <name>splice</name>
        <full_name>\Illuminate\Support\Collection::splice()</full_name>
        <docblock line="884">
          <description>Splice a portion of the underlying collection array.</description>
          <long-description/>
          <tag name="param" line="884" description="" type="integer" variable="$offset">
            <type>integer</type>
          </tag>
          <tag name="param" line="884" description="" type="integer|null" variable="$length">
            <type>integer</type>
            <type>null</type>
          </tag>
          <tag name="param" line="884" description="" type="mixed" variable="$replacement">
            <type>mixed</type>
          </tag>
          <tag name="return" line="884" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default/>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$length</name>
          <default>null</default>
          <type>integer|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$replacement</name>
          <default>array()</default>
          <type>mixed</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="899" package="Default">
        <name>sum</name>
        <full_name>\Illuminate\Support\Collection::sum()</full_name>
        <docblock line="899">
          <description>Get the sum of the given values.</description>
          <long-description/>
          <tag name="param" line="899" description="" type="callable|string|null" variable="$callback">
            <type>callable</type>
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="899" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default>null</default>
          <type>callable|string|null</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="918" package="Default">
        <name>take</name>
        <full_name>\Illuminate\Support\Collection::take()</full_name>
        <docblock line="918">
          <description>Take the first or last {$limit} items.</description>
          <long-description/>
          <tag name="param" line="918" description="" type="integer" variable="$limit">
            <type>integer</type>
          </tag>
          <tag name="return" line="918" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$limit</name>
          <default/>
          <type>integer</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="933" package="Default">
        <name>transform</name>
        <full_name>\Illuminate\Support\Collection::transform()</full_name>
        <docblock line="933">
          <description>Transform each item in the collection using a callback.</description>
          <long-description/>
          <tag name="param" line="933" description="" type="callable" variable="$callback">
            <type>callable</type>
          </tag>
          <tag name="return" line="933" description="" type="\Codex\Addons\ProcessorAddons">
            <type>\Codex\Addons\ProcessorAddons</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>callable</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="946" package="Default">
        <name>unique</name>
        <full_name>\Illuminate\Support\Collection::unique()</full_name>
        <docblock line="946">
          <description>Return only unique items from the collection array.</description>
          <long-description/>
          <tag name="param" line="946" description="" type="string|callable|null" variable="$key">
            <type>string</type>
            <type>callable</type>
            <type>null</type>
          </tag>
          <tag name="return" line="946" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string|callable|null</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="970" package="Default">
        <name>values</name>
        <full_name>\Illuminate\Support\Collection::values()</full_name>
        <docblock line="970">
          <description>Reset the keys on the underlying array.</description>
          <long-description/>
          <tag name="return" line="970" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Codex\Addons" line="981" package="Default">
        <name>valueRetriever</name>
        <full_name>\Illuminate\Support\Collection::valueRetriever()</full_name>
        <docblock line="981">
          <description>Get a value retrieving callback.</description>
          <long-description/>
          <tag name="param" line="981" description="" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="return" line="981" description="" type="callable">
            <type>callable</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>string</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="1001" package="Default">
        <name>zip</name>
        <full_name>\Illuminate\Support\Collection::zip()</full_name>
        <docblock line="1001">
          <description>Zip the collection together with one or more arrays.</description>
          <long-description>e.g. new Collection([1, 2, 3])-&gt;zip([4, 5, 6]);
     =&gt; [[1, 4], [2, 5], [3, 6]]</long-description>
          <tag name="param" line="1001" description="" type="mixed" variable="$items">
            <type>mixed</type>
          </tag>
          <tag name="return" line="1001" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$items</name>
          <default/>
          <type>mixed</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="1019" package="Default">
        <name>toArray</name>
        <full_name>\Illuminate\Support\Collection::toArray()</full_name>
        <docblock line="1019">
          <description>Get the collection of items as a plain array.</description>
          <long-description/>
          <tag name="return" line="1019" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\Illuminate\Contracts\Support\Arrayable::toArray()" refers="\Illuminate\Contracts\Support\Arrayable::toArray()" link="/classes/Illuminate.Contracts.Support.Arrayable.html#method_toArray"/>
        </docblock>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="1031" package="Default">
        <name>jsonSerialize</name>
        <full_name>\Illuminate\Support\Collection::jsonSerialize()</full_name>
        <docblock line="1031">
          <description>Convert the object into something JSON serializable.</description>
          <long-description/>
          <tag name="return" line="1031" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="1052" package="Default">
        <name>toJson</name>
        <full_name>\Illuminate\Support\Collection::toJson()</full_name>
        <docblock line="1052">
          <description>Get the collection of items as JSON.</description>
          <long-description/>
          <tag name="param" line="1052" description="" type="integer" variable="$options">
            <type>integer</type>
          </tag>
          <tag name="return" line="1052" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\Illuminate\Contracts\Support\Jsonable::toJson()" refers="\Illuminate\Contracts\Support\Jsonable::toJson()" link="/classes/Illuminate.Contracts.Support.Jsonable.html#method_toJson"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="1062" package="Default">
        <name>getIterator</name>
        <full_name>\Illuminate\Support\Collection::getIterator()</full_name>
        <docblock line="1062">
          <description>Get an iterator for the items.</description>
          <long-description/>
          <tag name="return" line="1062" description="" type="\ArrayIterator">
            <type>\ArrayIterator</type>
          </tag>
        </docblock>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="1073" package="Default">
        <name>getCachingIterator</name>
        <full_name>\Illuminate\Support\Collection::getCachingIterator()</full_name>
        <docblock line="1073">
          <description>Get a CachingIterator instance.</description>
          <long-description/>
          <tag name="param" line="1073" description="" type="integer" variable="$flags">
            <type>integer</type>
          </tag>
          <tag name="return" line="1073" description="" type="\CachingIterator">
            <type>\CachingIterator</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$flags</name>
          <default>\CachingIterator::CALL_TOSTRING</default>
          <type>integer</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="1083" package="Default">
        <name>count</name>
        <full_name>\Illuminate\Support\Collection::count()</full_name>
        <docblock line="1083">
          <description>Count the number of items in the collection.</description>
          <long-description/>
          <tag name="return" line="1083" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="1094" package="Default">
        <name>offsetExists</name>
        <full_name>\Illuminate\Support\Collection::offsetExists()</full_name>
        <docblock line="1094">
          <description>Determine if an item exists at an offset.</description>
          <long-description/>
          <tag name="param" line="1094" description="" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="return" line="1094" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>mixed</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="1105" package="Default">
        <name>offsetGet</name>
        <full_name>\Illuminate\Support\Collection::offsetGet()</full_name>
        <docblock line="1105">
          <description>Get an item at a given offset.</description>
          <long-description/>
          <tag name="param" line="1105" description="" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="return" line="1105" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>mixed</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="1117" package="Default">
        <name>offsetSet</name>
        <full_name>\Illuminate\Support\Collection::offsetSet()</full_name>
        <docblock line="1117">
          <description>Set the item at a given offset.</description>
          <long-description/>
          <tag name="param" line="1117" description="" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="param" line="1117" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="1117" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>mixed</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="1132" package="Default">
        <name>offsetUnset</name>
        <full_name>\Illuminate\Support\Collection::offsetUnset()</full_name>
        <docblock line="1132">
          <description>Unset the item at a given offset.</description>
          <long-description/>
          <tag name="param" line="1132" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="1132" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="1142" package="Default">
        <name>__toString</name>
        <full_name>\Illuminate\Support\Collection::__toString()</full_name>
        <docblock line="1142">
          <description>Convert the collection to its string representation.</description>
          <long-description/>
          <tag name="return" line="1142" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Codex\Addons" line="1153" package="Default">
        <name>getArrayableItems</name>
        <full_name>\Illuminate\Support\Collection::getArrayableItems()</full_name>
        <docblock line="1153">
          <description>Results array of items from Collection or Arrayable.</description>
          <long-description/>
          <tag name="param" line="1153" description="" type="mixed" variable="$items">
            <type>mixed</type>
          </tag>
          <tag name="return" line="1153" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$items</name>
          <default/>
          <type>mixed</type>
        </argument>
        <inherited_from>\Illuminate\Support\Collection</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Codex\Addons" line="24" package="Default">
        <name>macro</name>
        <full_name>\Illuminate\Support\Traits\Macroable::macro()</full_name>
        <docblock line="24">
          <description>Register a custom macro.</description>
          <long-description/>
          <tag name="param" line="24" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="24" description="" type="callable" variable="$macro">
            <type>callable</type>
          </tag>
          <tag name="return" line="24" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$macro</name>
          <default/>
          <type>callable</type>
        </argument>
        <inherited_from>\Illuminate\Support\Traits\Macroable</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Codex\Addons" line="35" package="Default">
        <name>hasMacro</name>
        <full_name>\Illuminate\Support\Traits\Macroable::hasMacro()</full_name>
        <docblock line="35">
          <description>Checks if macro is registered.</description>
          <long-description/>
          <tag name="param" line="35" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="35" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default/>
          <type>string</type>
        </argument>
        <inherited_from>\Illuminate\Support\Traits\Macroable</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Codex\Addons" line="49" package="Default">
        <name>__callStatic</name>
        <full_name>\Illuminate\Support\Traits\Macroable::__callStatic()</full_name>
        <docblock line="49">
          <description>Dynamically handle calls to the class.</description>
          <long-description/>
          <tag name="param" line="49" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="param" line="49" description="" type="array" variable="$parameters">
            <type>array</type>
          </tag>
          <tag name="return" line="49" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="49" description="" type="\BadMethodCallException">
            <type>\BadMethodCallException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$parameters</name>
          <default/>
          <type>array</type>
        </argument>
        <inherited_from>\Illuminate\Support\Traits\Macroable</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Addons" line="71" package="Default">
        <name>__call</name>
        <full_name>\Illuminate\Support\Traits\Macroable::__call()</full_name>
        <docblock line="71">
          <description>Dynamically handle calls to the class.</description>
          <long-description/>
          <tag name="param" line="71" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="param" line="71" description="" type="array" variable="$parameters">
            <type>array</type>
          </tag>
          <tag name="return" line="71" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="71" description="" type="\BadMethodCallException">
            <type>\BadMethodCallException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$parameters</name>
          <default/>
          <type>array</type>
        </argument>
        <inherited_from>\Illuminate\Support\Traits\Macroable</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="31" code="PPC:ERR-50015">Argument $file is missing from the Docblock of add</error>
      <error line="31" code="PPC:ERR-50015">Argument $annotation is missing from the Docblock of add</error>
      <error line="31" code="PPC:ERR-50008">No summary for method add()</error>
      <error line="40" code="PPC:ERR-50015">Argument $name is missing from the Docblock of getInstance</error>
      <error line="40" code="PPC:ERR-50008">No summary for method getInstance()</error>
      <error line="51" code="PPC:ERR-50015">Argument $name is missing from the Docblock of run</error>
      <error line="51" code="PPC:ERR-50015">Argument $document is missing from the Docblock of run</error>
      <error line="51" code="PPC:ERR-50008">No summary for method run()</error>
      <error line="105" code="PPC:ERR-50015">Argument $key is missing from the Docblock of get</error>
      <error line="105" code="PPC:ERR-50015">Argument $default is missing from the Docblock of get</error>
      <error line="105" code="PPC:ERR-50008">No summary for method get()</error>
      <error line="115" code="PPC:ERR-50015">Argument $names is missing from the Docblock of hasAll</error>
      <error line="115" code="PPC:ERR-50015">Argument $returnHasNot is missing from the Docblock of hasAll</error>
      <error line="115" code="PPC:ERR-50008">No summary for method hasAll()</error>
      <error line="131" code="PPC:ERR-50015">Argument $names is missing from the Docblock of getSorted</error>
      <error line="131" code="PPC:ERR-50008">No summary for method getSorted()</error>
      <error line="178" code="PPC:ERR-50008">No summary for method replaceProcessors()</error>
      <error line="191" code="PPC:ERR-50015">Argument $items is missing from the Docblock of replaceProcessor</error>
      <error line="191" code="PPC:ERR-50015">Argument $name is missing from the Docblock of replaceProcessor</error>
      <error line="191" code="PPC:ERR-50008">No summary for method replaceProcessor()</error>
      <error line="27" code="PPC:ERR-50007">No summary for property $handleMissing</error>
      <error line="29" code="PPC:ERR-50007">No summary for property $currentDocument</error>
    </parse_markers>
    <source>eJy1WFtv00gUfs+vOKCITFDSAtK+JJtAtxSIBKWilXalFkVTe5x469jWzLg0Qvnve+Zie3xLAtJaVePLmXP5znXmz7fpOu3FdMNESj0G54nPnu7OfD+JxbTXy0T11d1ZHCeSylDdX/HEY0IkfNqku/ZoHDN+dx5RIT6EEVvEQeLSvU+8bMNiKYo79+vFk8dSJeVOPxePLs11lqYJl0gRRczr+nqN/1hFwxtOQxT7KUke6H3E9COaevryZQ9ews06FIB/cs3AU8oDao8cjF0nSKKo3iFYD3TFwF6G83nCmf5KM7lOOBRfPy/0ay9JtzxcrWW+KH8k3hDevHr9x0iRnsBZFIH+IIAzwfgj843c055RqUDeaAXsSbLYF3B2LySnntSvS1x6P3tKnoKgbrV67yELCV8W19eLy4/Lm0/fvv59vbz45+L84upm8fUSZvB62kK4+Hj59dvFe/z8xjJKs/so9ECoAPGgv6axH7EvoRBhvEIywaJgMqktz5fyRKKyzIe+l3GO4VCGhcs7yGJtElDfJ5Xggn6Ad6MSG+jTIliHmoeBQV19gyNeM7NuPF8xqfldYi6Q4bQkDdFoGmNuzCDOomgKp6d9iVEyntM0Hc839IERw89d5VNJwQignNPtcsP4ihEv2WDoSDJQQgcjGJQ6qifNRt3kQgfDERDNYOiaY0HRkowugkniUIznKqdHRg+r164OdQEm2r6wAklfLWzglRaoznKJKyVRE5dmhwEQh/jWMQS+w2xmIIRhsaAUURVTXwku5PdZGPmkQmyAg++OLnVwLCDFKod0V9xxJjMedypSBbIWkjyLcyl58CL+9q6OKJYbePdIeXu8qlSv2VBLCwWJX6SIC+C/6FyoXg6t9tuVoaqEeenh2sqmt0sjTmGNBQXSJESN7lmABRCw8mOMsUelpKqiJeOAJxuFUoz1oBoyAY2wOKn4sOIU2yvFlQyornGTgs3EyMEsuQWtEXq9M6KMP11PtyR21cxaJjgQOf6ZVUPEyWIVJLV8cNMSa2gQruAZmmqM7tIcsUVlwGcBzSIJZl2FQjN/pvBNGZfbJXsKhRSksGvUJtmFqilUXXLNkx9Q7bsTBN2j2EDI4NwYgHwhSLIYqwh6dgAncEw+7qrZacHovGalk8bzny3W7Ka/ytAUY87SCMcd/MW0EuEjIw0YLK9R84PNsVwHMigMFycaCFMDbtH6ltVlIlIp+b7FlbX1wnYAF9WsmPJiPgMQa09r1dORtCeOBp6KhkF3mjnqaNJGxdHhRH5PuMX7OPF5ATyi5P2CCjmr43Tw99boXVf9pAHOmf9/+dRiyupZqRIjpyr+ZlV1+rRHo4jcQldB2jCckn34PoJiKipxLmeW1l6r29ED26oJx1ZIM1vU+2wHPlTo5d0mtlfBAsXLRH5Q1Y8MJrr4ERy80S1Dq1Nry943cKRUUU4mTbsOAIGW4HbB9CqBqwy/T1SghmB7TCsmoVgane3aPZGtvytmKHSJGi4pX4n2TFKdmXpr1fXMKipsk+7ivsdBuv8e7Ff5yFax/K2VOjGsu7pQww+SZ2zvkIfm6y2ln8NWn5Qx5stx4seacdydkIGixZyza3AiRR5/bVX1DxMeyu0A39mmVAyEFYgV3/FcYUsKXZwReKh3d0RRdQ4UR0+cRt6xw467ynG/m+l2MlSxYG8PObWfYO3jV+6uQwOgAS3hNNwQuyDkolLc88tMYDVuz/KNyIsXTuiF8VJPB637qCoHhYIuo6p6qZiph6mxqvGqxTSH1a3e6NSFN20q40FvbAwIDR1bwNh1pYEbaEKfmNgBwhyfuMC6LkYElU9DyTbd1cPww5bg+wskJJocrdY+VPjlL3IYWguLYeMrgHKG6pfUN58eVmXEJKfBdLUHEGQ4hDm82l+HzNHFZFI/u5h1nF7sjeMq2gzD7NdkNE9iDmaNz9JixsUuIjqAaEaGXRlu0ghbHlFHELoFpS20+zcIz03IAIu1KzBdfaCwsVYiRxb7+G2r9w0/lYjd885dQpv/3eMU+3ZkX/phEJSt0HwbNmLbt7FtHJHzqJyp1ILNH88lp7FAlTet5feyODNpOibvT84+urpuWsnDxlGE0WD/yUOzc9TbksoxUTYm/dia1IawaNuz+YH8tsOErkQ2ka06ev93OGa1wGIrX6pYN8qwF7aJHhEyFkDX1ZrDweOwDsmo2q2uV20nZHUYSou6AakVSkuldw5gNr97GNX3gw0U8zcu29qqamh2A+6w2HtqVlUih3nX+w+hjeim</source>
  <type>class</type></file>