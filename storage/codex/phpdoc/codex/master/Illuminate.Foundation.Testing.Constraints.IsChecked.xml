<file path="codex/vendor/laravel/framework/src/Illuminate/Foundation/Testing/Constraints/IsChecked.php" generated-path="codex.vendor.laravel.framework.src.Illuminate.Foundation.Testing.Constraints.IsChecked.html" hash="f1fb4966de0ce22d39edd017dc11fb1f" package="Default">
    <docblock line="0">
      <description/>
      <long-description/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Illuminate\Foundation\Testing\Constraints" line="5" package="Default">
      <extends>\Illuminate\Foundation\Testing\Constraints\FormFieldConstraint</extends>
      <name>IsChecked</name>
      <full_name>\Illuminate\Foundation\Testing\Constraints\IsChecked</full_name>
      <docblock line="5">
        <description/>
        <long-description/>
        <tag name="package" line="5" description="Default"/>
        <tag name="inherited_from" description="\Illuminate\Foundation\Testing\Constraints\FormFieldConstraint" refers="\Illuminate\Foundation\Testing\Constraints\FormFieldConstraint" link="/classes/Illuminate.Foundation.Testing.Constraints.FormFieldConstraint.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="Illuminate\Foundation\Testing\Constraints" line="14" package="Default">
        <name>$selector</name>
        <full_name>\Illuminate\Foundation\Testing\Constraints\FormFieldConstraint::selector</full_name>
        <default/>
        <docblock line="14">
          <description>The name or ID of the element.</description>
          <long-description/>
          <tag name="var" line="14" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Illuminate\Foundation\Testing\Constraints" line="21" package="Default">
        <name>$value</name>
        <full_name>\Illuminate\Foundation\Testing\Constraints\FormFieldConstraint::value</full_name>
        <default/>
        <docblock line="21">
          <description>The expected value.</description>
          <long-description/>
          <tag name="var" line="21" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Foundation\Testing\Constraints" line="13" package="Default">
        <name>__construct</name>
        <full_name>\Illuminate\Foundation\Testing\Constraints\IsChecked::__construct()</full_name>
        <docblock line="13">
          <description>Create a new constraint instance.</description>
          <long-description/>
          <tag name="param" line="13" description="" type="string" variable="$selector">
            <type>string</type>
          </tag>
          <tag name="return" line="13" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\Illuminate\Foundation\Testing\Constraints\FormFieldConstraint::__construct()" refers="\Illuminate\Foundation\Testing\Constraints\FormFieldConstraint::__construct()" link="/classes/Illuminate.Foundation.Testing.Constraints.FormFieldConstraint.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$selector</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Foundation\Testing\Constraints" line="23" package="Default">
        <name>validElements</name>
        <full_name>\Illuminate\Foundation\Testing\Constraints\IsChecked::validElements()</full_name>
        <docblock line="23">
          <description>Get the valid elements.</description>
          <long-description>Multiple elements should be separated by commas without spaces.</long-description>
          <tag name="return" line="23" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\Illuminate\Foundation\Testing\Constraints\FormFieldConstraint::validElements()" refers="\Illuminate\Foundation\Testing\Constraints\FormFieldConstraint::validElements()" link="/classes/Illuminate.Foundation.Testing.Constraints.FormFieldConstraint.html#method_validElements"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Foundation\Testing\Constraints" line="34" package="Default">
        <name>matches</name>
        <full_name>\Illuminate\Foundation\Testing\Constraints\IsChecked::matches()</full_name>
        <docblock line="34">
          <description>Determine if the checkbox is checked.</description>
          <long-description/>
          <tag name="param" line="34" description="" type="\Symfony\Component\DomCrawler\Crawler|string" variable="$crawler">
            <type>\Symfony\Component\DomCrawler\Crawler</type>
            <type>string</type>
          </tag>
          <tag name="return" line="34" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$crawler</name>
          <default/>
          <type>\Symfony\Component\DomCrawler\Crawler|string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Foundation\Testing\Constraints" line="46" package="Default">
        <name>getFailureDescription</name>
        <full_name>\Illuminate\Foundation\Testing\Constraints\IsChecked::getFailureDescription()</full_name>
        <docblock line="46">
          <description>Return the description of the failure.</description>
          <long-description/>
          <tag name="return" line="46" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Foundation\Testing\Constraints" line="30" package="Default">
        <name>__construct</name>
        <full_name>\Illuminate\Foundation\Testing\Constraints\FormFieldConstraint::__construct()</full_name>
        <docblock line="30">
          <description>Create a new constraint instance.</description>
          <long-description/>
          <tag name="param" line="30" description="" type="string" variable="$selector">
            <type>string</type>
          </tag>
          <tag name="param" line="30" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="30" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$selector</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>mixed</type>
        </argument>
        <inherited_from>\Illuminate\Foundation\Testing\Constraints\FormFieldConstraint</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="Illuminate\Foundation\Testing\Constraints" line="43" package="Default">
        <name>validElements</name>
        <full_name>\Illuminate\Foundation\Testing\Constraints\FormFieldConstraint::validElements()</full_name>
        <docblock line="43">
          <description>Get the valid elements.</description>
          <long-description>Multiple elements should be separated by commas without spaces.</long-description>
          <tag name="return" line="43" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Illuminate\Foundation\Testing\Constraints\FormFieldConstraint</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Foundation\Testing\Constraints" line="53" package="Default">
        <name>field</name>
        <full_name>\Illuminate\Foundation\Testing\Constraints\FormFieldConstraint::field()</full_name>
        <docblock line="53">
          <description>Get the form field.</description>
          <long-description/>
          <tag name="param" line="53" description="" type="\Symfony\Component\DomCrawler\Crawler" variable="$crawler">
            <type>\Symfony\Component\DomCrawler\Crawler</type>
          </tag>
          <tag name="return" line="53" description="" type="\Symfony\Component\DomCrawler\Crawler">
            <type>\Symfony\Component\DomCrawler\Crawler</type>
          </tag>
          <tag name="throws" line="53" description="" type="\PHPUnit_Framework_ExpectationFailedException">
            <type>\PHPUnit_Framework_ExpectationFailedException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$crawler</name>
          <default/>
          <type>\Symfony\Component\DomCrawler\Crawler</type>
        </argument>
        <inherited_from>\Illuminate\Foundation\Testing\Constraints\FormFieldConstraint</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Foundation\Testing\Constraints" line="72" package="Default">
        <name>getElements</name>
        <full_name>\Illuminate\Foundation\Testing\Constraints\FormFieldConstraint::getElements()</full_name>
        <docblock line="72">
          <description>Get the elements relevant to the selector.</description>
          <long-description/>
          <tag name="return" line="72" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\Illuminate\Foundation\Testing\Constraints\FormFieldConstraint</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Foundation\Testing\Constraints" line="18" package="Default">
        <name>html</name>
        <full_name>\Illuminate\Foundation\Testing\Constraints\PageConstraint::html()</full_name>
        <docblock line="18">
          <description>Make sure we obtain the HTML from the crawler or the response.</description>
          <long-description/>
          <tag name="param" line="18" description="" type="\Symfony\Component\DomCrawler\Crawler|string" variable="$crawler">
            <type>\Symfony\Component\DomCrawler\Crawler</type>
            <type>string</type>
          </tag>
          <tag name="return" line="18" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$crawler</name>
          <default/>
          <type>\Symfony\Component\DomCrawler\Crawler|string</type>
        </argument>
        <inherited_from>\Illuminate\Foundation\Testing\Constraints\PageConstraint</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Foundation\Testing\Constraints" line="29" package="Default">
        <name>text</name>
        <full_name>\Illuminate\Foundation\Testing\Constraints\PageConstraint::text()</full_name>
        <docblock line="29">
          <description>Make sure we obtain the HTML from the crawler or the response.</description>
          <long-description/>
          <tag name="param" line="29" description="" type="\Symfony\Component\DomCrawler\Crawler|string" variable="$crawler">
            <type>\Symfony\Component\DomCrawler\Crawler</type>
            <type>string</type>
          </tag>
          <tag name="return" line="29" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$crawler</name>
          <default/>
          <type>\Symfony\Component\DomCrawler\Crawler|string</type>
        </argument>
        <inherited_from>\Illuminate\Foundation\Testing\Constraints\PageConstraint</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Foundation\Testing\Constraints" line="40" package="Default">
        <name>crawler</name>
        <full_name>\Illuminate\Foundation\Testing\Constraints\PageConstraint::crawler()</full_name>
        <docblock line="40">
          <description>Create a crawler instance if the given value is not already a Crawler.</description>
          <long-description/>
          <tag name="param" line="40" description="" type="\Symfony\Component\DomCrawler\Crawler|string" variable="$crawler">
            <type>\Symfony\Component\DomCrawler\Crawler</type>
            <type>string</type>
          </tag>
          <tag name="return" line="40" description="" type="\Symfony\Component\DomCrawler\Crawler">
            <type>\Symfony\Component\DomCrawler\Crawler</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$crawler</name>
          <default/>
          <type>\Symfony\Component\DomCrawler\Crawler|string</type>
        </argument>
        <inherited_from>\Illuminate\Foundation\Testing\Constraints\PageConstraint</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Foundation\Testing\Constraints" line="51" package="Default">
        <name>getEscapedPattern</name>
        <full_name>\Illuminate\Foundation\Testing\Constraints\PageConstraint::getEscapedPattern()</full_name>
        <docblock line="51">
          <description>Get the escaped text pattern for the constraint.</description>
          <long-description/>
          <tag name="param" line="51" description="" type="string" variable="$text">
            <type>string</type>
          </tag>
          <tag name="return" line="51" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$text</name>
          <default/>
          <type>string</type>
        </argument>
        <inherited_from>\Illuminate\Foundation\Testing\Constraints\PageConstraint</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Foundation\Testing\Constraints" line="71" package="Default">
        <name>fail</name>
        <full_name>\Illuminate\Foundation\Testing\Constraints\PageConstraint::fail()</full_name>
        <docblock line="71">
          <description>Throw an exception for the given comparison and test description.</description>
          <long-description/>
          <tag name="param" line="71" description="" type="\Symfony\Component\DomCrawler\Crawler|string" variable="$crawler">
            <type>\Symfony\Component\DomCrawler\Crawler</type>
            <type>string</type>
          </tag>
          <tag name="param" line="71" description="" type="string" variable="$description">
            <type>string</type>
          </tag>
          <tag name="param" line="71" description="" type="\SebastianBergmann\Comparator\ComparisonFailure|null" variable="$comparisonFailure">
            <type>\SebastianBergmann\Comparator\ComparisonFailure</type>
            <type>null</type>
          </tag>
          <tag name="return" line="71" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="throws" line="71" description="" type="\PHPUnit_Framework_ExpectationFailedException">
            <type>\PHPUnit_Framework_ExpectationFailedException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$crawler</name>
          <default/>
          <type>\Symfony\Component\DomCrawler\Crawler|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$description</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$comparisonFailure</name>
          <default>null</default>
          <type>\SebastianBergmann\Comparator\ComparisonFailure|null</type>
        </argument>
        <inherited_from>\Illuminate\Foundation\Testing\Constraints\PageConstraint</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Foundation\Testing\Constraints" line="98" package="Default">
        <name>getFailureDescription</name>
        <full_name>\Illuminate\Foundation\Testing\Constraints\PageConstraint::getFailureDescription()</full_name>
        <docblock line="98">
          <description>Get the description of the failure.</description>
          <long-description/>
          <tag name="return" line="98" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Illuminate\Foundation\Testing\Constraints\PageConstraint</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Foundation\Testing\Constraints" line="110" package="Default">
        <name>toString</name>
        <full_name>\Illuminate\Foundation\Testing\Constraints\PageConstraint::toString()</full_name>
        <docblock line="110">
          <description>Get a string representation of the object.</description>
          <long-description>Placeholder method to avoid forcing definition of this method.</long-description>
          <tag name="return" line="110" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Illuminate\Foundation\Testing\Constraints\PageConstraint</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="5" code="PPC:ERR-50005">No summary for class \Illuminate\Foundation\Testing\Constraints\IsChecked</error>
    </parse_markers>
    <source>eJyVUl1PGzEQfPev2CKkhEjAD0hDKyVNxSvtG4eQ49sjVv0lew1ENP+9vrNzVy4KEn7xaW88OzuzX7+5rWPMcI3BcYFwq1TU0nDCam2jqTlJa6rfGEiap2ppTSDPpaEwZ0woHgLchuUWxR+sAV8JTR1gbb1eS1T1AGdvDNK5ns26G2aw9JiaAAeDLyB6IMj0xY3AqwI84L877rkGSLikBOA8oEJB1vcAjxS9gWcr61K77m4XN0oKaKIR7TDw+JjbRUHTnuWig2aV7TmnrQyXN4ffsBgazjvQno0n+okEtEV45komMxRqTD4dzVFk5jneC/WWUofkZK+14/pRqKZjkYXqTBoX6Z52DhcT0Yaxsa+Th7NTQldI6FPICLLpFB/egAz5G+tT9le/drqxZpdWQTtrkqxqZfXS8xeFvir33z4kkQvj4TfWqg8z0pySkDA9EBzFU+ptLjmpUhhezNnYp4Js2tUccJc3nMhPJ2XwyQV8WSzARKVO+XeX6VrnagzCS9dpttnMhksV/fH+fir3J6R15lkNHU7m/y7D+7fR7u4f/su1X4o9+weIyzMK</source>
  <type>class</type></file>