<file path="codex/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Model.php" generated-path="codex.vendor.laravel.framework.src.Illuminate.Database.Eloquent.Model.html" hash="2e46ffa83f6f055c0c313e70ca73d01a" package="Default">
    <docblock line="0">
      <description/>
      <long-description/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Closure">\Closure</namespace-alias>
    <namespace-alias name="DateTime">\DateTime</namespace-alias>
    <namespace-alias name="Exception">\Exception</namespace-alias>
    <namespace-alias name="ArrayAccess">\ArrayAccess</namespace-alias>
    <namespace-alias name="Carbon">\Carbon\Carbon</namespace-alias>
    <namespace-alias name="LogicException">\LogicException</namespace-alias>
    <namespace-alias name="JsonSerializable">\JsonSerializable</namespace-alias>
    <namespace-alias name="DateTimeInterface">\DateTimeInterface</namespace-alias>
    <namespace-alias name="Arr">\Illuminate\Support\Arr</namespace-alias>
    <namespace-alias name="Str">\Illuminate\Support\Str</namespace-alias>
    <namespace-alias name="InvalidArgumentException">\InvalidArgumentException</namespace-alias>
    <namespace-alias name="Jsonable">\Illuminate\Contracts\Support\Jsonable</namespace-alias>
    <namespace-alias name="Dispatcher">\Illuminate\Contracts\Events\Dispatcher</namespace-alias>
    <namespace-alias name="Arrayable">\Illuminate\Contracts\Support\Arrayable</namespace-alias>
    <namespace-alias name="UrlRoutable">\Illuminate\Contracts\Routing\UrlRoutable</namespace-alias>
    <namespace-alias name="QueueableEntity">\Illuminate\Contracts\Queue\QueueableEntity</namespace-alias>
    <namespace-alias name="Pivot">\Illuminate\Database\Eloquent\Relations\Pivot</namespace-alias>
    <namespace-alias name="HasOne">\Illuminate\Database\Eloquent\Relations\HasOne</namespace-alias>
    <namespace-alias name="HasMany">\Illuminate\Database\Eloquent\Relations\HasMany</namespace-alias>
    <namespace-alias name="MorphTo">\Illuminate\Database\Eloquent\Relations\MorphTo</namespace-alias>
    <namespace-alias name="Relation">\Illuminate\Database\Eloquent\Relations\Relation</namespace-alias>
    <namespace-alias name="MorphOne">\Illuminate\Database\Eloquent\Relations\MorphOne</namespace-alias>
    <namespace-alias name="BaseCollection">\Illuminate\Support\Collection</namespace-alias>
    <namespace-alias name="MorphMany">\Illuminate\Database\Eloquent\Relations\MorphMany</namespace-alias>
    <namespace-alias name="BelongsTo">\Illuminate\Database\Eloquent\Relations\BelongsTo</namespace-alias>
    <namespace-alias name="QueryBuilder">\Illuminate\Database\Query\Builder</namespace-alias>
    <namespace-alias name="MorphToMany">\Illuminate\Database\Eloquent\Relations\MorphToMany</namespace-alias>
    <namespace-alias name="BelongsToMany">\Illuminate\Database\Eloquent\Relations\BelongsToMany</namespace-alias>
    <namespace-alias name="HasManyThrough">\Illuminate\Database\Eloquent\Relations\HasManyThrough</namespace-alias>
    <namespace-alias name="Resolver">\Illuminate\Database\ConnectionResolverInterface</namespace-alias>
    <class final="false" abstract="true" namespace="Illuminate\Database\Eloquent" line="36" package="Default">
      <extends/>
      <implements>\ArrayAccess</implements>
      <implements>\Illuminate\Contracts\Support\Arrayable</implements>
      <implements>\Illuminate\Contracts\Support\Jsonable</implements>
      <implements>\JsonSerializable</implements>
      <implements>\Illuminate\Contracts\Queue\QueueableEntity</implements>
      <implements>\Illuminate\Contracts\Routing\UrlRoutable</implements>
      <name>Model</name>
      <full_name>\Illuminate\Database\Eloquent\Model</full_name>
      <docblock line="36">
        <description/>
        <long-description/>
        <tag name="package" line="36" description="Default"/>
      </docblock>
      <constant namespace="Illuminate\Database\Eloquent" line="260" package="Default">
        <name>CREATED_AT</name>
        <full_name>\Illuminate\Database\Eloquent\Model::CREATED_AT</full_name>
        <value>'created_at'</value>
        <docblock line="260">
          <description>The name of the "created at" column.</description>
          <long-description/>
          <tag name="var" line="260" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="Illuminate\Database\Eloquent" line="267" package="Default">
        <name>UPDATED_AT</name>
        <full_name>\Illuminate\Database\Eloquent\Model::UPDATED_AT</full_name>
        <value>'updated_at'</value>
        <docblock line="267">
          <description>The name of the "updated at" column.</description>
          <long-description/>
          <tag name="var" line="267" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </constant>
      <property static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="43" package="Default">
        <name>$connection</name>
        <full_name>\Illuminate\Database\Eloquent\Model::connection</full_name>
        <default/>
        <docblock line="43">
          <description>The connection name for the model.</description>
          <long-description/>
          <tag name="var" line="43" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="50" package="Default">
        <name>$table</name>
        <full_name>\Illuminate\Database\Eloquent\Model::table</full_name>
        <default/>
        <docblock line="50">
          <description>The table associated with the model.</description>
          <long-description/>
          <tag name="var" line="50" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="57" package="Default">
        <name>$primaryKey</name>
        <full_name>\Illuminate\Database\Eloquent\Model::primaryKey</full_name>
        <default>'id'</default>
        <docblock line="57">
          <description>The primary key for the model.</description>
          <long-description/>
          <tag name="var" line="57" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="64" package="Default">
        <name>$perPage</name>
        <full_name>\Illuminate\Database\Eloquent\Model::perPage</full_name>
        <default>15</default>
        <docblock line="64">
          <description>The number of models to return for pagination.</description>
          <long-description/>
          <tag name="var" line="64" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="71" package="Default">
        <name>$incrementing</name>
        <full_name>\Illuminate\Database\Eloquent\Model::incrementing</full_name>
        <default>true</default>
        <docblock line="71">
          <description>Indicates if the IDs are auto-incrementing.</description>
          <long-description/>
          <tag name="var" line="71" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="78" package="Default">
        <name>$timestamps</name>
        <full_name>\Illuminate\Database\Eloquent\Model::timestamps</full_name>
        <default>true</default>
        <docblock line="78">
          <description>Indicates if the model should be timestamped.</description>
          <long-description/>
          <tag name="var" line="78" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="85" package="Default">
        <name>$attributes</name>
        <full_name>\Illuminate\Database\Eloquent\Model::attributes</full_name>
        <default>array()</default>
        <docblock line="85">
          <description>The model's attributes.</description>
          <long-description/>
          <tag name="var" line="85" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="92" package="Default">
        <name>$original</name>
        <full_name>\Illuminate\Database\Eloquent\Model::original</full_name>
        <default>array()</default>
        <docblock line="92">
          <description>The model attribute's original state.</description>
          <long-description/>
          <tag name="var" line="92" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="99" package="Default">
        <name>$relations</name>
        <full_name>\Illuminate\Database\Eloquent\Model::relations</full_name>
        <default>array()</default>
        <docblock line="99">
          <description>The loaded relationships for the model.</description>
          <long-description/>
          <tag name="var" line="99" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="106" package="Default">
        <name>$hidden</name>
        <full_name>\Illuminate\Database\Eloquent\Model::hidden</full_name>
        <default>array()</default>
        <docblock line="106">
          <description>The attributes that should be hidden for arrays.</description>
          <long-description/>
          <tag name="var" line="106" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="113" package="Default">
        <name>$visible</name>
        <full_name>\Illuminate\Database\Eloquent\Model::visible</full_name>
        <default>array()</default>
        <docblock line="113">
          <description>The attributes that should be visible in arrays.</description>
          <long-description/>
          <tag name="var" line="113" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="120" package="Default">
        <name>$appends</name>
        <full_name>\Illuminate\Database\Eloquent\Model::appends</full_name>
        <default>array()</default>
        <docblock line="120">
          <description>The accessors to append to the model's array form.</description>
          <long-description/>
          <tag name="var" line="120" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="127" package="Default">
        <name>$fillable</name>
        <full_name>\Illuminate\Database\Eloquent\Model::fillable</full_name>
        <default>array()</default>
        <docblock line="127">
          <description>The attributes that are mass assignable.</description>
          <long-description/>
          <tag name="var" line="127" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="134" package="Default">
        <name>$guarded</name>
        <full_name>\Illuminate\Database\Eloquent\Model::guarded</full_name>
        <default>array('*')</default>
        <docblock line="134">
          <description>The attributes that aren't mass assignable.</description>
          <long-description/>
          <tag name="var" line="134" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="141" package="Default">
        <name>$dates</name>
        <full_name>\Illuminate\Database\Eloquent\Model::dates</full_name>
        <default>array()</default>
        <docblock line="141">
          <description>The attributes that should be mutated to dates.</description>
          <long-description/>
          <tag name="var" line="141" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="148" package="Default">
        <name>$dateFormat</name>
        <full_name>\Illuminate\Database\Eloquent\Model::dateFormat</full_name>
        <default/>
        <docblock line="148">
          <description>The storage format of the model's date columns.</description>
          <long-description/>
          <tag name="var" line="148" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="155" package="Default">
        <name>$casts</name>
        <full_name>\Illuminate\Database\Eloquent\Model::casts</full_name>
        <default>array()</default>
        <docblock line="155">
          <description>The attributes that should be cast to native types.</description>
          <long-description/>
          <tag name="var" line="155" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="162" package="Default">
        <name>$touches</name>
        <full_name>\Illuminate\Database\Eloquent\Model::touches</full_name>
        <default>array()</default>
        <docblock line="162">
          <description>The relationships that should be touched on save.</description>
          <long-description/>
          <tag name="var" line="162" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="169" package="Default">
        <name>$observables</name>
        <full_name>\Illuminate\Database\Eloquent\Model::observables</full_name>
        <default>array()</default>
        <docblock line="169">
          <description>User exposed observable events.</description>
          <long-description/>
          <tag name="var" line="169" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="176" package="Default">
        <name>$with</name>
        <full_name>\Illuminate\Database\Eloquent\Model::with</full_name>
        <default>array()</default>
        <docblock line="176">
          <description>The relations to eager load on every query.</description>
          <long-description/>
          <tag name="var" line="176" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="183" package="Default">
        <name>$morphClass</name>
        <full_name>\Illuminate\Database\Eloquent\Model::morphClass</full_name>
        <default/>
        <docblock line="183">
          <description>The class name to be used in polymorphic relations.</description>
          <long-description/>
          <tag name="var" line="183" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="190" package="Default">
        <name>$exists</name>
        <full_name>\Illuminate\Database\Eloquent\Model::exists</full_name>
        <default>false</default>
        <docblock line="190">
          <description>Indicates if the model exists.</description>
          <long-description/>
          <tag name="var" line="190" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="197" package="Default">
        <name>$wasRecentlyCreated</name>
        <full_name>\Illuminate\Database\Eloquent\Model::wasRecentlyCreated</full_name>
        <default>false</default>
        <docblock line="197">
          <description>Indicates if the model was inserted during the current request lifecycle.</description>
          <long-description/>
          <tag name="var" line="197" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="204" package="Default">
        <name>$snakeAttributes</name>
        <full_name>\Illuminate\Database\Eloquent\Model::snakeAttributes</full_name>
        <default>true</default>
        <docblock line="204">
          <description>Indicates whether attributes are snake cased on arrays.</description>
          <long-description/>
          <tag name="var" line="204" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="protected" namespace="Illuminate\Database\Eloquent" line="211" package="Default">
        <name>$resolver</name>
        <full_name>\Illuminate\Database\Eloquent\Model::resolver</full_name>
        <default/>
        <docblock line="211">
          <description>The connection resolver instance.</description>
          <long-description/>
          <tag name="var" line="211" description="" type="\Illuminate\Database\ConnectionResolverInterface" variable="">
            <type>\Illuminate\Database\ConnectionResolverInterface</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="protected" namespace="Illuminate\Database\Eloquent" line="218" package="Default">
        <name>$dispatcher</name>
        <full_name>\Illuminate\Database\Eloquent\Model::dispatcher</full_name>
        <default/>
        <docblock line="218">
          <description>The event dispatcher instance.</description>
          <long-description/>
          <tag name="var" line="218" description="" type="\Illuminate\Contracts\Events\Dispatcher" variable="">
            <type>\Illuminate\Contracts\Events\Dispatcher</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="protected" namespace="Illuminate\Database\Eloquent" line="225" package="Default">
        <name>$booted</name>
        <full_name>\Illuminate\Database\Eloquent\Model::booted</full_name>
        <default>array()</default>
        <docblock line="225">
          <description>The array of booted models.</description>
          <long-description/>
          <tag name="var" line="225" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="protected" namespace="Illuminate\Database\Eloquent" line="232" package="Default">
        <name>$globalScopes</name>
        <full_name>\Illuminate\Database\Eloquent\Model::globalScopes</full_name>
        <default>array()</default>
        <docblock line="232">
          <description>The array of global scopes on the model.</description>
          <long-description/>
          <tag name="var" line="232" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="protected" namespace="Illuminate\Database\Eloquent" line="239" package="Default">
        <name>$unguarded</name>
        <full_name>\Illuminate\Database\Eloquent\Model::unguarded</full_name>
        <default>false</default>
        <docblock line="239">
          <description>Indicates if all mass assignment is enabled.</description>
          <long-description/>
          <tag name="var" line="239" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="protected" namespace="Illuminate\Database\Eloquent" line="246" package="Default">
        <name>$mutatorCache</name>
        <full_name>\Illuminate\Database\Eloquent\Model::mutatorCache</full_name>
        <default>array()</default>
        <docblock line="246">
          <description>The cache of the mutated attributes for each class.</description>
          <long-description/>
          <tag name="var" line="246" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="253" package="Default">
        <name>$manyMethods</name>
        <full_name>\Illuminate\Database\Eloquent\Model::manyMethods</full_name>
        <default>array('belongsToMany', 'morphToMany', 'morphedByMany')</default>
        <docblock line="253">
          <description>The many to many relationship methods.</description>
          <long-description/>
          <tag name="var" line="253" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="275" package="Default">
        <name>__construct</name>
        <full_name>\Illuminate\Database\Eloquent\Model::__construct()</full_name>
        <docblock line="275">
          <description>Create a new Eloquent model instance.</description>
          <long-description/>
          <tag name="param" line="275" description="" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="return" line="275" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$attributes</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="289" package="Default">
        <name>bootIfNotBooted</name>
        <full_name>\Illuminate\Database\Eloquent\Model::bootIfNotBooted()</full_name>
        <docblock line="289">
          <description>Check if the model needs to be booted and if so, do it.</description>
          <long-description/>
          <tag name="return" line="289" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Illuminate\Database\Eloquent" line="307" package="Default">
        <name>boot</name>
        <full_name>\Illuminate\Database\Eloquent\Model::boot()</full_name>
        <docblock line="307">
          <description>The "booting" method of the model.</description>
          <long-description/>
          <tag name="return" line="307" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Illuminate\Database\Eloquent" line="317" package="Default">
        <name>bootTraits</name>
        <full_name>\Illuminate\Database\Eloquent\Model::bootTraits()</full_name>
        <docblock line="317">
          <description>Boot all of the bootable traits on the model.</description>
          <long-description/>
          <tag name="return" line="317" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="333" package="Default">
        <name>clearBootedModels</name>
        <full_name>\Illuminate\Database\Eloquent\Model::clearBootedModels()</full_name>
        <docblock line="333">
          <description>Clear the list of booted models so they will be re-booted.</description>
          <long-description/>
          <tag name="return" line="333" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="348" package="Default">
        <name>addGlobalScope</name>
        <full_name>\Illuminate\Database\Eloquent\Model::addGlobalScope()</full_name>
        <docblock line="348">
          <description>Register a new global scope on the model.</description>
          <long-description/>
          <tag name="param" line="348" description="" type="\Illuminate\Database\Eloquent\Scope|\Closure|string" variable="$scope">
            <type>\Illuminate\Database\Eloquent\Scope</type>
            <type>\Closure</type>
            <type>string</type>
          </tag>
          <tag name="param" line="348" description="" type="\Closure|null" variable="$implementation">
            <type>\Closure</type>
            <type>null</type>
          </tag>
          <tag name="return" line="348" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="348" description="" type="\InvalidArgumentException">
            <type>\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$scope</name>
          <default/>
          <type>\Illuminate\Database\Eloquent\Scope|\Closure|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$implementation</name>
          <default>null</default>
          <type>\Closure|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="371" package="Default">
        <name>hasGlobalScope</name>
        <full_name>\Illuminate\Database\Eloquent\Model::hasGlobalScope()</full_name>
        <docblock line="371">
          <description>Determine if a model has a global scope.</description>
          <long-description/>
          <tag name="param" line="371" description="" type="\Illuminate\Database\Eloquent\Scope|string" variable="$scope">
            <type>\Illuminate\Database\Eloquent\Scope</type>
            <type>string</type>
          </tag>
          <tag name="return" line="371" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$scope</name>
          <default/>
          <type>\Illuminate\Database\Eloquent\Scope|string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="382" package="Default">
        <name>getGlobalScope</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getGlobalScope()</full_name>
        <docblock line="382">
          <description>Get a global scope registered with the model.</description>
          <long-description/>
          <tag name="param" line="382" description="" type="\Illuminate\Database\Eloquent\Scope|string" variable="$scope">
            <type>\Illuminate\Database\Eloquent\Scope</type>
            <type>string</type>
          </tag>
          <tag name="return" line="382" description="" type="\Illuminate\Database\Eloquent\Scope|\Closure|null">
            <type>\Illuminate\Database\Eloquent\Scope</type>
            <type>\Closure</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$scope</name>
          <default/>
          <type>\Illuminate\Database\Eloquent\Scope|string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="400" package="Default">
        <name>getGlobalScopes</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getGlobalScopes()</full_name>
        <docblock line="400">
          <description>Get the global scopes for this class instance.</description>
          <long-description/>
          <tag name="return" line="400" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="412" package="Default">
        <name>observe</name>
        <full_name>\Illuminate\Database\Eloquent\Model::observe()</full_name>
        <docblock line="412">
          <description>Register an observer with the Model.</description>
          <long-description/>
          <tag name="param" line="412" description="" type="object|string" variable="$class">
            <type>object</type>
            <type>string</type>
          </tag>
          <tag name="param" line="412" description="" type="integer" variable="$priority">
            <type>integer</type>
          </tag>
          <tag name="return" line="412" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default/>
          <type>object|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$priority</name>
          <default>0</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="436" package="Default">
        <name>fill</name>
        <full_name>\Illuminate\Database\Eloquent\Model::fill()</full_name>
        <docblock line="436">
          <description>Fill the model with an array of attributes.</description>
          <long-description/>
          <tag name="param" line="436" description="" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="return" line="436" description="" type="\Illuminate\Database\Eloquent\Model">
            <type>\Illuminate\Database\Eloquent\Model</type>
          </tag>
          <tag name="throws" line="436" description="" type="\Illuminate\Database\Eloquent\MassAssignmentException">
            <type>\Illuminate\Database\Eloquent\MassAssignmentException</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$attributes</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="462" package="Default">
        <name>forceFill</name>
        <full_name>\Illuminate\Database\Eloquent\Model::forceFill()</full_name>
        <docblock line="462">
          <description>Fill the model with an array of attributes. Force mass assignment.</description>
          <long-description/>
          <tag name="param" line="462" description="" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="return" line="462" description="" type="\Illuminate\Database\Eloquent\Model">
            <type>\Illuminate\Database\Eloquent\Model</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$attributes</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="480" package="Default">
        <name>fillableFromArray</name>
        <full_name>\Illuminate\Database\Eloquent\Model::fillableFromArray()</full_name>
        <docblock line="480">
          <description>Get the fillable attributes of a given array.</description>
          <long-description/>
          <tag name="param" line="480" description="" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="return" line="480" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$attributes</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="496" package="Default">
        <name>newInstance</name>
        <full_name>\Illuminate\Database\Eloquent\Model::newInstance()</full_name>
        <docblock line="496">
          <description>Create a new instance of the given model.</description>
          <long-description/>
          <tag name="param" line="496" description="" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="param" line="496" description="" type="boolean" variable="$exists">
            <type>boolean</type>
          </tag>
          <tag name="return" line="496" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$attributes</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$exists</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="515" package="Default">
        <name>newFromBuilder</name>
        <full_name>\Illuminate\Database\Eloquent\Model::newFromBuilder()</full_name>
        <docblock line="515">
          <description>Create a new model instance that is existing.</description>
          <long-description/>
          <tag name="param" line="515" description="" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="param" line="515" description="" type="string|null" variable="$connection">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="515" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$attributes</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="533" package="Default">
        <name>hydrate</name>
        <full_name>\Illuminate\Database\Eloquent\Model::hydrate()</full_name>
        <docblock line="533">
          <description>Create a collection of models from plain arrays.</description>
          <long-description/>
          <tag name="param" line="533" description="" type="array" variable="$items">
            <type>array</type>
          </tag>
          <tag name="param" line="533" description="" type="string|null" variable="$connection">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="533" description="" type="\Illuminate\Database\Eloquent\Collection">
            <type>\Illuminate\Database\Eloquent\Collection</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$items</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="552" package="Default">
        <name>hydrateRaw</name>
        <full_name>\Illuminate\Database\Eloquent\Model::hydrateRaw()</full_name>
        <docblock line="552">
          <description>Create a collection of models from a raw query.</description>
          <long-description/>
          <tag name="param" line="552" description="" type="string" variable="$query">
            <type>string</type>
          </tag>
          <tag name="param" line="552" description="" type="array" variable="$bindings">
            <type>array</type>
          </tag>
          <tag name="param" line="552" description="" type="string|null" variable="$connection">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="552" description="" type="\Illuminate\Database\Eloquent\Collection">
            <type>\Illuminate\Database\Eloquent\Collection</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$query</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$bindings</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="567" package="Default">
        <name>create</name>
        <full_name>\Illuminate\Database\Eloquent\Model::create()</full_name>
        <docblock line="567">
          <description>Save a new model and return the instance.</description>
          <long-description/>
          <tag name="param" line="567" description="" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="return" line="567" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$attributes</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="582" package="Default">
        <name>forceCreate</name>
        <full_name>\Illuminate\Database\Eloquent\Model::forceCreate()</full_name>
        <docblock line="582">
          <description>Save a new model and return the instance. Allow mass-assignment.</description>
          <long-description/>
          <tag name="param" line="582" description="" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="return" line="582" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$attributes</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="599" package="Default">
        <name>query</name>
        <full_name>\Illuminate\Database\Eloquent\Model::query()</full_name>
        <docblock line="599">
          <description>Begin querying the model.</description>
          <long-description/>
          <tag name="return" line="599" description="" type="\Illuminate\Database\Eloquent\Builder">
            <type>\Illuminate\Database\Eloquent\Builder</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="610" package="Default">
        <name>on</name>
        <full_name>\Illuminate\Database\Eloquent\Model::on()</full_name>
        <docblock line="610">
          <description>Begin querying the model on a given connection.</description>
          <long-description/>
          <tag name="param" line="610" description="" type="string|null" variable="$connection">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="610" description="" type="\Illuminate\Database\Eloquent\Builder">
            <type>\Illuminate\Database\Eloquent\Builder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="627" package="Default">
        <name>onWriteConnection</name>
        <full_name>\Illuminate\Database\Eloquent\Model::onWriteConnection()</full_name>
        <docblock line="627">
          <description>Begin querying the model on the write connection.</description>
          <long-description/>
          <tag name="return" line="627" description="" type="\Illuminate\Database\Query\Builder">
            <type>\Illuminate\Database\Query\Builder</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="640" package="Default">
        <name>all</name>
        <full_name>\Illuminate\Database\Eloquent\Model::all()</full_name>
        <docblock line="640">
          <description>Get all of the models from the database.</description>
          <long-description/>
          <tag name="param" line="640" description="" type="array|mixed" variable="$columns">
            <type>array</type>
            <type>mixed</type>
          </tag>
          <tag name="return" line="640" description="" type="\Illuminate\Database\Eloquent\Collection|array&lt;mixed,static&gt;">
            <type>\Illuminate\Database\Eloquent\Collection</type>
            <type>array&lt;mixed,static&gt;</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$columns</name>
          <default>array('*')</default>
          <type>array|mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="655" package="Default">
        <name>fresh</name>
        <full_name>\Illuminate\Database\Eloquent\Model::fresh()</full_name>
        <docblock line="655">
          <description>Reload a fresh model instance from the database.</description>
          <long-description/>
          <tag name="param" line="655" description="" type="array|string" variable="$with">
            <type>array</type>
            <type>string</type>
          </tag>
          <tag name="return" line="655" description="" type="$this|null">
            <type>\Illuminate\Database\Eloquent\Model</type>
            <type>null</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$with</name>
          <default>array()</default>
          <type>array|string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="672" package="Default">
        <name>load</name>
        <full_name>\Illuminate\Database\Eloquent\Model::load()</full_name>
        <docblock line="672">
          <description>Eager load relations on the model.</description>
          <long-description/>
          <tag name="param" line="672" description="" type="array|string" variable="$relations">
            <type>array</type>
            <type>string</type>
          </tag>
          <tag name="return" line="672" description="" type="\Illuminate\Database\Eloquent\Model">
            <type>\Illuminate\Database\Eloquent\Model</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$relations</name>
          <default/>
          <type>array|string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="691" package="Default">
        <name>with</name>
        <full_name>\Illuminate\Database\Eloquent\Model::with()</full_name>
        <docblock line="691">
          <description>Begin querying a model with eager loading.</description>
          <long-description/>
          <tag name="param" line="691" description="" type="array|string" variable="$relations">
            <type>array</type>
            <type>string</type>
          </tag>
          <tag name="return" line="691" description="" type="\Illuminate\Database\Eloquent\Builder|static">
            <type>\Illuminate\Database\Eloquent\Builder</type>
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$relations</name>
          <default/>
          <type>array|string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="708" package="Default">
        <name>append</name>
        <full_name>\Illuminate\Database\Eloquent\Model::append()</full_name>
        <docblock line="708">
          <description>Append attributes to query when building a query.</description>
          <long-description/>
          <tag name="param" line="708" description="" type="array|string" variable="$attributes">
            <type>array</type>
            <type>string</type>
          </tag>
          <tag name="return" line="708" description="" type="\Illuminate\Database\Eloquent\Model">
            <type>\Illuminate\Database\Eloquent\Model</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$attributes</name>
          <default/>
          <type>array|string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="729" package="Default">
        <name>hasOne</name>
        <full_name>\Illuminate\Database\Eloquent\Model::hasOne()</full_name>
        <docblock line="729">
          <description>Define a one-to-one relationship.</description>
          <long-description/>
          <tag name="param" line="729" description="" type="string" variable="$related">
            <type>string</type>
          </tag>
          <tag name="param" line="729" description="" type="string" variable="$foreignKey">
            <type>string</type>
          </tag>
          <tag name="param" line="729" description="" type="string" variable="$localKey">
            <type>string</type>
          </tag>
          <tag name="return" line="729" description="" type="\Illuminate\Database\Eloquent\Relations\HasOne">
            <type>\Illuminate\Database\Eloquent\Relations\HasOne</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$related</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$foreignKey</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$localKey</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="750" package="Default">
        <name>morphOne</name>
        <full_name>\Illuminate\Database\Eloquent\Model::morphOne()</full_name>
        <docblock line="750">
          <description>Define a polymorphic one-to-one relationship.</description>
          <long-description/>
          <tag name="param" line="750" description="" type="string" variable="$related">
            <type>string</type>
          </tag>
          <tag name="param" line="750" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="750" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="param" line="750" description="" type="string" variable="$id">
            <type>string</type>
          </tag>
          <tag name="param" line="750" description="" type="string" variable="$localKey">
            <type>string</type>
          </tag>
          <tag name="return" line="750" description="" type="\Illuminate\Database\Eloquent\Relations\MorphOne">
            <type>\Illuminate\Database\Eloquent\Relations\MorphOne</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$related</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$localKey</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="772" package="Default">
        <name>belongsTo</name>
        <full_name>\Illuminate\Database\Eloquent\Model::belongsTo()</full_name>
        <docblock line="772">
          <description>Define an inverse one-to-one or many relationship.</description>
          <long-description/>
          <tag name="param" line="772" description="" type="string" variable="$related">
            <type>string</type>
          </tag>
          <tag name="param" line="772" description="" type="string" variable="$foreignKey">
            <type>string</type>
          </tag>
          <tag name="param" line="772" description="" type="string" variable="$otherKey">
            <type>string</type>
          </tag>
          <tag name="param" line="772" description="" type="string" variable="$relation">
            <type>string</type>
          </tag>
          <tag name="return" line="772" description="" type="\Illuminate\Database\Eloquent\Relations\BelongsTo">
            <type>\Illuminate\Database\Eloquent\Relations\BelongsTo</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$related</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$foreignKey</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$otherKey</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$relation</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="810" package="Default">
        <name>morphTo</name>
        <full_name>\Illuminate\Database\Eloquent\Model::morphTo()</full_name>
        <docblock line="810">
          <description>Define a polymorphic, inverse one-to-one or many relationship.</description>
          <long-description/>
          <tag name="param" line="810" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="810" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="param" line="810" description="" type="string" variable="$id">
            <type>string</type>
          </tag>
          <tag name="return" line="810" description="" type="\Illuminate\Database\Eloquent\Relations\MorphTo">
            <type>\Illuminate\Database\Eloquent\Relations\MorphTo</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="852" package="Default">
        <name>getActualClassNameForMorph</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getActualClassNameForMorph()</full_name>
        <docblock line="852">
          <description>Retrieve the fully qualified class name from a slug.</description>
          <long-description/>
          <tag name="param" line="852" description="" type="string" variable="$class">
            <type>string</type>
          </tag>
          <tag name="return" line="852" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="865" package="Default">
        <name>hasMany</name>
        <full_name>\Illuminate\Database\Eloquent\Model::hasMany()</full_name>
        <docblock line="865">
          <description>Define a one-to-many relationship.</description>
          <long-description/>
          <tag name="param" line="865" description="" type="string" variable="$related">
            <type>string</type>
          </tag>
          <tag name="param" line="865" description="" type="string" variable="$foreignKey">
            <type>string</type>
          </tag>
          <tag name="param" line="865" description="" type="string" variable="$localKey">
            <type>string</type>
          </tag>
          <tag name="return" line="865" description="" type="\Illuminate\Database\Eloquent\Relations\HasMany">
            <type>\Illuminate\Database\Eloquent\Relations\HasMany</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$related</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$foreignKey</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$localKey</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="886" package="Default">
        <name>hasManyThrough</name>
        <full_name>\Illuminate\Database\Eloquent\Model::hasManyThrough()</full_name>
        <docblock line="886">
          <description>Define a has-many-through relationship.</description>
          <long-description/>
          <tag name="param" line="886" description="" type="string" variable="$related">
            <type>string</type>
          </tag>
          <tag name="param" line="886" description="" type="string" variable="$through">
            <type>string</type>
          </tag>
          <tag name="param" line="886" description="" type="string|null" variable="$firstKey">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="param" line="886" description="" type="string|null" variable="$secondKey">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="param" line="886" description="" type="string|null" variable="$localKey">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="886" description="" type="\Illuminate\Database\Eloquent\Relations\HasManyThrough">
            <type>\Illuminate\Database\Eloquent\Relations\HasManyThrough</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$related</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$through</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$firstKey</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$secondKey</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$localKey</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="909" package="Default">
        <name>morphMany</name>
        <full_name>\Illuminate\Database\Eloquent\Model::morphMany()</full_name>
        <docblock line="909">
          <description>Define a polymorphic one-to-many relationship.</description>
          <long-description/>
          <tag name="param" line="909" description="" type="string" variable="$related">
            <type>string</type>
          </tag>
          <tag name="param" line="909" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="909" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="param" line="909" description="" type="string" variable="$id">
            <type>string</type>
          </tag>
          <tag name="param" line="909" description="" type="string" variable="$localKey">
            <type>string</type>
          </tag>
          <tag name="return" line="909" description="" type="\Illuminate\Database\Eloquent\Relations\MorphMany">
            <type>\Illuminate\Database\Eloquent\Relations\MorphMany</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$related</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$localKey</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="935" package="Default">
        <name>belongsToMany</name>
        <full_name>\Illuminate\Database\Eloquent\Model::belongsToMany()</full_name>
        <docblock line="935">
          <description>Define a many-to-many relationship.</description>
          <long-description/>
          <tag name="param" line="935" description="" type="string" variable="$related">
            <type>string</type>
          </tag>
          <tag name="param" line="935" description="" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="935" description="" type="string" variable="$foreignKey">
            <type>string</type>
          </tag>
          <tag name="param" line="935" description="" type="string" variable="$otherKey">
            <type>string</type>
          </tag>
          <tag name="param" line="935" description="" type="string" variable="$relation">
            <type>string</type>
          </tag>
          <tag name="return" line="935" description="" type="\Illuminate\Database\Eloquent\Relations\BelongsToMany">
            <type>\Illuminate\Database\Eloquent\Relations\BelongsToMany</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$related</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$foreignKey</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$otherKey</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$relation</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="979" package="Default">
        <name>morphToMany</name>
        <full_name>\Illuminate\Database\Eloquent\Model::morphToMany()</full_name>
        <docblock line="979">
          <description>Define a polymorphic many-to-many relationship.</description>
          <long-description/>
          <tag name="param" line="979" description="" type="string" variable="$related">
            <type>string</type>
          </tag>
          <tag name="param" line="979" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="979" description="" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="979" description="" type="string" variable="$foreignKey">
            <type>string</type>
          </tag>
          <tag name="param" line="979" description="" type="string" variable="$otherKey">
            <type>string</type>
          </tag>
          <tag name="param" line="979" description="" type="boolean" variable="$inverse">
            <type>boolean</type>
          </tag>
          <tag name="return" line="979" description="" type="\Illuminate\Database\Eloquent\Relations\MorphToMany">
            <type>\Illuminate\Database\Eloquent\Relations\MorphToMany</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$related</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$foreignKey</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$otherKey</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$inverse</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="1015" package="Default">
        <name>morphedByMany</name>
        <full_name>\Illuminate\Database\Eloquent\Model::morphedByMany()</full_name>
        <docblock line="1015">
          <description>Define a polymorphic, inverse many-to-many relationship.</description>
          <long-description/>
          <tag name="param" line="1015" description="" type="string" variable="$related">
            <type>string</type>
          </tag>
          <tag name="param" line="1015" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="1015" description="" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="1015" description="" type="string" variable="$foreignKey">
            <type>string</type>
          </tag>
          <tag name="param" line="1015" description="" type="string" variable="$otherKey">
            <type>string</type>
          </tag>
          <tag name="return" line="1015" description="" type="\Illuminate\Database\Eloquent\Relations\MorphToMany">
            <type>\Illuminate\Database\Eloquent\Relations\MorphToMany</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$related</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$foreignKey</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$otherKey</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="1032" package="Default">
        <name>getBelongsToManyCaller</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getBelongsToManyCaller()</full_name>
        <docblock line="1032">
          <description>Get the relationship name of the belongs to many.</description>
          <long-description/>
          <tag name="return" line="1032" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="1051" package="Default">
        <name>joiningTable</name>
        <full_name>\Illuminate\Database\Eloquent\Model::joiningTable()</full_name>
        <docblock line="1051">
          <description>Get the joining table name for a many-to-many relation.</description>
          <long-description/>
          <tag name="param" line="1051" description="" type="string" variable="$related">
            <type>string</type>
          </tag>
          <tag name="return" line="1051" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$related</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="1076" package="Default">
        <name>destroy</name>
        <full_name>\Illuminate\Database\Eloquent\Model::destroy()</full_name>
        <docblock line="1076">
          <description>Destroy the models for the given IDs.</description>
          <long-description/>
          <tag name="param" line="1076" description="" type="array|integer" variable="$ids">
            <type>array</type>
            <type>integer</type>
          </tag>
          <tag name="return" line="1076" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$ids</name>
          <default/>
          <type>array|integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="1108" package="Default">
        <name>delete</name>
        <full_name>\Illuminate\Database\Eloquent\Model::delete()</full_name>
        <docblock line="1108">
          <description>Delete the model from the database.</description>
          <long-description/>
          <tag name="return" line="1108" description="" type="boolean|null">
            <type>boolean</type>
            <type>null</type>
          </tag>
          <tag name="throws" line="1108" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="1144" package="Default">
        <name>forceDelete</name>
        <full_name>\Illuminate\Database\Eloquent\Model::forceDelete()</full_name>
        <docblock line="1144">
          <description>Force a hard delete on a soft deleted model.</description>
          <long-description>This method protects developers from running forceDelete when trait is missing.</long-description>
          <tag name="return" line="1144" description="" type="boolean|null">
            <type>boolean</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="1154" package="Default">
        <name>performDeleteOnModel</name>
        <full_name>\Illuminate\Database\Eloquent\Model::performDeleteOnModel()</full_name>
        <docblock line="1154">
          <description>Perform the actual delete query on this model instance.</description>
          <long-description/>
          <tag name="return" line="1154" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="1166" package="Default">
        <name>saving</name>
        <full_name>\Illuminate\Database\Eloquent\Model::saving()</full_name>
        <docblock line="1166">
          <description>Register a saving model event with the dispatcher.</description>
          <long-description/>
          <tag name="param" line="1166" description="" type="\Closure|string" variable="$callback">
            <type>\Closure</type>
            <type>string</type>
          </tag>
          <tag name="param" line="1166" description="" type="integer" variable="$priority">
            <type>integer</type>
          </tag>
          <tag name="return" line="1166" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>\Closure|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$priority</name>
          <default>0</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="1178" package="Default">
        <name>saved</name>
        <full_name>\Illuminate\Database\Eloquent\Model::saved()</full_name>
        <docblock line="1178">
          <description>Register a saved model event with the dispatcher.</description>
          <long-description/>
          <tag name="param" line="1178" description="" type="\Closure|string" variable="$callback">
            <type>\Closure</type>
            <type>string</type>
          </tag>
          <tag name="param" line="1178" description="" type="integer" variable="$priority">
            <type>integer</type>
          </tag>
          <tag name="return" line="1178" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>\Closure|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$priority</name>
          <default>0</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="1190" package="Default">
        <name>updating</name>
        <full_name>\Illuminate\Database\Eloquent\Model::updating()</full_name>
        <docblock line="1190">
          <description>Register an updating model event with the dispatcher.</description>
          <long-description/>
          <tag name="param" line="1190" description="" type="\Closure|string" variable="$callback">
            <type>\Closure</type>
            <type>string</type>
          </tag>
          <tag name="param" line="1190" description="" type="integer" variable="$priority">
            <type>integer</type>
          </tag>
          <tag name="return" line="1190" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>\Closure|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$priority</name>
          <default>0</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="1202" package="Default">
        <name>updated</name>
        <full_name>\Illuminate\Database\Eloquent\Model::updated()</full_name>
        <docblock line="1202">
          <description>Register an updated model event with the dispatcher.</description>
          <long-description/>
          <tag name="param" line="1202" description="" type="\Closure|string" variable="$callback">
            <type>\Closure</type>
            <type>string</type>
          </tag>
          <tag name="param" line="1202" description="" type="integer" variable="$priority">
            <type>integer</type>
          </tag>
          <tag name="return" line="1202" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>\Closure|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$priority</name>
          <default>0</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="1214" package="Default">
        <name>creating</name>
        <full_name>\Illuminate\Database\Eloquent\Model::creating()</full_name>
        <docblock line="1214">
          <description>Register a creating model event with the dispatcher.</description>
          <long-description/>
          <tag name="param" line="1214" description="" type="\Closure|string" variable="$callback">
            <type>\Closure</type>
            <type>string</type>
          </tag>
          <tag name="param" line="1214" description="" type="integer" variable="$priority">
            <type>integer</type>
          </tag>
          <tag name="return" line="1214" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>\Closure|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$priority</name>
          <default>0</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="1226" package="Default">
        <name>created</name>
        <full_name>\Illuminate\Database\Eloquent\Model::created()</full_name>
        <docblock line="1226">
          <description>Register a created model event with the dispatcher.</description>
          <long-description/>
          <tag name="param" line="1226" description="" type="\Closure|string" variable="$callback">
            <type>\Closure</type>
            <type>string</type>
          </tag>
          <tag name="param" line="1226" description="" type="integer" variable="$priority">
            <type>integer</type>
          </tag>
          <tag name="return" line="1226" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>\Closure|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$priority</name>
          <default>0</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="1238" package="Default">
        <name>deleting</name>
        <full_name>\Illuminate\Database\Eloquent\Model::deleting()</full_name>
        <docblock line="1238">
          <description>Register a deleting model event with the dispatcher.</description>
          <long-description/>
          <tag name="param" line="1238" description="" type="\Closure|string" variable="$callback">
            <type>\Closure</type>
            <type>string</type>
          </tag>
          <tag name="param" line="1238" description="" type="integer" variable="$priority">
            <type>integer</type>
          </tag>
          <tag name="return" line="1238" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>\Closure|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$priority</name>
          <default>0</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="1250" package="Default">
        <name>deleted</name>
        <full_name>\Illuminate\Database\Eloquent\Model::deleted()</full_name>
        <docblock line="1250">
          <description>Register a deleted model event with the dispatcher.</description>
          <long-description/>
          <tag name="param" line="1250" description="" type="\Closure|string" variable="$callback">
            <type>\Closure</type>
            <type>string</type>
          </tag>
          <tag name="param" line="1250" description="" type="integer" variable="$priority">
            <type>integer</type>
          </tag>
          <tag name="return" line="1250" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>\Closure|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$priority</name>
          <default>0</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="1260" package="Default">
        <name>flushEventListeners</name>
        <full_name>\Illuminate\Database\Eloquent\Model::flushEventListeners()</full_name>
        <docblock line="1260">
          <description>Remove all of the event listeners for the model.</description>
          <long-description/>
          <tag name="return" line="1260" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="Illuminate\Database\Eloquent" line="1281" package="Default">
        <name>registerModelEvent</name>
        <full_name>\Illuminate\Database\Eloquent\Model::registerModelEvent()</full_name>
        <docblock line="1281">
          <description>Register a model event with the dispatcher.</description>
          <long-description/>
          <tag name="param" line="1281" description="" type="string" variable="$event">
            <type>string</type>
          </tag>
          <tag name="param" line="1281" description="" type="\Closure|string" variable="$callback">
            <type>\Closure</type>
            <type>string</type>
          </tag>
          <tag name="param" line="1281" description="" type="integer" variable="$priority">
            <type>integer</type>
          </tag>
          <tag name="return" line="1281" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$event</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>\Closure|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$priority</name>
          <default>0</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="1295" package="Default">
        <name>getObservableEvents</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getObservableEvents()</full_name>
        <docblock line="1295">
          <description>Get the observable event names.</description>
          <long-description/>
          <tag name="return" line="1295" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="1313" package="Default">
        <name>setObservableEvents</name>
        <full_name>\Illuminate\Database\Eloquent\Model::setObservableEvents()</full_name>
        <docblock line="1313">
          <description>Set the observable event names.</description>
          <long-description/>
          <tag name="param" line="1313" description="" type="array" variable="$observables">
            <type>array</type>
          </tag>
          <tag name="return" line="1313" description="" type="\Illuminate\Database\Eloquent\Model">
            <type>\Illuminate\Database\Eloquent\Model</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$observables</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="1326" package="Default">
        <name>addObservableEvents</name>
        <full_name>\Illuminate\Database\Eloquent\Model::addObservableEvents()</full_name>
        <docblock line="1326">
          <description>Add an observable event name.</description>
          <long-description/>
          <tag name="param" line="1326" description="" type="array|mixed" variable="$observables">
            <type>array</type>
            <type>mixed</type>
          </tag>
          <tag name="return" line="1326" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$observables</name>
          <default/>
          <type>array|mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="1339" package="Default">
        <name>removeObservableEvents</name>
        <full_name>\Illuminate\Database\Eloquent\Model::removeObservableEvents()</full_name>
        <docblock line="1339">
          <description>Remove an observable event name.</description>
          <long-description/>
          <tag name="param" line="1339" description="" type="array|mixed" variable="$observables">
            <type>array</type>
            <type>mixed</type>
          </tag>
          <tag name="return" line="1339" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$observables</name>
          <default/>
          <type>array|mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="1354" package="Default">
        <name>increment</name>
        <full_name>\Illuminate\Database\Eloquent\Model::increment()</full_name>
        <docblock line="1354">
          <description>Increment a column's value by a given amount.</description>
          <long-description/>
          <tag name="param" line="1354" description="" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="param" line="1354" description="" type="integer" variable="$amount">
            <type>integer</type>
          </tag>
          <tag name="param" line="1354" description="" type="array" variable="$extra">
            <type>array</type>
          </tag>
          <tag name="return" line="1354" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$amount</name>
          <default>1</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$extra</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="1367" package="Default">
        <name>decrement</name>
        <full_name>\Illuminate\Database\Eloquent\Model::decrement()</full_name>
        <docblock line="1367">
          <description>Decrement a column's value by a given amount.</description>
          <long-description/>
          <tag name="param" line="1367" description="" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="param" line="1367" description="" type="integer" variable="$amount">
            <type>integer</type>
          </tag>
          <tag name="param" line="1367" description="" type="array" variable="$extra">
            <type>array</type>
          </tag>
          <tag name="return" line="1367" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$amount</name>
          <default>1</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$extra</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="1381" package="Default">
        <name>incrementOrDecrement</name>
        <full_name>\Illuminate\Database\Eloquent\Model::incrementOrDecrement()</full_name>
        <docblock line="1381">
          <description>Run the increment or decrement method on the model.</description>
          <long-description/>
          <tag name="param" line="1381" description="" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="param" line="1381" description="" type="integer" variable="$amount">
            <type>integer</type>
          </tag>
          <tag name="param" line="1381" description="" type="array" variable="$extra">
            <type>array</type>
          </tag>
          <tag name="param" line="1381" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="1381" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$amount</name>
          <default/>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$extra</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="1402" package="Default">
        <name>incrementOrDecrementAttributeValue</name>
        <full_name>\Illuminate\Database\Eloquent\Model::incrementOrDecrementAttributeValue()</full_name>
        <docblock line="1402">
          <description>Increment the underlying attribute value and sync with original.</description>
          <long-description/>
          <tag name="param" line="1402" description="" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="param" line="1402" description="" type="integer" variable="$amount">
            <type>integer</type>
          </tag>
          <tag name="param" line="1402" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="1402" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$amount</name>
          <default/>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="1416" package="Default">
        <name>update</name>
        <full_name>\Illuminate\Database\Eloquent\Model::update()</full_name>
        <docblock line="1416">
          <description>Update the model in the database.</description>
          <long-description/>
          <tag name="param" line="1416" description="" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="param" line="1416" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="1416" description="" type="boolean|integer">
            <type>boolean</type>
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$attributes</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="1430" package="Default">
        <name>push</name>
        <full_name>\Illuminate\Database\Eloquent\Model::push()</full_name>
        <docblock line="1430">
          <description>Save the model and all of its relationships.</description>
          <long-description/>
          <tag name="return" line="1430" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="1459" package="Default">
        <name>save</name>
        <full_name>\Illuminate\Database\Eloquent\Model::save()</full_name>
        <docblock line="1459">
          <description>Save the model to the database.</description>
          <long-description/>
          <tag name="param" line="1459" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="1459" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="1499" package="Default">
        <name>saveOrFail</name>
        <full_name>\Illuminate\Database\Eloquent\Model::saveOrFail()</full_name>
        <docblock line="1499">
          <description>Save the model to the database using transaction.</description>
          <long-description/>
          <tag name="param" line="1499" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="1499" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="1499" description="" type="\Throwable">
            <type>\Throwable</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="1512" package="Default">
        <name>finishSave</name>
        <full_name>\Illuminate\Database\Eloquent\Model::finishSave()</full_name>
        <docblock line="1512">
          <description>Finish processing on a successful save operation.</description>
          <long-description/>
          <tag name="param" line="1512" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="1512" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="1530" package="Default">
        <name>performUpdate</name>
        <full_name>\Illuminate\Database\Eloquent\Model::performUpdate()</full_name>
        <docblock line="1530">
          <description>Perform a model update operation.</description>
          <long-description/>
          <tag name="param" line="1530" description="" type="\Illuminate\Database\Eloquent\Builder" variable="$query">
            <type>\Illuminate\Database\Eloquent\Builder</type>
          </tag>
          <tag name="param" line="1530" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="1530" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$query</name>
          <default/>
          <type>\Illuminate\Database\Eloquent\Builder</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="1571" package="Default">
        <name>performInsert</name>
        <full_name>\Illuminate\Database\Eloquent\Model::performInsert()</full_name>
        <docblock line="1571">
          <description>Perform a model insert operation.</description>
          <long-description/>
          <tag name="param" line="1571" description="" type="\Illuminate\Database\Eloquent\Builder" variable="$query">
            <type>\Illuminate\Database\Eloquent\Builder</type>
          </tag>
          <tag name="param" line="1571" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="1571" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$query</name>
          <default/>
          <type>\Illuminate\Database\Eloquent\Builder</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="1619" package="Default">
        <name>insertAndSetId</name>
        <full_name>\Illuminate\Database\Eloquent\Model::insertAndSetId()</full_name>
        <docblock line="1619">
          <description>Insert the given attributes and set the ID on the model.</description>
          <long-description/>
          <tag name="param" line="1619" description="" type="\Illuminate\Database\Eloquent\Builder" variable="$query">
            <type>\Illuminate\Database\Eloquent\Builder</type>
          </tag>
          <tag name="param" line="1619" description="" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="return" line="1619" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$query</name>
          <default/>
          <type>\Illuminate\Database\Eloquent\Builder</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$attributes</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="1631" package="Default">
        <name>touchOwners</name>
        <full_name>\Illuminate\Database\Eloquent\Model::touchOwners()</full_name>
        <docblock line="1631">
          <description>Touch the owning relations of the model.</description>
          <long-description/>
          <tag name="return" line="1631" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="1654" package="Default">
        <name>touches</name>
        <full_name>\Illuminate\Database\Eloquent\Model::touches()</full_name>
        <docblock line="1654">
          <description>Determine if the model touches a given relation.</description>
          <long-description/>
          <tag name="param" line="1654" description="" type="string" variable="$relation">
            <type>string</type>
          </tag>
          <tag name="return" line="1654" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$relation</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="1666" package="Default">
        <name>fireModelEvent</name>
        <full_name>\Illuminate\Database\Eloquent\Model::fireModelEvent()</full_name>
        <docblock line="1666">
          <description>Fire the given event for the model.</description>
          <long-description/>
          <tag name="param" line="1666" description="" type="string" variable="$event">
            <type>string</type>
          </tag>
          <tag name="param" line="1666" description="" type="boolean" variable="$halt">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1666" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$event</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$halt</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="1688" package="Default">
        <name>setKeysForSaveQuery</name>
        <full_name>\Illuminate\Database\Eloquent\Model::setKeysForSaveQuery()</full_name>
        <docblock line="1688">
          <description>Set the keys for a save update query.</description>
          <long-description/>
          <tag name="param" line="1688" description="" type="\Illuminate\Database\Eloquent\Builder" variable="$query">
            <type>\Illuminate\Database\Eloquent\Builder</type>
          </tag>
          <tag name="return" line="1688" description="" type="\Illuminate\Database\Eloquent\Builder">
            <type>\Illuminate\Database\Eloquent\Builder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$query</name>
          <default/>
          <type>\Illuminate\Database\Eloquent\Builder</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="1700" package="Default">
        <name>getKeyForSaveQuery</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getKeyForSaveQuery()</full_name>
        <docblock line="1700">
          <description>Get the primary key value for a save query.</description>
          <long-description/>
          <tag name="return" line="1700" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="1714" package="Default">
        <name>touch</name>
        <full_name>\Illuminate\Database\Eloquent\Model::touch()</full_name>
        <docblock line="1714">
          <description>Update the model's update timestamp.</description>
          <long-description/>
          <tag name="return" line="1714" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="1730" package="Default">
        <name>updateTimestamps</name>
        <full_name>\Illuminate\Database\Eloquent\Model::updateTimestamps()</full_name>
        <docblock line="1730">
          <description>Update the creation and update timestamps.</description>
          <long-description/>
          <tag name="return" line="1730" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="1749" package="Default">
        <name>setCreatedAt</name>
        <full_name>\Illuminate\Database\Eloquent\Model::setCreatedAt()</full_name>
        <docblock line="1749">
          <description>Set the value of the "created at" attribute.</description>
          <long-description/>
          <tag name="param" line="1749" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="1749" description="" type="\Illuminate\Database\Eloquent\Model">
            <type>\Illuminate\Database\Eloquent\Model</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="1762" package="Default">
        <name>setUpdatedAt</name>
        <full_name>\Illuminate\Database\Eloquent\Model::setUpdatedAt()</full_name>
        <docblock line="1762">
          <description>Set the value of the "updated at" attribute.</description>
          <long-description/>
          <tag name="param" line="1762" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="1762" description="" type="\Illuminate\Database\Eloquent\Model">
            <type>\Illuminate\Database\Eloquent\Model</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="1774" package="Default">
        <name>getCreatedAtColumn</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getCreatedAtColumn()</full_name>
        <docblock line="1774">
          <description>Get the name of the "created at" column.</description>
          <long-description/>
          <tag name="return" line="1774" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="1784" package="Default">
        <name>getUpdatedAtColumn</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getUpdatedAtColumn()</full_name>
        <docblock line="1784">
          <description>Get the name of the "updated at" column.</description>
          <long-description/>
          <tag name="return" line="1784" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="1794" package="Default">
        <name>freshTimestamp</name>
        <full_name>\Illuminate\Database\Eloquent\Model::freshTimestamp()</full_name>
        <docblock line="1794">
          <description>Get a fresh timestamp for the model.</description>
          <long-description/>
          <tag name="return" line="1794" description="" type="\Carbon\Carbon">
            <type>\Carbon\Carbon</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="1804" package="Default">
        <name>freshTimestampString</name>
        <full_name>\Illuminate\Database\Eloquent\Model::freshTimestampString()</full_name>
        <docblock line="1804">
          <description>Get a fresh timestamp for the model.</description>
          <long-description/>
          <tag name="return" line="1804" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="1814" package="Default">
        <name>newQuery</name>
        <full_name>\Illuminate\Database\Eloquent\Model::newQuery()</full_name>
        <docblock line="1814">
          <description>Get a new query builder for the model's table.</description>
          <long-description/>
          <tag name="return" line="1814" description="" type="\Illuminate\Database\Eloquent\Builder">
            <type>\Illuminate\Database\Eloquent\Builder</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="1831" package="Default">
        <name>newQueryWithoutScope</name>
        <full_name>\Illuminate\Database\Eloquent\Model::newQueryWithoutScope()</full_name>
        <docblock line="1831">
          <description>Get a new query instance without a given scope.</description>
          <long-description/>
          <tag name="param" line="1831" description="" type="\Illuminate\Database\Eloquent\Scope|string" variable="$scope">
            <type>\Illuminate\Database\Eloquent\Scope</type>
            <type>string</type>
          </tag>
          <tag name="return" line="1831" description="" type="\Illuminate\Database\Eloquent\Builder">
            <type>\Illuminate\Database\Eloquent\Builder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$scope</name>
          <default/>
          <type>\Illuminate\Database\Eloquent\Scope|string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="1843" package="Default">
        <name>newQueryWithoutScopes</name>
        <full_name>\Illuminate\Database\Eloquent\Model::newQueryWithoutScopes()</full_name>
        <docblock line="1843">
          <description>Get a new query builder that doesn't have any global scopes.</description>
          <long-description/>
          <tag name="return" line="1843" description="" type="\Illuminate\Database\Eloquent\Builder|static">
            <type>\Illuminate\Database\Eloquent\Builder</type>
            <type>static</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="1861" package="Default">
        <name>newEloquentBuilder</name>
        <full_name>\Illuminate\Database\Eloquent\Model::newEloquentBuilder()</full_name>
        <docblock line="1861">
          <description>Create a new Eloquent query builder for the model.</description>
          <long-description/>
          <tag name="param" line="1861" description="" type="\Illuminate\Database\Query\Builder" variable="$query">
            <type>\Illuminate\Database\Query\Builder</type>
          </tag>
          <tag name="return" line="1861" description="" type="\Illuminate\Database\Eloquent\Builder|static">
            <type>\Illuminate\Database\Eloquent\Builder</type>
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$query</name>
          <default/>
          <type>\Illuminate\Database\Query\Builder</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="1871" package="Default">
        <name>newBaseQueryBuilder</name>
        <full_name>\Illuminate\Database\Eloquent\Model::newBaseQueryBuilder()</full_name>
        <docblock line="1871">
          <description>Get a new query builder instance for the connection.</description>
          <long-description/>
          <tag name="return" line="1871" description="" type="\Illuminate\Database\Query\Builder">
            <type>\Illuminate\Database\Query\Builder</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="1886" package="Default">
        <name>newCollection</name>
        <full_name>\Illuminate\Database\Eloquent\Model::newCollection()</full_name>
        <docblock line="1886">
          <description>Create a new Eloquent Collection instance.</description>
          <long-description/>
          <tag name="param" line="1886" description="" type="array" variable="$models">
            <type>array</type>
          </tag>
          <tag name="return" line="1886" description="" type="\Illuminate\Database\Eloquent\Collection">
            <type>\Illuminate\Database\Eloquent\Collection</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$models</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="1900" package="Default">
        <name>newPivot</name>
        <full_name>\Illuminate\Database\Eloquent\Model::newPivot()</full_name>
        <docblock line="1900">
          <description>Create a new pivot model instance.</description>
          <long-description/>
          <tag name="param" line="1900" description="" type="\Illuminate\Database\Eloquent\Model" variable="$parent">
            <type>\Illuminate\Database\Eloquent\Model</type>
          </tag>
          <tag name="param" line="1900" description="" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="param" line="1900" description="" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="1900" description="" type="boolean" variable="$exists">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1900" description="" type="\Illuminate\Database\Eloquent\Relations\Pivot">
            <type>\Illuminate\Database\Eloquent\Relations\Pivot</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parent</name>
          <default/>
          <type>\Illuminate\Database\Eloquent\Model</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$attributes</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$exists</name>
          <default/>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="1910" package="Default">
        <name>getTable</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getTable()</full_name>
        <docblock line="1910">
          <description>Get the table associated with the model.</description>
          <long-description/>
          <tag name="return" line="1910" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="1925" package="Default">
        <name>setTable</name>
        <full_name>\Illuminate\Database\Eloquent\Model::setTable()</full_name>
        <docblock line="1925">
          <description>Set the table associated with the model.</description>
          <long-description/>
          <tag name="param" line="1925" description="" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="1925" description="" type="\Illuminate\Database\Eloquent\Model">
            <type>\Illuminate\Database\Eloquent\Model</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="1937" package="Default">
        <name>getKey</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getKey()</full_name>
        <docblock line="1937">
          <description>Get the value of the model's primary key.</description>
          <long-description/>
          <tag name="return" line="1937" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="1947" package="Default">
        <name>getQueueableId</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getQueueableId()</full_name>
        <docblock line="1947">
          <description>Get the queueable identity for the entity.</description>
          <long-description/>
          <tag name="return" line="1947" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\Illuminate\Contracts\Queue\QueueableEntity::getQueueableId()" refers="\Illuminate\Contracts\Queue\QueueableEntity::getQueueableId()" link="/classes/Illuminate.Contracts.Queue.QueueableEntity.html#method_getQueueableId"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="1957" package="Default">
        <name>getKeyName</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getKeyName()</full_name>
        <docblock line="1957">
          <description>Get the primary key for the model.</description>
          <long-description/>
          <tag name="return" line="1957" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="1968" package="Default">
        <name>setKeyName</name>
        <full_name>\Illuminate\Database\Eloquent\Model::setKeyName()</full_name>
        <docblock line="1968">
          <description>Set the primary key for the model.</description>
          <long-description/>
          <tag name="param" line="1968" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="1968" description="" type="\Illuminate\Database\Eloquent\Model">
            <type>\Illuminate\Database\Eloquent\Model</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="1980" package="Default">
        <name>getQualifiedKeyName</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getQualifiedKeyName()</full_name>
        <docblock line="1980">
          <description>Get the table qualified key name.</description>
          <long-description/>
          <tag name="return" line="1980" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="1990" package="Default">
        <name>getRouteKey</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getRouteKey()</full_name>
        <docblock line="1990">
          <description>Get the value of the model's route key.</description>
          <long-description/>
          <tag name="return" line="1990" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\Illuminate\Contracts\Routing\UrlRoutable::getRouteKey()" refers="\Illuminate\Contracts\Routing\UrlRoutable::getRouteKey()" link="/classes/Illuminate.Contracts.Routing.UrlRoutable.html#method_getRouteKey"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2000" package="Default">
        <name>getRouteKeyName</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getRouteKeyName()</full_name>
        <docblock line="2000">
          <description>Get the route key for the model.</description>
          <long-description/>
          <tag name="return" line="2000" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\Illuminate\Contracts\Routing\UrlRoutable::getRouteKeyName()" refers="\Illuminate\Contracts\Routing\UrlRoutable::getRouteKeyName()" link="/classes/Illuminate.Contracts.Routing.UrlRoutable.html#method_getRouteKeyName"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2010" package="Default">
        <name>usesTimestamps</name>
        <full_name>\Illuminate\Database\Eloquent\Model::usesTimestamps()</full_name>
        <docblock line="2010">
          <description>Determine if the model uses timestamps.</description>
          <long-description/>
          <tag name="return" line="2010" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="2023" package="Default">
        <name>getMorphs</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getMorphs()</full_name>
        <docblock line="2023">
          <description>Get the polymorphic relationship columns.</description>
          <long-description/>
          <tag name="param" line="2023" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="2023" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="param" line="2023" description="" type="string" variable="$id">
            <type>string</type>
          </tag>
          <tag name="return" line="2023" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2037" package="Default">
        <name>getMorphClass</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getMorphClass()</full_name>
        <docblock line="2037">
          <description>Get the class name for polymorphic relations.</description>
          <long-description/>
          <tag name="return" line="2037" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2055" package="Default">
        <name>getPerPage</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getPerPage()</full_name>
        <docblock line="2055">
          <description>Get the number of models to return per page.</description>
          <long-description/>
          <tag name="return" line="2055" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2066" package="Default">
        <name>setPerPage</name>
        <full_name>\Illuminate\Database\Eloquent\Model::setPerPage()</full_name>
        <docblock line="2066">
          <description>Set the number of models to return per page.</description>
          <long-description/>
          <tag name="param" line="2066" description="" type="integer" variable="$perPage">
            <type>integer</type>
          </tag>
          <tag name="return" line="2066" description="" type="\Illuminate\Database\Eloquent\Model">
            <type>\Illuminate\Database\Eloquent\Model</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$perPage</name>
          <default/>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2078" package="Default">
        <name>getForeignKey</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getForeignKey()</full_name>
        <docblock line="2078">
          <description>Get the default foreign key name for the model.</description>
          <long-description/>
          <tag name="return" line="2078" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2088" package="Default">
        <name>getHidden</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getHidden()</full_name>
        <docblock line="2088">
          <description>Get the hidden attributes for the model.</description>
          <long-description/>
          <tag name="return" line="2088" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2099" package="Default">
        <name>setHidden</name>
        <full_name>\Illuminate\Database\Eloquent\Model::setHidden()</full_name>
        <docblock line="2099">
          <description>Set the hidden attributes for the model.</description>
          <long-description/>
          <tag name="param" line="2099" description="" type="array" variable="$hidden">
            <type>array</type>
          </tag>
          <tag name="return" line="2099" description="" type="\Illuminate\Database\Eloquent\Model">
            <type>\Illuminate\Database\Eloquent\Model</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hidden</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2112" package="Default">
        <name>addHidden</name>
        <full_name>\Illuminate\Database\Eloquent\Model::addHidden()</full_name>
        <docblock line="2112">
          <description>Add hidden attributes for the model.</description>
          <long-description/>
          <tag name="param" line="2112" description="" type="array|string|null" variable="$attributes">
            <type>array</type>
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="2112" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$attributes</name>
          <default>null</default>
          <type>array|string|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2125" package="Default">
        <name>makeVisible</name>
        <full_name>\Illuminate\Database\Eloquent\Model::makeVisible()</full_name>
        <docblock line="2125">
          <description>Make the given, typically hidden, attributes visible.</description>
          <long-description/>
          <tag name="param" line="2125" description="" type="array|string" variable="$attributes">
            <type>array</type>
            <type>string</type>
          </tag>
          <tag name="return" line="2125" description="" type="\Illuminate\Database\Eloquent\Model">
            <type>\Illuminate\Database\Eloquent\Model</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$attributes</name>
          <default/>
          <type>array|string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2144" package="Default">
        <name>withHidden</name>
        <full_name>\Illuminate\Database\Eloquent\Model::withHidden()</full_name>
        <docblock line="2144">
          <description>Make the given, typically hidden, attributes visible.</description>
          <long-description/>
          <tag name="param" line="2144" description="" type="array|string" variable="$attributes">
            <type>array</type>
            <type>string</type>
          </tag>
          <tag name="return" line="2144" description="" type="\Illuminate\Database\Eloquent\Model">
            <type>\Illuminate\Database\Eloquent\Model</type>
          </tag>
          <tag name="deprecated" line="2144" description="since version 5.2. Use the &quot;makeVisible&quot; method directly."/>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$attributes</name>
          <default/>
          <type>array|string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2154" package="Default">
        <name>getVisible</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getVisible()</full_name>
        <docblock line="2154">
          <description>Get the visible attributes for the model.</description>
          <long-description/>
          <tag name="return" line="2154" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2165" package="Default">
        <name>setVisible</name>
        <full_name>\Illuminate\Database\Eloquent\Model::setVisible()</full_name>
        <docblock line="2165">
          <description>Set the visible attributes for the model.</description>
          <long-description/>
          <tag name="param" line="2165" description="" type="array" variable="$visible">
            <type>array</type>
          </tag>
          <tag name="return" line="2165" description="" type="\Illuminate\Database\Eloquent\Model">
            <type>\Illuminate\Database\Eloquent\Model</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$visible</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2178" package="Default">
        <name>addVisible</name>
        <full_name>\Illuminate\Database\Eloquent\Model::addVisible()</full_name>
        <docblock line="2178">
          <description>Add visible attributes for the model.</description>
          <long-description/>
          <tag name="param" line="2178" description="" type="array|string|null" variable="$attributes">
            <type>array</type>
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="2178" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$attributes</name>
          <default>null</default>
          <type>array|string|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2191" package="Default">
        <name>setAppends</name>
        <full_name>\Illuminate\Database\Eloquent\Model::setAppends()</full_name>
        <docblock line="2191">
          <description>Set the accessors to append to model arrays.</description>
          <long-description/>
          <tag name="param" line="2191" description="" type="array" variable="$appends">
            <type>array</type>
          </tag>
          <tag name="return" line="2191" description="" type="\Illuminate\Database\Eloquent\Model">
            <type>\Illuminate\Database\Eloquent\Model</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$appends</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2203" package="Default">
        <name>getFillable</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getFillable()</full_name>
        <docblock line="2203">
          <description>Get the fillable attributes for the model.</description>
          <long-description/>
          <tag name="return" line="2203" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2214" package="Default">
        <name>fillable</name>
        <full_name>\Illuminate\Database\Eloquent\Model::fillable()</full_name>
        <docblock line="2214">
          <description>Set the fillable attributes for the model.</description>
          <long-description/>
          <tag name="param" line="2214" description="" type="array" variable="$fillable">
            <type>array</type>
          </tag>
          <tag name="return" line="2214" description="" type="\Illuminate\Database\Eloquent\Model">
            <type>\Illuminate\Database\Eloquent\Model</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$fillable</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2226" package="Default">
        <name>getGuarded</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getGuarded()</full_name>
        <docblock line="2226">
          <description>Get the guarded attributes for the model.</description>
          <long-description/>
          <tag name="return" line="2226" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2237" package="Default">
        <name>guard</name>
        <full_name>\Illuminate\Database\Eloquent\Model::guard()</full_name>
        <docblock line="2237">
          <description>Set the guarded attributes for the model.</description>
          <long-description/>
          <tag name="param" line="2237" description="" type="array" variable="$guarded">
            <type>array</type>
          </tag>
          <tag name="return" line="2237" description="" type="\Illuminate\Database\Eloquent\Model">
            <type>\Illuminate\Database\Eloquent\Model</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$guarded</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="2250" package="Default">
        <name>unguard</name>
        <full_name>\Illuminate\Database\Eloquent\Model::unguard()</full_name>
        <docblock line="2250">
          <description>Disable all mass assignable restrictions.</description>
          <long-description/>
          <tag name="param" line="2250" description="" type="boolean" variable="$state">
            <type>boolean</type>
          </tag>
          <tag name="return" line="2250" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$state</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="2260" package="Default">
        <name>reguard</name>
        <full_name>\Illuminate\Database\Eloquent\Model::reguard()</full_name>
        <docblock line="2260">
          <description>Enable the mass assignment restrictions.</description>
          <long-description/>
          <tag name="return" line="2260" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="2270" package="Default">
        <name>isUnguarded</name>
        <full_name>\Illuminate\Database\Eloquent\Model::isUnguarded()</full_name>
        <docblock line="2270">
          <description>Determine if current state is "unguarded".</description>
          <long-description/>
          <tag name="return" line="2270" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="2281" package="Default">
        <name>unguarded</name>
        <full_name>\Illuminate\Database\Eloquent\Model::unguarded()</full_name>
        <docblock line="2281">
          <description>Run the given callable while being unguarded.</description>
          <long-description/>
          <tag name="param" line="2281" description="" type="callable" variable="$callback">
            <type>callable</type>
          </tag>
          <tag name="return" line="2281" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2302" package="Default">
        <name>isFillable</name>
        <full_name>\Illuminate\Database\Eloquent\Model::isFillable()</full_name>
        <docblock line="2302">
          <description>Determine if the given attribute may be mass assigned.</description>
          <long-description/>
          <tag name="param" line="2302" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="2302" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2328" package="Default">
        <name>isGuarded</name>
        <full_name>\Illuminate\Database\Eloquent\Model::isGuarded()</full_name>
        <docblock line="2328">
          <description>Determine if the given key is guarded.</description>
          <long-description/>
          <tag name="param" line="2328" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="2328" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2338" package="Default">
        <name>totallyGuarded</name>
        <full_name>\Illuminate\Database\Eloquent\Model::totallyGuarded()</full_name>
        <docblock line="2338">
          <description>Determine if the model is totally guarded.</description>
          <long-description/>
          <tag name="return" line="2338" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="2349" package="Default">
        <name>removeTableFromKey</name>
        <full_name>\Illuminate\Database\Eloquent\Model::removeTableFromKey()</full_name>
        <docblock line="2349">
          <description>Remove the table name from a given key.</description>
          <long-description/>
          <tag name="param" line="2349" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="2349" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2363" package="Default">
        <name>getTouchedRelations</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getTouchedRelations()</full_name>
        <docblock line="2363">
          <description>Get the relationships that are touched on save.</description>
          <long-description/>
          <tag name="return" line="2363" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2374" package="Default">
        <name>setTouchedRelations</name>
        <full_name>\Illuminate\Database\Eloquent\Model::setTouchedRelations()</full_name>
        <docblock line="2374">
          <description>Set the relationships that are touched on save.</description>
          <long-description/>
          <tag name="param" line="2374" description="" type="array" variable="$touches">
            <type>array</type>
          </tag>
          <tag name="return" line="2374" description="" type="\Illuminate\Database\Eloquent\Model">
            <type>\Illuminate\Database\Eloquent\Model</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$touches</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2386" package="Default">
        <name>getIncrementing</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getIncrementing()</full_name>
        <docblock line="2386">
          <description>Get the value indicating whether the IDs are incrementing.</description>
          <long-description/>
          <tag name="return" line="2386" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2397" package="Default">
        <name>setIncrementing</name>
        <full_name>\Illuminate\Database\Eloquent\Model::setIncrementing()</full_name>
        <docblock line="2397">
          <description>Set whether IDs are incrementing.</description>
          <long-description/>
          <tag name="param" line="2397" description="" type="boolean" variable="$value">
            <type>boolean</type>
          </tag>
          <tag name="return" line="2397" description="" type="\Illuminate\Database\Eloquent\Model">
            <type>\Illuminate\Database\Eloquent\Model</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2410" package="Default">
        <name>toJson</name>
        <full_name>\Illuminate\Database\Eloquent\Model::toJson()</full_name>
        <docblock line="2410">
          <description>Convert the model instance to JSON.</description>
          <long-description/>
          <tag name="param" line="2410" description="" type="integer" variable="$options">
            <type>integer</type>
          </tag>
          <tag name="return" line="2410" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\Illuminate\Contracts\Support\Jsonable::toJson()" refers="\Illuminate\Contracts\Support\Jsonable::toJson()" link="/classes/Illuminate.Contracts.Support.Jsonable.html#method_toJson"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>0</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2420" package="Default">
        <name>jsonSerialize</name>
        <full_name>\Illuminate\Database\Eloquent\Model::jsonSerialize()</full_name>
        <docblock line="2420">
          <description>Convert the object into something JSON serializable.</description>
          <long-description/>
          <tag name="return" line="2420" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2430" package="Default">
        <name>toArray</name>
        <full_name>\Illuminate\Database\Eloquent\Model::toArray()</full_name>
        <docblock line="2430">
          <description>Convert the model instance to an array.</description>
          <long-description/>
          <tag name="return" line="2430" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\Illuminate\Contracts\Support\Arrayable::toArray()" refers="\Illuminate\Contracts\Support\Arrayable::toArray()" link="/classes/Illuminate.Contracts.Support.Arrayable.html#method_toArray"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2442" package="Default">
        <name>attributesToArray</name>
        <full_name>\Illuminate\Database\Eloquent\Model::attributesToArray()</full_name>
        <docblock line="2442">
          <description>Convert the model's attributes to an array.</description>
          <long-description/>
          <tag name="return" line="2442" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="2507" package="Default">
        <name>getArrayableAttributes</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getArrayableAttributes()</full_name>
        <docblock line="2507">
          <description>Get an attribute array of all arrayable attributes.</description>
          <long-description/>
          <tag name="return" line="2507" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="2517" package="Default">
        <name>getArrayableAppends</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getArrayableAppends()</full_name>
        <docblock line="2517">
          <description>Get all of the appendable values that are arrayable.</description>
          <long-description/>
          <tag name="return" line="2517" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2533" package="Default">
        <name>relationsToArray</name>
        <full_name>\Illuminate\Database\Eloquent\Model::relationsToArray()</full_name>
        <docblock line="2533">
          <description>Get the model's relationships in array form.</description>
          <long-description/>
          <tag name="return" line="2533" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="2577" package="Default">
        <name>getArrayableRelations</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getArrayableRelations()</full_name>
        <docblock line="2577">
          <description>Get an attribute array of all arrayable relations.</description>
          <long-description/>
          <tag name="return" line="2577" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="2588" package="Default">
        <name>getArrayableItems</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getArrayableItems()</full_name>
        <docblock line="2588">
          <description>Get an attribute array of all arrayable values.</description>
          <long-description/>
          <tag name="param" line="2588" description="" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="return" line="2588" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2603" package="Default">
        <name>getAttribute</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getAttribute()</full_name>
        <docblock line="2603">
          <description>Get an attribute from the model.</description>
          <long-description/>
          <tag name="param" line="2603" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="2603" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2618" package="Default">
        <name>getAttributeValue</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getAttributeValue()</full_name>
        <docblock line="2618">
          <description>Get a plain attribute (not a relationship).</description>
          <long-description/>
          <tag name="param" line="2618" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="2618" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2652" package="Default">
        <name>getRelationValue</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getRelationValue()</full_name>
        <docblock line="2652">
          <description>Get a relationship.</description>
          <long-description/>
          <tag name="param" line="2652" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="2652" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="2675" package="Default">
        <name>getAttributeFromArray</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getAttributeFromArray()</full_name>
        <docblock line="2675">
          <description>Get an attribute from the $attributes array.</description>
          <long-description/>
          <tag name="param" line="2675" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="2675" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="2690" package="Default">
        <name>getRelationshipFromMethod</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getRelationshipFromMethod()</full_name>
        <docblock line="2690">
          <description>Get a relationship value from a method.</description>
          <long-description/>
          <tag name="param" line="2690" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="2690" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="2690" description="" type="\LogicException">
            <type>\LogicException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2710" package="Default">
        <name>hasGetMutator</name>
        <full_name>\Illuminate\Database\Eloquent\Model::hasGetMutator()</full_name>
        <docblock line="2710">
          <description>Determine if a get mutator exists for an attribute.</description>
          <long-description/>
          <tag name="param" line="2710" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="2710" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="2722" package="Default">
        <name>mutateAttribute</name>
        <full_name>\Illuminate\Database\Eloquent\Model::mutateAttribute()</full_name>
        <docblock line="2722">
          <description>Get the value of an attribute using its mutator.</description>
          <long-description/>
          <tag name="param" line="2722" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="2722" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="2722" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="2734" package="Default">
        <name>mutateAttributeForArray</name>
        <full_name>\Illuminate\Database\Eloquent\Model::mutateAttributeForArray()</full_name>
        <docblock line="2734">
          <description>Get the value of an attribute using its mutator for array conversion.</description>
          <long-description/>
          <tag name="param" line="2734" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="2734" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="2734" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2748" package="Default">
        <name>hasCast</name>
        <full_name>\Illuminate\Database\Eloquent\Model::hasCast()</full_name>
        <docblock line="2748">
          <description>Determine whether an attribute should be cast to a native type.</description>
          <long-description/>
          <tag name="param" line="2748" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="2748" description="" type="array|string|null" variable="$types">
            <type>array</type>
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="2748" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$types</name>
          <default>null</default>
          <type>array|string|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2762" package="Default">
        <name>getCasts</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getCasts()</full_name>
        <docblock line="2762">
          <description>Get the casts array.</description>
          <long-description/>
          <tag name="return" line="2762" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="2779" package="Default">
        <name>isDateCastable</name>
        <full_name>\Illuminate\Database\Eloquent\Model::isDateCastable()</full_name>
        <docblock line="2779">
          <description>Determine whether a value is Date / DateTime castable for inbound manipulation.</description>
          <long-description/>
          <tag name="param" line="2779" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="2779" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="2790" package="Default">
        <name>isJsonCastable</name>
        <full_name>\Illuminate\Database\Eloquent\Model::isJsonCastable()</full_name>
        <docblock line="2790">
          <description>Determine whether a value is JSON castable for inbound manipulation.</description>
          <long-description/>
          <tag name="param" line="2790" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="2790" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="2801" package="Default">
        <name>getCastType</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getCastType()</full_name>
        <docblock line="2801">
          <description>Get the type of cast for a model attribute.</description>
          <long-description/>
          <tag name="param" line="2801" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="2801" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="2813" package="Default">
        <name>castAttribute</name>
        <full_name>\Illuminate\Database\Eloquent\Model::castAttribute()</full_name>
        <docblock line="2813">
          <description>Cast an attribute to a native PHP type.</description>
          <long-description/>
          <tag name="param" line="2813" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="2813" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="2813" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2856" package="Default">
        <name>setAttribute</name>
        <full_name>\Illuminate\Database\Eloquent\Model::setAttribute()</full_name>
        <docblock line="2856">
          <description>Set a given attribute on the model.</description>
          <long-description/>
          <tag name="param" line="2856" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="2856" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="2856" description="" type="\Illuminate\Database\Eloquent\Model">
            <type>\Illuminate\Database\Eloquent\Model</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2889" package="Default">
        <name>hasSetMutator</name>
        <full_name>\Illuminate\Database\Eloquent\Model::hasSetMutator()</full_name>
        <docblock line="2889">
          <description>Determine if a set mutator exists for an attribute.</description>
          <long-description/>
          <tag name="param" line="2889" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="2889" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2899" package="Default">
        <name>getDates</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getDates()</full_name>
        <docblock line="2899">
          <description>Get the attributes that should be converted to dates.</description>
          <long-description/>
          <tag name="return" line="2899" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="2912" package="Default">
        <name>fromDateTime</name>
        <full_name>\Illuminate\Database\Eloquent\Model::fromDateTime()</full_name>
        <docblock line="2912">
          <description>Convert a DateTime to a storable string.</description>
          <long-description/>
          <tag name="param" line="2912" description="" type="\DateTime|integer" variable="$value">
            <type>\DateTime</type>
            <type>integer</type>
          </tag>
          <tag name="return" line="2912" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>\DateTime|integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="2927" package="Default">
        <name>asDateTime</name>
        <full_name>\Illuminate\Database\Eloquent\Model::asDateTime()</full_name>
        <docblock line="2927">
          <description>Return a timestamp as DateTime object.</description>
          <long-description/>
          <tag name="param" line="2927" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="2927" description="" type="\Carbon\Carbon">
            <type>\Carbon\Carbon</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="2971" package="Default">
        <name>asTimeStamp</name>
        <full_name>\Illuminate\Database\Eloquent\Model::asTimeStamp()</full_name>
        <docblock line="2971">
          <description>Return a timestamp as unix timestamp.</description>
          <long-description/>
          <tag name="param" line="2971" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="2971" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="2982" package="Default">
        <name>serializeDate</name>
        <full_name>\Illuminate\Database\Eloquent\Model::serializeDate()</full_name>
        <docblock line="2982">
          <description>Prepare a date for array / JSON serialization.</description>
          <long-description/>
          <tag name="param" line="2982" description="" type="\DateTime" variable="$date">
            <type>\DateTime</type>
          </tag>
          <tag name="return" line="2982" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$date</name>
          <default/>
          <type>\DateTime</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="2992" package="Default">
        <name>getDateFormat</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getDateFormat()</full_name>
        <docblock line="2992">
          <description>Get the format for database stored dates.</description>
          <long-description/>
          <tag name="return" line="2992" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="3003" package="Default">
        <name>setDateFormat</name>
        <full_name>\Illuminate\Database\Eloquent\Model::setDateFormat()</full_name>
        <docblock line="3003">
          <description>Set the date format used by the model.</description>
          <long-description/>
          <tag name="param" line="3003" description="" type="string" variable="$format">
            <type>string</type>
          </tag>
          <tag name="return" line="3003" description="" type="\Illuminate\Database\Eloquent\Model">
            <type>\Illuminate\Database\Eloquent\Model</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$format</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="3016" package="Default">
        <name>asJson</name>
        <full_name>\Illuminate\Database\Eloquent\Model::asJson()</full_name>
        <docblock line="3016">
          <description>Encode the given value as JSON.</description>
          <long-description/>
          <tag name="param" line="3016" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="3016" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="3028" package="Default">
        <name>fromJson</name>
        <full_name>\Illuminate\Database\Eloquent\Model::fromJson()</full_name>
        <docblock line="3028">
          <description>Decode the given JSON back into an array or object.</description>
          <long-description/>
          <tag name="param" line="3028" description="" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="param" line="3028" description="" type="boolean" variable="$asObject">
            <type>boolean</type>
          </tag>
          <tag name="return" line="3028" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$asObject</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="3039" package="Default">
        <name>replicate</name>
        <full_name>\Illuminate\Database\Eloquent\Model::replicate()</full_name>
        <docblock line="3039">
          <description>Clone the model into a new, non-existing instance.</description>
          <long-description/>
          <tag name="param" line="3039" description="" type="array|null" variable="$except">
            <type>array</type>
            <type>null</type>
          </tag>
          <tag name="return" line="3039" description="" type="\Illuminate\Database\Eloquent\Model">
            <type>\Illuminate\Database\Eloquent\Model</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$except</name>
          <default>null</default>
          <type>array|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="3063" package="Default">
        <name>getAttributes</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getAttributes()</full_name>
        <docblock line="3063">
          <description>Get all of the current attributes on the model.</description>
          <long-description/>
          <tag name="return" line="3063" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="3075" package="Default">
        <name>setRawAttributes</name>
        <full_name>\Illuminate\Database\Eloquent\Model::setRawAttributes()</full_name>
        <docblock line="3075">
          <description>Set the array of model attributes. No checking is done.</description>
          <long-description/>
          <tag name="param" line="3075" description="" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="param" line="3075" description="" type="boolean" variable="$sync">
            <type>boolean</type>
          </tag>
          <tag name="return" line="3075" description="" type="\Illuminate\Database\Eloquent\Model">
            <type>\Illuminate\Database\Eloquent\Model</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$attributes</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$sync</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="3093" package="Default">
        <name>getOriginal</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getOriginal()</full_name>
        <docblock line="3093">
          <description>Get the model's original attribute values.</description>
          <long-description/>
          <tag name="param" line="3093" description="" type="string|null" variable="$key">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="param" line="3093" description="" type="mixed" variable="$default">
            <type>mixed</type>
          </tag>
          <tag name="return" line="3093" description="" type="mixed|array">
            <type>mixed</type>
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$default</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="3103" package="Default">
        <name>syncOriginal</name>
        <full_name>\Illuminate\Database\Eloquent\Model::syncOriginal()</full_name>
        <docblock line="3103">
          <description>Sync the original attributes with the current.</description>
          <long-description/>
          <tag name="return" line="3103" description="" type="\Illuminate\Database\Eloquent\Model">
            <type>\Illuminate\Database\Eloquent\Model</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="3116" package="Default">
        <name>syncOriginalAttribute</name>
        <full_name>\Illuminate\Database\Eloquent\Model::syncOriginalAttribute()</full_name>
        <docblock line="3116">
          <description>Sync a single original attribute with its current value.</description>
          <long-description/>
          <tag name="param" line="3116" description="" type="string" variable="$attribute">
            <type>string</type>
          </tag>
          <tag name="return" line="3116" description="" type="\Illuminate\Database\Eloquent\Model">
            <type>\Illuminate\Database\Eloquent\Model</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$attribute</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="3129" package="Default">
        <name>isDirty</name>
        <full_name>\Illuminate\Database\Eloquent\Model::isDirty()</full_name>
        <docblock line="3129">
          <description>Determine if the model or given attribute(s) have been modified.</description>
          <long-description/>
          <tag name="param" line="3129" description="" type="array|string|null" variable="$attributes">
            <type>array</type>
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="3129" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$attributes</name>
          <default>null</default>
          <type>array|string|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="3155" package="Default">
        <name>getDirty</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getDirty()</full_name>
        <docblock line="3155">
          <description>Get the attributes that have been changed since last sync.</description>
          <long-description/>
          <tag name="return" line="3155" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Eloquent" line="3177" package="Default">
        <name>originalIsNumericallyEquivalent</name>
        <full_name>\Illuminate\Database\Eloquent\Model::originalIsNumericallyEquivalent()</full_name>
        <docblock line="3177">
          <description>Determine if the new and old values for a given key are numerically equivalent.</description>
          <long-description/>
          <tag name="param" line="3177" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="3177" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="3191" package="Default">
        <name>getRelations</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getRelations()</full_name>
        <docblock line="3191">
          <description>Get all the loaded relations for the instance.</description>
          <long-description/>
          <tag name="return" line="3191" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="3202" package="Default">
        <name>getRelation</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getRelation()</full_name>
        <docblock line="3202">
          <description>Get a specified relationship.</description>
          <long-description/>
          <tag name="param" line="3202" description="" type="string" variable="$relation">
            <type>string</type>
          </tag>
          <tag name="return" line="3202" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$relation</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="3213" package="Default">
        <name>relationLoaded</name>
        <full_name>\Illuminate\Database\Eloquent\Model::relationLoaded()</full_name>
        <docblock line="3213">
          <description>Determine if the given relation is loaded.</description>
          <long-description/>
          <tag name="param" line="3213" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="3213" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="3225" package="Default">
        <name>setRelation</name>
        <full_name>\Illuminate\Database\Eloquent\Model::setRelation()</full_name>
        <docblock line="3225">
          <description>Set the specific relationship in the model.</description>
          <long-description/>
          <tag name="param" line="3225" description="" type="string" variable="$relation">
            <type>string</type>
          </tag>
          <tag name="param" line="3225" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="3225" description="" type="\Illuminate\Database\Eloquent\Model">
            <type>\Illuminate\Database\Eloquent\Model</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$relation</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="3238" package="Default">
        <name>setRelations</name>
        <full_name>\Illuminate\Database\Eloquent\Model::setRelations()</full_name>
        <docblock line="3238">
          <description>Set the entire relations array on the model.</description>
          <long-description/>
          <tag name="param" line="3238" description="" type="array" variable="$relations">
            <type>array</type>
          </tag>
          <tag name="return" line="3238" description="" type="\Illuminate\Database\Eloquent\Model">
            <type>\Illuminate\Database\Eloquent\Model</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$relations</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="3250" package="Default">
        <name>getConnection</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getConnection()</full_name>
        <docblock line="3250">
          <description>Get the database connection for the model.</description>
          <long-description/>
          <tag name="return" line="3250" description="" type="\Illuminate\Database\Connection">
            <type>\Illuminate\Database\Connection</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="3260" package="Default">
        <name>getConnectionName</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getConnectionName()</full_name>
        <docblock line="3260">
          <description>Get the current connection name for the model.</description>
          <long-description/>
          <tag name="return" line="3260" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="3271" package="Default">
        <name>setConnection</name>
        <full_name>\Illuminate\Database\Eloquent\Model::setConnection()</full_name>
        <docblock line="3271">
          <description>Set the connection associated with the model.</description>
          <long-description/>
          <tag name="param" line="3271" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="3271" description="" type="\Illuminate\Database\Eloquent\Model">
            <type>\Illuminate\Database\Eloquent\Model</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="3284" package="Default">
        <name>resolveConnection</name>
        <full_name>\Illuminate\Database\Eloquent\Model::resolveConnection()</full_name>
        <docblock line="3284">
          <description>Resolve a connection instance.</description>
          <long-description/>
          <tag name="param" line="3284" description="" type="string|null" variable="$connection">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="3284" description="" type="\Illuminate\Database\Connection">
            <type>\Illuminate\Database\Connection</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="3294" package="Default">
        <name>getConnectionResolver</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getConnectionResolver()</full_name>
        <docblock line="3294">
          <description>Get the connection resolver instance.</description>
          <long-description/>
          <tag name="return" line="3294" description="" type="\Illuminate\Database\ConnectionResolverInterface">
            <type>\Illuminate\Database\ConnectionResolverInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="3305" package="Default">
        <name>setConnectionResolver</name>
        <full_name>\Illuminate\Database\Eloquent\Model::setConnectionResolver()</full_name>
        <docblock line="3305">
          <description>Set the connection resolver instance.</description>
          <long-description/>
          <tag name="param" line="3305" description="" type="\Illuminate\Database\ConnectionResolverInterface" variable="$resolver">
            <type>\Illuminate\Database\ConnectionResolverInterface</type>
          </tag>
          <tag name="return" line="3305" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$resolver</name>
          <default/>
          <type>\Illuminate\Database\ConnectionResolverInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="3315" package="Default">
        <name>unsetConnectionResolver</name>
        <full_name>\Illuminate\Database\Eloquent\Model::unsetConnectionResolver()</full_name>
        <docblock line="3315">
          <description>Unset the connection resolver for models.</description>
          <long-description/>
          <tag name="return" line="3315" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="3325" package="Default">
        <name>getEventDispatcher</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getEventDispatcher()</full_name>
        <docblock line="3325">
          <description>Get the event dispatcher instance.</description>
          <long-description/>
          <tag name="return" line="3325" description="" type="\Illuminate\Contracts\Events\Dispatcher">
            <type>\Illuminate\Contracts\Events\Dispatcher</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="3336" package="Default">
        <name>setEventDispatcher</name>
        <full_name>\Illuminate\Database\Eloquent\Model::setEventDispatcher()</full_name>
        <docblock line="3336">
          <description>Set the event dispatcher instance.</description>
          <long-description/>
          <tag name="param" line="3336" description="" type="\Illuminate\Contracts\Events\Dispatcher" variable="$dispatcher">
            <type>\Illuminate\Contracts\Events\Dispatcher</type>
          </tag>
          <tag name="return" line="3336" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$dispatcher</name>
          <default/>
          <type>\Illuminate\Contracts\Events\Dispatcher</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="3346" package="Default">
        <name>unsetEventDispatcher</name>
        <full_name>\Illuminate\Database\Eloquent\Model::unsetEventDispatcher()</full_name>
        <docblock line="3346">
          <description>Unset the event dispatcher for models.</description>
          <long-description/>
          <tag name="return" line="3346" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="3356" package="Default">
        <name>getMutatedAttributes</name>
        <full_name>\Illuminate\Database\Eloquent\Model::getMutatedAttributes()</full_name>
        <docblock line="3356">
          <description>Get the mutated attributes for a given instance.</description>
          <long-description/>
          <tag name="return" line="3356" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="3373" package="Default">
        <name>cacheMutatedAttributes</name>
        <full_name>\Illuminate\Database\Eloquent\Model::cacheMutatedAttributes()</full_name>
        <docblock line="3373">
          <description>Extract and cache all the mutated attributes of a class.</description>
          <long-description/>
          <tag name="param" line="3373" description="" type="string" variable="$class">
            <type>string</type>
          </tag>
          <tag name="return" line="3373" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="3399" package="Default">
        <name>__get</name>
        <full_name>\Illuminate\Database\Eloquent\Model::__get()</full_name>
        <docblock line="3399">
          <description>Dynamically retrieve attributes on the model.</description>
          <long-description/>
          <tag name="param" line="3399" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="3399" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="3411" package="Default">
        <name>__set</name>
        <full_name>\Illuminate\Database\Eloquent\Model::__set()</full_name>
        <docblock line="3411">
          <description>Dynamically set attributes on the model.</description>
          <long-description/>
          <tag name="param" line="3411" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="3411" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="3411" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="3422" package="Default">
        <name>offsetExists</name>
        <full_name>\Illuminate\Database\Eloquent\Model::offsetExists()</full_name>
        <docblock line="3422">
          <description>Determine if the given attribute exists.</description>
          <long-description/>
          <tag name="param" line="3422" description="" type="mixed" variable="$offset">
            <type>mixed</type>
          </tag>
          <tag name="return" line="3422" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="3433" package="Default">
        <name>offsetGet</name>
        <full_name>\Illuminate\Database\Eloquent\Model::offsetGet()</full_name>
        <docblock line="3433">
          <description>Get the value for a given offset.</description>
          <long-description/>
          <tag name="param" line="3433" description="" type="mixed" variable="$offset">
            <type>mixed</type>
          </tag>
          <tag name="return" line="3433" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="3445" package="Default">
        <name>offsetSet</name>
        <full_name>\Illuminate\Database\Eloquent\Model::offsetSet()</full_name>
        <docblock line="3445">
          <description>Set the value for a given offset.</description>
          <long-description/>
          <tag name="param" line="3445" description="" type="mixed" variable="$offset">
            <type>mixed</type>
          </tag>
          <tag name="param" line="3445" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="3445" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default/>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="3456" package="Default">
        <name>offsetUnset</name>
        <full_name>\Illuminate\Database\Eloquent\Model::offsetUnset()</full_name>
        <docblock line="3456">
          <description>Unset the value for a given offset.</description>
          <long-description/>
          <tag name="param" line="3456" description="" type="mixed" variable="$offset">
            <type>mixed</type>
          </tag>
          <tag name="return" line="3456" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="3467" package="Default">
        <name>__isset</name>
        <full_name>\Illuminate\Database\Eloquent\Model::__isset()</full_name>
        <docblock line="3467">
          <description>Determine if an attribute or relation exists on the model.</description>
          <long-description/>
          <tag name="param" line="3467" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="3467" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="3486" package="Default">
        <name>__unset</name>
        <full_name>\Illuminate\Database\Eloquent\Model::__unset()</full_name>
        <docblock line="3486">
          <description>Unset an attribute on the model.</description>
          <long-description/>
          <tag name="param" line="3486" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="3486" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="3498" package="Default">
        <name>__call</name>
        <full_name>\Illuminate\Database\Eloquent\Model::__call()</full_name>
        <docblock line="3498">
          <description>Handle dynamic method calls into the model.</description>
          <long-description/>
          <tag name="param" line="3498" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="param" line="3498" description="" type="array" variable="$parameters">
            <type>array</type>
          </tag>
          <tag name="return" line="3498" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$parameters</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Database\Eloquent" line="3516" package="Default">
        <name>__callStatic</name>
        <full_name>\Illuminate\Database\Eloquent\Model::__callStatic()</full_name>
        <docblock line="3516">
          <description>Handle dynamic static method calls into the method.</description>
          <long-description/>
          <tag name="param" line="3516" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="param" line="3516" description="" type="array" variable="$parameters">
            <type>array</type>
          </tag>
          <tag name="return" line="3516" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$parameters</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="3528" package="Default">
        <name>__toString</name>
        <full_name>\Illuminate\Database\Eloquent\Model::__toString()</full_name>
        <docblock line="3528">
          <description>Convert the model to its string representation.</description>
          <long-description/>
          <tag name="return" line="3528" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Eloquent" line="3538" package="Default">
        <name>__wakeup</name>
        <full_name>\Illuminate\Database\Eloquent\Model::__wakeup()</full_name>
        <docblock line="3538">
          <description>When a model is being unserialized, check if it needs to be booted.</description>
          <long-description/>
          <tag name="return" line="3538" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="36" code="PPC:ERR-50005">No summary for class \Illuminate\Database\Eloquent\Model</error>
    </parse_markers>
    <source></source>
  <type>class</type></file>