<file path="codex/vendor/laravel/framework/src/Illuminate/Database/Schema/PostgresBuilder.php" generated-path="codex.vendor.laravel.framework.src.Illuminate.Database.Schema.PostgresBuilder.html" hash="96e78fdea481c9f334d67403d3aa2634" package="Default">
    <docblock line="0">
      <description/>
      <long-description/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Illuminate\Database\Schema" line="5" package="Default">
      <extends>\Illuminate\Database\Schema\Builder</extends>
      <name>PostgresBuilder</name>
      <full_name>\Illuminate\Database\Schema\PostgresBuilder</full_name>
      <docblock line="5">
        <description/>
        <long-description/>
        <tag name="package" line="5" description="Default"/>
        <tag name="inherited_from" description="\Illuminate\Database\Schema\Builder" refers="\Illuminate\Database\Schema\Builder" link="/classes/Illuminate.Database.Schema.Builder.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="Illuminate\Database\Schema" line="15" package="Default">
        <name>$connection</name>
        <full_name>\Illuminate\Database\Schema\Builder::connection</full_name>
        <default/>
        <docblock line="15">
          <description>The database connection instance.</description>
          <long-description/>
          <tag name="var" line="15" description="" type="\Illuminate\Database\Connection" variable="">
            <type>\Illuminate\Database\Connection</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Illuminate\Database\Schema" line="22" package="Default">
        <name>$grammar</name>
        <full_name>\Illuminate\Database\Schema\Builder::grammar</full_name>
        <default/>
        <docblock line="22">
          <description>The schema grammar instance.</description>
          <long-description/>
          <tag name="var" line="22" description="" type="\Illuminate\Database\Schema\Grammars\Grammar" variable="">
            <type>\Illuminate\Database\Schema\Grammars\Grammar</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Illuminate\Database\Schema" line="29" package="Default">
        <name>$resolver</name>
        <full_name>\Illuminate\Database\Schema\Builder::resolver</full_name>
        <default/>
        <docblock line="29">
          <description>The Blueprint resolver callback.</description>
          <long-description/>
          <tag name="var" line="29" description="" type="\Closure" variable="">
            <type>\Closure</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Schema" line="13" package="Default">
        <name>hasTable</name>
        <full_name>\Illuminate\Database\Schema\PostgresBuilder::hasTable()</full_name>
        <docblock line="13">
          <description>Determine if the given table exists.</description>
          <long-description/>
          <tag name="param" line="13" description="" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="13" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\Illuminate\Database\Schema\Builder::hasTable()" refers="\Illuminate\Database\Schema\Builder::hasTable()" link="/classes/Illuminate.Database.Schema.Builder.html#method_hasTable"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Schema" line="37" package="Default">
        <name>__construct</name>
        <full_name>\Illuminate\Database\Schema\Builder::__construct()</full_name>
        <docblock line="37">
          <description>Create a new database Schema manager.</description>
          <long-description/>
          <tag name="param" line="37" description="" type="\Illuminate\Database\Connection" variable="$connection">
            <type>\Illuminate\Database\Connection</type>
          </tag>
          <tag name="return" line="37" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default/>
          <type>\Illuminate\Database\Connection</type>
        </argument>
        <inherited_from>\Illuminate\Database\Schema\Builder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Schema" line="49" package="Default">
        <name>hasTable</name>
        <full_name>\Illuminate\Database\Schema\Builder::hasTable()</full_name>
        <docblock line="49">
          <description>Determine if the given table exists.</description>
          <long-description/>
          <tag name="param" line="49" description="" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="49" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default/>
          <type>string</type>
        </argument>
        <inherited_from>\Illuminate\Database\Schema\Builder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Schema" line="65" package="Default">
        <name>hasColumn</name>
        <full_name>\Illuminate\Database\Schema\Builder::hasColumn()</full_name>
        <docblock line="65">
          <description>Determine if the given table has a given column.</description>
          <long-description/>
          <tag name="param" line="65" description="" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="65" description="" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="return" line="65" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default/>
          <type>string</type>
        </argument>
        <inherited_from>\Illuminate\Database\Schema\Builder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Schema" line="79" package="Default">
        <name>hasColumns</name>
        <full_name>\Illuminate\Database\Schema\Builder::hasColumns()</full_name>
        <docblock line="79">
          <description>Determine if the given table has given columns.</description>
          <long-description/>
          <tag name="param" line="79" description="" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="79" description="" type="array" variable="$columns">
            <type>array</type>
          </tag>
          <tag name="return" line="79" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$columns</name>
          <default/>
          <type>array</type>
        </argument>
        <inherited_from>\Illuminate\Database\Schema\Builder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Schema" line="99" package="Default">
        <name>getColumnType</name>
        <full_name>\Illuminate\Database\Schema\Builder::getColumnType()</full_name>
        <docblock line="99">
          <description>Get the data type for the given column name.</description>
          <long-description/>
          <tag name="param" line="99" description="" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="99" description="" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="return" line="99" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default/>
          <type>string</type>
        </argument>
        <inherited_from>\Illuminate\Database\Schema\Builder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Schema" line="112" package="Default">
        <name>getColumnListing</name>
        <full_name>\Illuminate\Database\Schema\Builder::getColumnListing()</full_name>
        <docblock line="112">
          <description>Get the column listing for a given table.</description>
          <long-description/>
          <tag name="param" line="112" description="" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="112" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default/>
          <type>string</type>
        </argument>
        <inherited_from>\Illuminate\Database\Schema\Builder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Schema" line="128" package="Default">
        <name>table</name>
        <full_name>\Illuminate\Database\Schema\Builder::table()</full_name>
        <docblock line="128">
          <description>Modify a table on the schema.</description>
          <long-description/>
          <tag name="param" line="128" description="" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="128" description="" type="\Closure" variable="$callback">
            <type>\Closure</type>
          </tag>
          <tag name="return" line="128" description="" type="\Illuminate\Database\Schema\Blueprint">
            <type>\Illuminate\Database\Schema\Blueprint</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>\Closure</type>
        </argument>
        <inherited_from>\Illuminate\Database\Schema\Builder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Schema" line="140" package="Default">
        <name>create</name>
        <full_name>\Illuminate\Database\Schema\Builder::create()</full_name>
        <docblock line="140">
          <description>Create a new table on the schema.</description>
          <long-description/>
          <tag name="param" line="140" description="" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="140" description="" type="\Closure" variable="$callback">
            <type>\Closure</type>
          </tag>
          <tag name="return" line="140" description="" type="\Illuminate\Database\Schema\Blueprint">
            <type>\Illuminate\Database\Schema\Blueprint</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>\Closure</type>
        </argument>
        <inherited_from>\Illuminate\Database\Schema\Builder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Schema" line="157" package="Default">
        <name>drop</name>
        <full_name>\Illuminate\Database\Schema\Builder::drop()</full_name>
        <docblock line="157">
          <description>Drop a table from the schema.</description>
          <long-description/>
          <tag name="param" line="157" description="" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="157" description="" type="\Illuminate\Database\Schema\Blueprint">
            <type>\Illuminate\Database\Schema\Blueprint</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default/>
          <type>string</type>
        </argument>
        <inherited_from>\Illuminate\Database\Schema\Builder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Schema" line="172" package="Default">
        <name>dropIfExists</name>
        <full_name>\Illuminate\Database\Schema\Builder::dropIfExists()</full_name>
        <docblock line="172">
          <description>Drop a table from the schema if it exists.</description>
          <long-description/>
          <tag name="param" line="172" description="" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="172" description="" type="\Illuminate\Database\Schema\Blueprint">
            <type>\Illuminate\Database\Schema\Blueprint</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default/>
          <type>string</type>
        </argument>
        <inherited_from>\Illuminate\Database\Schema\Builder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Schema" line="188" package="Default">
        <name>rename</name>
        <full_name>\Illuminate\Database\Schema\Builder::rename()</full_name>
        <docblock line="188">
          <description>Rename a table on the schema.</description>
          <long-description/>
          <tag name="param" line="188" description="" type="string" variable="$from">
            <type>string</type>
          </tag>
          <tag name="param" line="188" description="" type="string" variable="$to">
            <type>string</type>
          </tag>
          <tag name="return" line="188" description="" type="\Illuminate\Database\Schema\Blueprint">
            <type>\Illuminate\Database\Schema\Blueprint</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$from</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$to</name>
          <default/>
          <type>string</type>
        </argument>
        <inherited_from>\Illuminate\Database\Schema\Builder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Schema" line="202" package="Default">
        <name>enableForeignKeyConstraints</name>
        <full_name>\Illuminate\Database\Schema\Builder::enableForeignKeyConstraints()</full_name>
        <docblock line="202">
          <description>Enable foreign key constraints.</description>
          <long-description/>
          <tag name="return" line="202" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\Illuminate\Database\Schema\Builder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Schema" line="214" package="Default">
        <name>disableForeignKeyConstraints</name>
        <full_name>\Illuminate\Database\Schema\Builder::disableForeignKeyConstraints()</full_name>
        <docblock line="214">
          <description>Disable foreign key constraints.</description>
          <long-description/>
          <tag name="return" line="214" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\Illuminate\Database\Schema\Builder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Schema" line="227" package="Default">
        <name>build</name>
        <full_name>\Illuminate\Database\Schema\Builder::build()</full_name>
        <docblock line="227">
          <description>Execute the blueprint to build / modify the table.</description>
          <long-description/>
          <tag name="param" line="227" description="" type="\Illuminate\Database\Schema\Blueprint" variable="$blueprint">
            <type>\Illuminate\Database\Schema\Blueprint</type>
          </tag>
          <tag name="return" line="227" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$blueprint</name>
          <default/>
          <type>\Illuminate\Database\Schema\Blueprint</type>
        </argument>
        <inherited_from>\Illuminate\Database\Schema\Builder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database\Schema" line="239" package="Default">
        <name>createBlueprint</name>
        <full_name>\Illuminate\Database\Schema\Builder::createBlueprint()</full_name>
        <docblock line="239">
          <description>Create a new command set with a Closure.</description>
          <long-description/>
          <tag name="param" line="239" description="" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="239" description="" type="\Closure|null" variable="$callback">
            <type>\Closure</type>
            <type>null</type>
          </tag>
          <tag name="return" line="239" description="" type="\Illuminate\Database\Schema\Blueprint">
            <type>\Illuminate\Database\Schema\Blueprint</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default>null</default>
          <type>\Closure|null</type>
        </argument>
        <inherited_from>\Illuminate\Database\Schema\Builder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Schema" line="253" package="Default">
        <name>getConnection</name>
        <full_name>\Illuminate\Database\Schema\Builder::getConnection()</full_name>
        <docblock line="253">
          <description>Get the database connection instance.</description>
          <long-description/>
          <tag name="return" line="253" description="" type="\Illuminate\Database\Connection">
            <type>\Illuminate\Database\Connection</type>
          </tag>
        </docblock>
        <inherited_from>\Illuminate\Database\Schema\Builder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Schema" line="264" package="Default">
        <name>setConnection</name>
        <full_name>\Illuminate\Database\Schema\Builder::setConnection()</full_name>
        <docblock line="264">
          <description>Set the database connection instance.</description>
          <long-description/>
          <tag name="param" line="264" description="" type="\Illuminate\Database\Connection" variable="$connection">
            <type>\Illuminate\Database\Connection</type>
          </tag>
          <tag name="return" line="264" description="" type="\Illuminate\Database\Schema\PostgresBuilder">
            <type>\Illuminate\Database\Schema\PostgresBuilder</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default/>
          <type>\Illuminate\Database\Connection</type>
        </argument>
        <inherited_from>\Illuminate\Database\Schema\Builder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database\Schema" line="277" package="Default">
        <name>blueprintResolver</name>
        <full_name>\Illuminate\Database\Schema\Builder::blueprintResolver()</full_name>
        <docblock line="277">
          <description>Set the Schema Blueprint resolver callback.</description>
          <long-description/>
          <tag name="param" line="277" description="" type="\Closure" variable="$resolver">
            <type>\Closure</type>
          </tag>
          <tag name="return" line="277" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$resolver</name>
          <default/>
          <type>\Closure</type>
        </argument>
        <inherited_from>\Illuminate\Database\Schema\Builder</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="5" code="PPC:ERR-50005">No summary for class \Illuminate\Database\Schema\PostgresBuilder</error>
    </parse_markers>
    <source>eJx1kMtOwzAQRff+illUqhP1wb4QEJQFu0qwoywcd5JYcuzgsVEl1H/HcQwFqXgzftxzZ66vb4duYMyIHmkQEuFJ69ArIzzut8KLWhDun2WHvdgwJrUggp0l3zqk+6D0AR3g0aM5EOQz+2QQ17osU4UStujRRVME1YDvEFr1gQaiu8ZIK/K0ytpv5G4QTvQA5J0yLcAsiX9eHfrgDNTW6ny3TnUItVYSmmCkV9ZAJ+hlBPnEF0k0zTeuGb1ruInmnaJl1caOvXDLStp+UBoT+ZjG40VMf6bSf5xBaY3B1DCaoH+wplEtn0+y+R90yvwfmTruHDbqyIvVJP5F59TSBuP5BQdCHbd8TLWA1zzmIjd9Kwqo4GqT3E7sxL4AATmbDg==</source>
  <type>class</type></file>