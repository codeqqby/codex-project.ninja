<file path="codex/vendor/laravel/framework/src/Illuminate/Support/Collection.php" generated-path="codex.vendor.laravel.framework.src.Illuminate.Support.Collection.html" hash="5a7c3cff0f70b69af8fe50e9cce9e3b4" package="Default">
    <docblock line="0">
      <description/>
      <long-description/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Countable">\Countable</namespace-alias>
    <namespace-alias name="ArrayAccess">\ArrayAccess</namespace-alias>
    <namespace-alias name="ArrayIterator">\ArrayIterator</namespace-alias>
    <namespace-alias name="CachingIterator">\CachingIterator</namespace-alias>
    <namespace-alias name="JsonSerializable">\JsonSerializable</namespace-alias>
    <namespace-alias name="IteratorAggregate">\IteratorAggregate</namespace-alias>
    <namespace-alias name="InvalidArgumentException">\InvalidArgumentException</namespace-alias>
    <namespace-alias name="Macroable">\Illuminate\Support\Traits\Macroable</namespace-alias>
    <namespace-alias name="Jsonable">\Illuminate\Contracts\Support\Jsonable</namespace-alias>
    <namespace-alias name="Arrayable">\Illuminate\Contracts\Support\Arrayable</namespace-alias>
    <class final="false" abstract="false" namespace="Illuminate\Support" line="16" package="Default">
      <extends/>
      <implements>\ArrayAccess</implements>
      <implements>\Illuminate\Contracts\Support\Arrayable</implements>
      <implements>\Countable</implements>
      <implements>\IteratorAggregate</implements>
      <implements>\Illuminate\Contracts\Support\Jsonable</implements>
      <implements>\JsonSerializable</implements>
      <name>Collection</name>
      <full_name>\Illuminate\Support\Collection</full_name>
      <docblock line="16">
        <description/>
        <long-description/>
        <tag name="package" line="16" description="Default"/>
      </docblock>
      <property static="false" visibility="protected" namespace="Illuminate\Support" line="25" package="Default">
        <name>$items</name>
        <full_name>\Illuminate\Support\Collection::items</full_name>
        <default>array()</default>
        <docblock line="25">
          <description>The items contained in the collection.</description>
          <long-description/>
          <tag name="var" line="25" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="protected" namespace="Illuminate\Support" line="15" package="Default">
        <name>$macros</name>
        <full_name>\Illuminate\Support\Traits\Macroable::macros</full_name>
        <default>array()</default>
        <docblock line="15">
          <description>The registered string macros.</description>
          <long-description/>
          <tag name="var" line="15" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="33" package="Default">
        <name>__construct</name>
        <full_name>\Illuminate\Support\Collection::__construct()</full_name>
        <docblock line="33">
          <description>Create a new collection.</description>
          <long-description/>
          <tag name="param" line="33" description="" type="mixed" variable="$items">
            <type>mixed</type>
          </tag>
          <tag name="return" line="33" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$items</name>
          <default>array()</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Support" line="44" package="Default">
        <name>make</name>
        <full_name>\Illuminate\Support\Collection::make()</full_name>
        <docblock line="44">
          <description>Create a new collection instance if the value isn't one already.</description>
          <long-description/>
          <tag name="param" line="44" description="" type="mixed" variable="$items">
            <type>mixed</type>
          </tag>
          <tag name="return" line="44" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$items</name>
          <default>array()</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="54" package="Default">
        <name>all</name>
        <full_name>\Illuminate\Support\Collection::all()</full_name>
        <docblock line="54">
          <description>Get all of the items in the collection.</description>
          <long-description/>
          <tag name="return" line="54" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="65" package="Default">
        <name>avg</name>
        <full_name>\Illuminate\Support\Collection::avg()</full_name>
        <docblock line="65">
          <description>Get the average value of a given key.</description>
          <long-description/>
          <tag name="param" line="65" description="" type="string|null" variable="$key">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="65" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="78" package="Default">
        <name>average</name>
        <full_name>\Illuminate\Support\Collection::average()</full_name>
        <docblock line="78">
          <description>Alias for the "avg" method.</description>
          <long-description/>
          <tag name="param" line="78" description="" type="string|null" variable="$key">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="78" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="88" package="Default">
        <name>collapse</name>
        <full_name>\Illuminate\Support\Collection::collapse()</full_name>
        <docblock line="88">
          <description>Collapse the collection of items into a single array.</description>
          <long-description/>
          <tag name="return" line="88" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="100" package="Default">
        <name>contains</name>
        <full_name>\Illuminate\Support\Collection::contains()</full_name>
        <docblock line="100">
          <description>Determine if an item exists in the collection.</description>
          <long-description/>
          <tag name="param" line="100" description="" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="param" line="100" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="100" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="121" package="Default">
        <name>diff</name>
        <full_name>\Illuminate\Support\Collection::diff()</full_name>
        <docblock line="121">
          <description>Get the items in the collection that are not present in the given items.</description>
          <long-description/>
          <tag name="param" line="121" description="" type="mixed" variable="$items">
            <type>mixed</type>
          </tag>
          <tag name="return" line="121" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$items</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="132" package="Default">
        <name>diffKeys</name>
        <full_name>\Illuminate\Support\Collection::diffKeys()</full_name>
        <docblock line="132">
          <description>Get the items in the collection whose keys are not present in the given items.</description>
          <long-description/>
          <tag name="param" line="132" description="" type="mixed" variable="$items">
            <type>mixed</type>
          </tag>
          <tag name="return" line="132" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$items</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="143" package="Default">
        <name>each</name>
        <full_name>\Illuminate\Support\Collection::each()</full_name>
        <docblock line="143">
          <description>Execute a callback over each item.</description>
          <long-description/>
          <tag name="param" line="143" description="" type="callable" variable="$callback">
            <type>callable</type>
          </tag>
          <tag name="return" line="143" description="" type="\Illuminate\Support\Collection">
            <type>\Illuminate\Support\Collection</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="161" package="Default">
        <name>every</name>
        <full_name>\Illuminate\Support\Collection::every()</full_name>
        <docblock line="161">
          <description>Create a new collection consisting of every n-th element.</description>
          <long-description/>
          <tag name="param" line="161" description="" type="integer" variable="$step">
            <type>integer</type>
          </tag>
          <tag name="param" line="161" description="" type="integer" variable="$offset">
            <type>integer</type>
          </tag>
          <tag name="return" line="161" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$step</name>
          <default/>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default>0</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="184" package="Default">
        <name>except</name>
        <full_name>\Illuminate\Support\Collection::except()</full_name>
        <docblock line="184">
          <description>Get all items except for those with the specified keys.</description>
          <long-description/>
          <tag name="param" line="184" description="" type="mixed" variable="$keys">
            <type>mixed</type>
          </tag>
          <tag name="return" line="184" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$keys</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="197" package="Default">
        <name>filter</name>
        <full_name>\Illuminate\Support\Collection::filter()</full_name>
        <docblock line="197">
          <description>Run a filter over each of the items.</description>
          <long-description/>
          <tag name="param" line="197" description="" type="callable|null" variable="$callback">
            <type>callable</type>
            <type>null</type>
          </tag>
          <tag name="return" line="197" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default>null</default>
          <type>callable|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="222" package="Default">
        <name>where</name>
        <full_name>\Illuminate\Support\Collection::where()</full_name>
        <docblock line="222">
          <description>Filter items by the given key value pair.</description>
          <long-description/>
          <tag name="param" line="222" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="222" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="param" line="222" description="" type="boolean" variable="$strict">
            <type>boolean</type>
          </tag>
          <tag name="return" line="222" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$strict</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="237" package="Default">
        <name>whereLoose</name>
        <full_name>\Illuminate\Support\Collection::whereLoose()</full_name>
        <docblock line="237">
          <description>Filter items by the given key value pair using loose comparison.</description>
          <long-description/>
          <tag name="param" line="237" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="237" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="237" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="250" package="Default">
        <name>whereIn</name>
        <full_name>\Illuminate\Support\Collection::whereIn()</full_name>
        <docblock line="250">
          <description>Filter items by the given key value pair.</description>
          <long-description/>
          <tag name="param" line="250" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="250" description="" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="param" line="250" description="" type="boolean" variable="$strict">
            <type>boolean</type>
          </tag>
          <tag name="return" line="250" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$strict</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="264" package="Default">
        <name>whereInLoose</name>
        <full_name>\Illuminate\Support\Collection::whereInLoose()</full_name>
        <docblock line="264">
          <description>Filter items by the given key value pair using loose comparison.</description>
          <long-description/>
          <tag name="param" line="264" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="264" description="" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="return" line="264" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="276" package="Default">
        <name>first</name>
        <full_name>\Illuminate\Support\Collection::first()</full_name>
        <docblock line="276">
          <description>Get the first item from the collection.</description>
          <long-description/>
          <tag name="param" line="276" description="" type="callable|null" variable="$callback">
            <type>callable</type>
            <type>null</type>
          </tag>
          <tag name="param" line="276" description="" type="mixed" variable="$default">
            <type>mixed</type>
          </tag>
          <tag name="return" line="276" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default>null</default>
          <type>callable|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$default</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="287" package="Default">
        <name>flatten</name>
        <full_name>\Illuminate\Support\Collection::flatten()</full_name>
        <docblock line="287">
          <description>Get a flattened array of the items in the collection.</description>
          <long-description/>
          <tag name="param" line="287" description="" type="integer" variable="$depth">
            <type>integer</type>
          </tag>
          <tag name="return" line="287" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$depth</name>
          <default>INF</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="297" package="Default">
        <name>flip</name>
        <full_name>\Illuminate\Support\Collection::flip()</full_name>
        <docblock line="297">
          <description>Flip the items in the collection.</description>
          <long-description/>
          <tag name="return" line="297" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="308" package="Default">
        <name>forget</name>
        <full_name>\Illuminate\Support\Collection::forget()</full_name>
        <docblock line="308">
          <description>Remove an item from the collection by key.</description>
          <long-description/>
          <tag name="param" line="308" description="" type="string|array" variable="$keys">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="return" line="308" description="" type="\Illuminate\Support\Collection">
            <type>\Illuminate\Support\Collection</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$keys</name>
          <default/>
          <type>string|array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="324" package="Default">
        <name>get</name>
        <full_name>\Illuminate\Support\Collection::get()</full_name>
        <docblock line="324">
          <description>Get an item from the collection by key.</description>
          <long-description/>
          <tag name="param" line="324" description="" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="param" line="324" description="" type="mixed" variable="$default">
            <type>mixed</type>
          </tag>
          <tag name="return" line="324" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$default</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="340" package="Default">
        <name>groupBy</name>
        <full_name>\Illuminate\Support\Collection::groupBy()</full_name>
        <docblock line="340">
          <description>Group an associative array by a field or using a callback.</description>
          <long-description/>
          <tag name="param" line="340" description="" type="callable|string" variable="$groupBy">
            <type>callable</type>
            <type>string</type>
          </tag>
          <tag name="param" line="340" description="" type="boolean" variable="$preserveKeys">
            <type>boolean</type>
          </tag>
          <tag name="return" line="340" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$groupBy</name>
          <default/>
          <type>callable|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$preserveKeys</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="371" package="Default">
        <name>keyBy</name>
        <full_name>\Illuminate\Support\Collection::keyBy()</full_name>
        <docblock line="371">
          <description>Key an associative array by a field or using a callback.</description>
          <long-description/>
          <tag name="param" line="371" description="" type="callable|string" variable="$keyBy">
            <type>callable</type>
            <type>string</type>
          </tag>
          <tag name="return" line="371" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$keyBy</name>
          <default/>
          <type>callable|string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="390" package="Default">
        <name>has</name>
        <full_name>\Illuminate\Support\Collection::has()</full_name>
        <docblock line="390">
          <description>Determine if an item exists in the collection by key.</description>
          <long-description/>
          <tag name="param" line="390" description="" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="return" line="390" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="402" package="Default">
        <name>implode</name>
        <full_name>\Illuminate\Support\Collection::implode()</full_name>
        <docblock line="402">
          <description>Concatenate values of a given key as a string.</description>
          <long-description/>
          <tag name="param" line="402" description="" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="param" line="402" description="" type="string" variable="$glue">
            <type>string</type>
          </tag>
          <tag name="return" line="402" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$glue</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="419" package="Default">
        <name>intersect</name>
        <full_name>\Illuminate\Support\Collection::intersect()</full_name>
        <docblock line="419">
          <description>Intersect the collection with the given items.</description>
          <long-description/>
          <tag name="param" line="419" description="" type="mixed" variable="$items">
            <type>mixed</type>
          </tag>
          <tag name="return" line="419" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$items</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="429" package="Default">
        <name>isEmpty</name>
        <full_name>\Illuminate\Support\Collection::isEmpty()</full_name>
        <docblock line="429">
          <description>Determine if the collection is empty or not.</description>
          <long-description/>
          <tag name="return" line="429" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Support" line="440" package="Default">
        <name>useAsCallable</name>
        <full_name>\Illuminate\Support\Collection::useAsCallable()</full_name>
        <docblock line="440">
          <description>Determine if the given value is callable, but not a string.</description>
          <long-description/>
          <tag name="param" line="440" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="440" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="450" package="Default">
        <name>keys</name>
        <full_name>\Illuminate\Support\Collection::keys()</full_name>
        <docblock line="450">
          <description>Get the keys of the collection items.</description>
          <long-description/>
          <tag name="return" line="450" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="462" package="Default">
        <name>last</name>
        <full_name>\Illuminate\Support\Collection::last()</full_name>
        <docblock line="462">
          <description>Get the last item from the collection.</description>
          <long-description/>
          <tag name="param" line="462" description="" type="callable|null" variable="$callback">
            <type>callable</type>
            <type>null</type>
          </tag>
          <tag name="param" line="462" description="" type="mixed" variable="$default">
            <type>mixed</type>
          </tag>
          <tag name="return" line="462" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default>null</default>
          <type>callable|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$default</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="474" package="Default">
        <name>pluck</name>
        <full_name>\Illuminate\Support\Collection::pluck()</full_name>
        <docblock line="474">
          <description>Get the values of a given key.</description>
          <long-description/>
          <tag name="param" line="474" description="" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="param" line="474" description="" type="string|null" variable="$key">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="474" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="488" package="Default">
        <name>lists</name>
        <full_name>\Illuminate\Support\Collection::lists()</full_name>
        <docblock line="488">
          <description>Alias for the "pluck" method.</description>
          <long-description/>
          <tag name="param" line="488" description="" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="param" line="488" description="" type="string|null" variable="$key">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="488" description="" type="static">
            <type>static</type>
          </tag>
          <tag name="deprecated" line="488" description="since version 5.2. Use the &quot;pluck&quot; method directly."/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="499" package="Default">
        <name>map</name>
        <full_name>\Illuminate\Support\Collection::map()</full_name>
        <docblock line="499">
          <description>Run a map over each of the items.</description>
          <long-description/>
          <tag name="param" line="499" description="" type="callable" variable="$callback">
            <type>callable</type>
          </tag>
          <tag name="return" line="499" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="514" package="Default">
        <name>flatMap</name>
        <full_name>\Illuminate\Support\Collection::flatMap()</full_name>
        <docblock line="514">
          <description>Map a collection and flatten the result by a single level.</description>
          <long-description/>
          <tag name="param" line="514" description="" type="callable" variable="$callback">
            <type>callable</type>
          </tag>
          <tag name="return" line="514" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="525" package="Default">
        <name>max</name>
        <full_name>\Illuminate\Support\Collection::max()</full_name>
        <docblock line="525">
          <description>Get the max value of a given key.</description>
          <long-description/>
          <tag name="param" line="525" description="" type="string|null" variable="$key">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="525" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="540" package="Default">
        <name>merge</name>
        <full_name>\Illuminate\Support\Collection::merge()</full_name>
        <docblock line="540">
          <description>Merge the collection with the given items.</description>
          <long-description/>
          <tag name="param" line="540" description="" type="mixed" variable="$items">
            <type>mixed</type>
          </tag>
          <tag name="return" line="540" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$items</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="551" package="Default">
        <name>combine</name>
        <full_name>\Illuminate\Support\Collection::combine()</full_name>
        <docblock line="551">
          <description>Create a collection by using this collection for keys and another for its values.</description>
          <long-description/>
          <tag name="param" line="551" description="" type="mixed" variable="$values">
            <type>mixed</type>
          </tag>
          <tag name="return" line="551" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="562" package="Default">
        <name>union</name>
        <full_name>\Illuminate\Support\Collection::union()</full_name>
        <docblock line="562">
          <description>Union the collection with the given items.</description>
          <long-description/>
          <tag name="param" line="562" description="" type="mixed" variable="$items">
            <type>mixed</type>
          </tag>
          <tag name="return" line="562" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$items</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="573" package="Default">
        <name>min</name>
        <full_name>\Illuminate\Support\Collection::min()</full_name>
        <docblock line="573">
          <description>Get the min value of a given key.</description>
          <long-description/>
          <tag name="param" line="573" description="" type="string|null" variable="$key">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="573" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="588" package="Default">
        <name>only</name>
        <full_name>\Illuminate\Support\Collection::only()</full_name>
        <docblock line="588">
          <description>Get the items with the specified keys.</description>
          <long-description/>
          <tag name="param" line="588" description="" type="mixed" variable="$keys">
            <type>mixed</type>
          </tag>
          <tag name="return" line="588" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$keys</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="602" package="Default">
        <name>forPage</name>
        <full_name>\Illuminate\Support\Collection::forPage()</full_name>
        <docblock line="602">
          <description>"Paginate" the collection by slicing it into a smaller collection.</description>
          <long-description/>
          <tag name="param" line="602" description="" type="integer" variable="$page">
            <type>integer</type>
          </tag>
          <tag name="param" line="602" description="" type="integer" variable="$perPage">
            <type>integer</type>
          </tag>
          <tag name="return" line="602" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$page</name>
          <default/>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$perPage</name>
          <default/>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="612" package="Default">
        <name>pop</name>
        <full_name>\Illuminate\Support\Collection::pop()</full_name>
        <docblock line="612">
          <description>Get and remove the last item from the collection.</description>
          <long-description/>
          <tag name="return" line="612" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="624" package="Default">
        <name>prepend</name>
        <full_name>\Illuminate\Support\Collection::prepend()</full_name>
        <docblock line="624">
          <description>Push an item onto the beginning of the collection.</description>
          <long-description/>
          <tag name="param" line="624" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="param" line="624" description="" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="return" line="624" description="" type="\Illuminate\Support\Collection">
            <type>\Illuminate\Support\Collection</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="637" package="Default">
        <name>push</name>
        <full_name>\Illuminate\Support\Collection::push()</full_name>
        <docblock line="637">
          <description>Push an item onto the end of the collection.</description>
          <long-description/>
          <tag name="param" line="637" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="637" description="" type="\Illuminate\Support\Collection">
            <type>\Illuminate\Support\Collection</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="651" package="Default">
        <name>pull</name>
        <full_name>\Illuminate\Support\Collection::pull()</full_name>
        <docblock line="651">
          <description>Get and remove an item from the collection.</description>
          <long-description/>
          <tag name="param" line="651" description="" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="param" line="651" description="" type="mixed" variable="$default">
            <type>mixed</type>
          </tag>
          <tag name="return" line="651" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$default</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="663" package="Default">
        <name>put</name>
        <full_name>\Illuminate\Support\Collection::put()</full_name>
        <docblock line="663">
          <description>Put an item in the collection by key.</description>
          <long-description/>
          <tag name="param" line="663" description="" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="param" line="663" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="663" description="" type="\Illuminate\Support\Collection">
            <type>\Illuminate\Support\Collection</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="678" package="Default">
        <name>random</name>
        <full_name>\Illuminate\Support\Collection::random()</full_name>
        <docblock line="678">
          <description>Get one or more items randomly from the collection.</description>
          <long-description/>
          <tag name="param" line="678" description="" type="integer" variable="$amount">
            <type>integer</type>
          </tag>
          <tag name="return" line="678" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="678" description="" type="\InvalidArgumentException">
            <type>\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$amount</name>
          <default>1</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="700" package="Default">
        <name>reduce</name>
        <full_name>\Illuminate\Support\Collection::reduce()</full_name>
        <docblock line="700">
          <description>Reduce the collection to a single value.</description>
          <long-description/>
          <tag name="param" line="700" description="" type="callable" variable="$callback">
            <type>callable</type>
          </tag>
          <tag name="param" line="700" description="" type="mixed" variable="$initial">
            <type>mixed</type>
          </tag>
          <tag name="return" line="700" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>callable</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$initial</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="711" package="Default">
        <name>reject</name>
        <full_name>\Illuminate\Support\Collection::reject()</full_name>
        <docblock line="711">
          <description>Create a collection of all elements that do not pass a given truth test.</description>
          <long-description/>
          <tag name="param" line="711" description="" type="callable|mixed" variable="$callback">
            <type>callable</type>
            <type>mixed</type>
          </tag>
          <tag name="return" line="711" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>callable|mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="729" package="Default">
        <name>reverse</name>
        <full_name>\Illuminate\Support\Collection::reverse()</full_name>
        <docblock line="729">
          <description>Reverse items order.</description>
          <long-description/>
          <tag name="return" line="729" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="741" package="Default">
        <name>search</name>
        <full_name>\Illuminate\Support\Collection::search()</full_name>
        <docblock line="741">
          <description>Search the collection for a given value and return the corresponding key if successful.</description>
          <long-description/>
          <tag name="param" line="741" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="param" line="741" description="" type="boolean" variable="$strict">
            <type>boolean</type>
          </tag>
          <tag name="return" line="741" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$strict</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="761" package="Default">
        <name>shift</name>
        <full_name>\Illuminate\Support\Collection::shift()</full_name>
        <docblock line="761">
          <description>Get and remove the first item from the collection.</description>
          <long-description/>
          <tag name="return" line="761" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="771" package="Default">
        <name>shuffle</name>
        <full_name>\Illuminate\Support\Collection::shuffle()</full_name>
        <docblock line="771">
          <description>Shuffle the items in the collection.</description>
          <long-description/>
          <tag name="return" line="771" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="787" package="Default">
        <name>slice</name>
        <full_name>\Illuminate\Support\Collection::slice()</full_name>
        <docblock line="787">
          <description>Slice the underlying collection array.</description>
          <long-description/>
          <tag name="param" line="787" description="" type="integer" variable="$offset">
            <type>integer</type>
          </tag>
          <tag name="param" line="787" description="" type="integer" variable="$length">
            <type>integer</type>
          </tag>
          <tag name="return" line="787" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default/>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$length</name>
          <default>null</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="798" package="Default">
        <name>chunk</name>
        <full_name>\Illuminate\Support\Collection::chunk()</full_name>
        <docblock line="798">
          <description>Chunk the underlying collection array.</description>
          <long-description/>
          <tag name="param" line="798" description="" type="integer" variable="$size">
            <type>integer</type>
          </tag>
          <tag name="return" line="798" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$size</name>
          <default/>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="815" package="Default">
        <name>sort</name>
        <full_name>\Illuminate\Support\Collection::sort()</full_name>
        <docblock line="815">
          <description>Sort through each item with a callback.</description>
          <long-description/>
          <tag name="param" line="815" description="" type="callable|null" variable="$callback">
            <type>callable</type>
            <type>null</type>
          </tag>
          <tag name="return" line="815" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default>null</default>
          <type>callable|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="838" package="Default">
        <name>sortBy</name>
        <full_name>\Illuminate\Support\Collection::sortBy()</full_name>
        <docblock line="838">
          <description>Sort the collection using the given callback.</description>
          <long-description/>
          <tag name="param" line="838" description="" type="callable|string" variable="$callback">
            <type>callable</type>
            <type>string</type>
          </tag>
          <tag name="param" line="838" description="" type="integer" variable="$options">
            <type>integer</type>
          </tag>
          <tag name="param" line="838" description="" type="boolean" variable="$descending">
            <type>boolean</type>
          </tag>
          <tag name="return" line="838" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>callable|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>SORT_REGULAR</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$descending</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="871" package="Default">
        <name>sortByDesc</name>
        <full_name>\Illuminate\Support\Collection::sortByDesc()</full_name>
        <docblock line="871">
          <description>Sort the collection in descending order using the given callback.</description>
          <long-description/>
          <tag name="param" line="871" description="" type="callable|string" variable="$callback">
            <type>callable</type>
            <type>string</type>
          </tag>
          <tag name="param" line="871" description="" type="integer" variable="$options">
            <type>integer</type>
          </tag>
          <tag name="return" line="871" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>callable|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>SORT_REGULAR</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="884" package="Default">
        <name>splice</name>
        <full_name>\Illuminate\Support\Collection::splice()</full_name>
        <docblock line="884">
          <description>Splice a portion of the underlying collection array.</description>
          <long-description/>
          <tag name="param" line="884" description="" type="integer" variable="$offset">
            <type>integer</type>
          </tag>
          <tag name="param" line="884" description="" type="integer|null" variable="$length">
            <type>integer</type>
            <type>null</type>
          </tag>
          <tag name="param" line="884" description="" type="mixed" variable="$replacement">
            <type>mixed</type>
          </tag>
          <tag name="return" line="884" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default/>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$length</name>
          <default>null</default>
          <type>integer|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$replacement</name>
          <default>array()</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="899" package="Default">
        <name>sum</name>
        <full_name>\Illuminate\Support\Collection::sum()</full_name>
        <docblock line="899">
          <description>Get the sum of the given values.</description>
          <long-description/>
          <tag name="param" line="899" description="" type="callable|string|null" variable="$callback">
            <type>callable</type>
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="899" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default>null</default>
          <type>callable|string|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="918" package="Default">
        <name>take</name>
        <full_name>\Illuminate\Support\Collection::take()</full_name>
        <docblock line="918">
          <description>Take the first or last {$limit} items.</description>
          <long-description/>
          <tag name="param" line="918" description="" type="integer" variable="$limit">
            <type>integer</type>
          </tag>
          <tag name="return" line="918" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$limit</name>
          <default/>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="933" package="Default">
        <name>transform</name>
        <full_name>\Illuminate\Support\Collection::transform()</full_name>
        <docblock line="933">
          <description>Transform each item in the collection using a callback.</description>
          <long-description/>
          <tag name="param" line="933" description="" type="callable" variable="$callback">
            <type>callable</type>
          </tag>
          <tag name="return" line="933" description="" type="\Illuminate\Support\Collection">
            <type>\Illuminate\Support\Collection</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default/>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="946" package="Default">
        <name>unique</name>
        <full_name>\Illuminate\Support\Collection::unique()</full_name>
        <docblock line="946">
          <description>Return only unique items from the collection array.</description>
          <long-description/>
          <tag name="param" line="946" description="" type="string|callable|null" variable="$key">
            <type>string</type>
            <type>callable</type>
            <type>null</type>
          </tag>
          <tag name="return" line="946" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string|callable|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="970" package="Default">
        <name>values</name>
        <full_name>\Illuminate\Support\Collection::values()</full_name>
        <docblock line="970">
          <description>Reset the keys on the underlying array.</description>
          <long-description/>
          <tag name="return" line="970" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Support" line="981" package="Default">
        <name>valueRetriever</name>
        <full_name>\Illuminate\Support\Collection::valueRetriever()</full_name>
        <docblock line="981">
          <description>Get a value retrieving callback.</description>
          <long-description/>
          <tag name="param" line="981" description="" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="return" line="981" description="" type="callable">
            <type>callable</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="1001" package="Default">
        <name>zip</name>
        <full_name>\Illuminate\Support\Collection::zip()</full_name>
        <docblock line="1001">
          <description>Zip the collection together with one or more arrays.</description>
          <long-description>e.g. new Collection([1, 2, 3])-&gt;zip([4, 5, 6]);
     =&gt; [[1, 4], [2, 5], [3, 6]]</long-description>
          <tag name="param" line="1001" description="" type="mixed" variable="$items">
            <type>mixed</type>
          </tag>
          <tag name="return" line="1001" description="" type="static">
            <type>static</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$items</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="1019" package="Default">
        <name>toArray</name>
        <full_name>\Illuminate\Support\Collection::toArray()</full_name>
        <docblock line="1019">
          <description>Get the collection of items as a plain array.</description>
          <long-description/>
          <tag name="return" line="1019" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\Illuminate\Contracts\Support\Arrayable::toArray()" refers="\Illuminate\Contracts\Support\Arrayable::toArray()" link="/classes/Illuminate.Contracts.Support.Arrayable.html#method_toArray"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="1031" package="Default">
        <name>jsonSerialize</name>
        <full_name>\Illuminate\Support\Collection::jsonSerialize()</full_name>
        <docblock line="1031">
          <description>Convert the object into something JSON serializable.</description>
          <long-description/>
          <tag name="return" line="1031" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="1052" package="Default">
        <name>toJson</name>
        <full_name>\Illuminate\Support\Collection::toJson()</full_name>
        <docblock line="1052">
          <description>Get the collection of items as JSON.</description>
          <long-description/>
          <tag name="param" line="1052" description="" type="integer" variable="$options">
            <type>integer</type>
          </tag>
          <tag name="return" line="1052" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\Illuminate\Contracts\Support\Jsonable::toJson()" refers="\Illuminate\Contracts\Support\Jsonable::toJson()" link="/classes/Illuminate.Contracts.Support.Jsonable.html#method_toJson"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>0</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="1062" package="Default">
        <name>getIterator</name>
        <full_name>\Illuminate\Support\Collection::getIterator()</full_name>
        <docblock line="1062">
          <description>Get an iterator for the items.</description>
          <long-description/>
          <tag name="return" line="1062" description="" type="\ArrayIterator">
            <type>\ArrayIterator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="1073" package="Default">
        <name>getCachingIterator</name>
        <full_name>\Illuminate\Support\Collection::getCachingIterator()</full_name>
        <docblock line="1073">
          <description>Get a CachingIterator instance.</description>
          <long-description/>
          <tag name="param" line="1073" description="" type="integer" variable="$flags">
            <type>integer</type>
          </tag>
          <tag name="return" line="1073" description="" type="\CachingIterator">
            <type>\CachingIterator</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$flags</name>
          <default>\CachingIterator::CALL_TOSTRING</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="1083" package="Default">
        <name>count</name>
        <full_name>\Illuminate\Support\Collection::count()</full_name>
        <docblock line="1083">
          <description>Count the number of items in the collection.</description>
          <long-description/>
          <tag name="return" line="1083" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="1094" package="Default">
        <name>offsetExists</name>
        <full_name>\Illuminate\Support\Collection::offsetExists()</full_name>
        <docblock line="1094">
          <description>Determine if an item exists at an offset.</description>
          <long-description/>
          <tag name="param" line="1094" description="" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="return" line="1094" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="1105" package="Default">
        <name>offsetGet</name>
        <full_name>\Illuminate\Support\Collection::offsetGet()</full_name>
        <docblock line="1105">
          <description>Get an item at a given offset.</description>
          <long-description/>
          <tag name="param" line="1105" description="" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="return" line="1105" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="1117" package="Default">
        <name>offsetSet</name>
        <full_name>\Illuminate\Support\Collection::offsetSet()</full_name>
        <docblock line="1117">
          <description>Set the item at a given offset.</description>
          <long-description/>
          <tag name="param" line="1117" description="" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="param" line="1117" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="1117" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="1132" package="Default">
        <name>offsetUnset</name>
        <full_name>\Illuminate\Support\Collection::offsetUnset()</full_name>
        <docblock line="1132">
          <description>Unset the item at a given offset.</description>
          <long-description/>
          <tag name="param" line="1132" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="1132" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="1142" package="Default">
        <name>__toString</name>
        <full_name>\Illuminate\Support\Collection::__toString()</full_name>
        <docblock line="1142">
          <description>Convert the collection to its string representation.</description>
          <long-description/>
          <tag name="return" line="1142" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Support" line="1153" package="Default">
        <name>getArrayableItems</name>
        <full_name>\Illuminate\Support\Collection::getArrayableItems()</full_name>
        <docblock line="1153">
          <description>Results array of items from Collection or Arrayable.</description>
          <long-description/>
          <tag name="param" line="1153" description="" type="mixed" variable="$items">
            <type>mixed</type>
          </tag>
          <tag name="return" line="1153" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$items</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Support" line="24" package="Default">
        <name>macro</name>
        <full_name>\Illuminate\Support\Traits\Macroable::macro()</full_name>
        <docblock line="24">
          <description>Register a custom macro.</description>
          <long-description/>
          <tag name="param" line="24" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="24" description="" type="callable" variable="$macro">
            <type>callable</type>
          </tag>
          <tag name="return" line="24" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$macro</name>
          <default/>
          <type>callable</type>
        </argument>
        <inherited_from>\Illuminate\Support\Traits\Macroable</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Support" line="35" package="Default">
        <name>hasMacro</name>
        <full_name>\Illuminate\Support\Traits\Macroable::hasMacro()</full_name>
        <docblock line="35">
          <description>Checks if macro is registered.</description>
          <long-description/>
          <tag name="param" line="35" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="35" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default/>
          <type>string</type>
        </argument>
        <inherited_from>\Illuminate\Support\Traits\Macroable</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Illuminate\Support" line="49" package="Default">
        <name>__callStatic</name>
        <full_name>\Illuminate\Support\Traits\Macroable::__callStatic()</full_name>
        <docblock line="49">
          <description>Dynamically handle calls to the class.</description>
          <long-description/>
          <tag name="param" line="49" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="param" line="49" description="" type="array" variable="$parameters">
            <type>array</type>
          </tag>
          <tag name="return" line="49" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="49" description="" type="\BadMethodCallException">
            <type>\BadMethodCallException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$parameters</name>
          <default/>
          <type>array</type>
        </argument>
        <inherited_from>\Illuminate\Support\Traits\Macroable</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Support" line="71" package="Default">
        <name>__call</name>
        <full_name>\Illuminate\Support\Traits\Macroable::__call()</full_name>
        <docblock line="71">
          <description>Dynamically handle calls to the class.</description>
          <long-description/>
          <tag name="param" line="71" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="param" line="71" description="" type="array" variable="$parameters">
            <type>array</type>
          </tag>
          <tag name="return" line="71" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="71" description="" type="\BadMethodCallException">
            <type>\BadMethodCallException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$parameters</name>
          <default/>
          <type>array</type>
        </argument>
        <inherited_from>\Illuminate\Support\Traits\Macroable</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="16" code="PPC:ERR-50005">No summary for class \Illuminate\Support\Collection</error>
    </parse_markers>
    <source>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</source>
  <type>class</type></file>