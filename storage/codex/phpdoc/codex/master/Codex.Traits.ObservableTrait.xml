<file path="codex/workbench/codex/core/src/Traits/ObservableTrait.php" generated-path="codex.workbench.codex.core.src.Traits.ObservableTrait.html" hash="da91c69a2589bc559bcd521723f8650a" package="Default">
    <docblock line="0">
      <description>Part of the Codex Project packages.</description>
      <long-description>License and copyright information bundled with this package in the LICENSE file</long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <trait namespace="Codex\Traits" line="20" package="Codex\Core">
      <name>ObservableTrait</name>
      <full_name>\Codex\Traits\ObservableTrait</full_name>
      <docblock line="20">
        <description>The ObservableTrait allows the class to be observed using the observer pattern. Requires the EventTrait to be present as well.</description>
        <long-description/>
        <tag name="package" line="20" description="Codex\Core"/>
        <tag name="author" line="20" description="Robin Radic"/>
        <tag name="copyright" line="20" description="Copyright (c) 2015, Robin Radic. All rights reserved"/>
        <tag name="see" line="20" description="The event trait is also required" link="\Codex\Traits\EventTrait"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Codex\Traits" line="31" package="Codex\Core">
        <name>observe</name>
        <full_name>\Codex\Traits\ObservableTrait::observe()</full_name>
        <docblock line="31">
          <description>Register an observer with the Model.</description>
          <long-description/>
          <tag name="param" line="31" description="" type="object|string" variable="$class">
            <type>object</type>
            <type>string</type>
          </tag>
          <tag name="param" line="31" description="" type="integer" variable="$priority">
            <type>integer</type>
          </tag>
          <tag name="return" line="31" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default/>
          <type>object|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$priority</name>
          <default>0</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Traits" line="49" package="Codex\Core">
        <name>getObservableEvents</name>
        <full_name>\Codex\Traits\ObservableTrait::getObservableEvents()</full_name>
        <docblock line="49">
          <description>Get the observable event names.</description>
          <long-description/>
          <tag name="return" line="49" description="The event names that can be observed" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Traits" line="57" package="Codex\Core">
        <name>flushEventListeners</name>
        <full_name>\Codex\Traits\ObservableTrait::flushEventListeners()</full_name>
        <docblock line="57">
          <description>Remove all of the event listeners for the model.</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Traits" line="72" package="Codex\Core">
        <name>addObservableEvents</name>
        <full_name>\Codex\Traits\ObservableTrait::addObservableEvents()</full_name>
        <docblock line="72">
          <description>Adds one or more observable event names</description>
          <long-description/>
          <tag name="param" line="72" description="&lt;p&gt;The observable event names&lt;/p&gt;" type="array|string" variable="$observables">
            <type>array</type>
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$observables</name>
          <default/>
          <type>array|string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Traits" line="86" package="Codex\Core">
        <name>setObservableEvents</name>
        <full_name>\Codex\Traits\ObservableTrait::setObservableEvents()</full_name>
        <docblock line="86">
          <description>Set the observable event names.</description>
          <long-description/>
          <tag name="param" line="86" description="" type="array" variable="$observables">
            <type>array</type>
          </tag>
          <tag name="return" line="86" description="" type="\Codex\Traits\ObservableTrait">
            <type>\Codex\Traits\ObservableTrait</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$observables</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Codex\Traits" line="105" package="Codex\Core">
        <name>removeObservableEvents</name>
        <full_name>\Codex\Traits\ObservableTrait::removeObservableEvents()</full_name>
        <docblock line="105">
          <description>Remove an observable event name.</description>
          <long-description/>
          <tag name="param" line="105" description="" type="array|mixed" variable="$observables">
            <type>array</type>
            <type>mixed</type>
          </tag>
          <tag name="return" line="105" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$observables</name>
          <default/>
          <type>array|mixed</type>
        </argument>
      </method>
    </trait>
    <source>eJzNVltP1EAUfu+vOBoSWrIsauILCGqQGBO8BHkTs5ltz25HuzN1ZspCkP/umdPp7nQvqIkP9gHamXP9vu8cePGyLuvkYG8vgT34JIwDPQFXIpzqAm/gk9HfMHdQi/y7mKIdkpm3PJc5KosgVAG5rm+NnJYOpJpoMxNOagXjRhUVFjCXrqSA0nYxyIoTnL87Pfvw+QwmskIKeZAkiRIztGQWsl9dGiGdPaKbUOAl+X0cWzTXYlwhX4OoKj23HDKvhKU3DWMEzWZUQGOlmvJ1ODJUiXNo1BAu8EcjDbbeZ9eoXBuzDVHTDR2BsDDHqup6f9U1Ep621lNtkG9F40ptuku40GNq+EIUMufrJVrBuftM8wyePXn6fBC7DOF1VQEbWPDl+JY4jsVFAf65ihG7ilrxkKH/BMffRISorKZg3HrB0LdXK8gmd0niQzP2/tkjvKbSEnTE+xLNwDDCeyrBo8S2nQuhZcQMyNwL6ad1xtOxw1St2kjlopZ2aiO1ke52NaJB1xgF11oW4eyAf9fNuJI5WEcKzGHSqJyVGApN25yDZVw4hicZe94li6RSkb8iCR6DwnkIdpQsDTjKB1IqWUg7ahsKwTN4GQzgEKboRvzeXUZRaE5Q5CWky4T7J+SwpIAptGnm1bfTEphFdfpHTsh/hiS3YoQ3RIxd9sge2ZqLf9qWDg9NIJMznftXhSZtPQdxn0PYfbVLPxdXHYDUURz4Pum/3a/p5y26aBJ9m0GbPPlr0glEC2PEbSRkNqY4wkFOQoyGfZMcFjrYCO8K/SFjbXSNxt0uYPULbAC7y7rtLnPtz/dPomPi/Qt8PdrS/wXO9DX6ldWt2bajKqBvvTD4fBbP0uZ+JlVjyx556/38Vs7/RIidosjvjaQF7vKSlJTtn1B0Okuje47mVZV2Eh22g0KYYBHmJYuEtU1Kr4vCglbEvSGwzDZNbdlGLKluGQ2Hw52YwsutCu1H20yLKIo18OLwaxTFqXmlcHF9H6+1vsp8vpFHTpgpIRZvqFaUdgOJHHnUKPmjwfAxQ6IoDT4biR/0UmcdOeuUfP676Y6p6KXYsga4xgeh39oyPEQAr9FHfzbyq8oPy/44XvbecWUzutLoOQ/g1bmeyvzsJsfal5w+vlz833LXBrsHW+qmKqAUtCo8nl1p8CUq5uvj3pCsst8XVdx+pJQY2N+tLLWZ1gdZ/TmTN/Qf2B9wu+1v+YJaw2X854NVyMnkr0ZpAfp98gvPgoP5</source>
  <type>trait</type></file>