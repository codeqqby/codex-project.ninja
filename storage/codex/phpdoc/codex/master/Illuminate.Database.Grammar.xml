<file path="codex/vendor/laravel/framework/src/Illuminate/Database/Grammar.php" generated-path="codex.vendor.laravel.framework.src.Illuminate.Database.Grammar.html" hash="7970a5403a8acdee237c6712abaa0b2b" package="Default">
    <docblock line="0">
      <description/>
      <long-description/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Expression">\Illuminate\Database\Query\Expression</namespace-alias>
    <class final="false" abstract="true" namespace="Illuminate\Database" line="7" package="Default">
      <extends/>
      <name>Grammar</name>
      <full_name>\Illuminate\Database\Grammar</full_name>
      <docblock line="7">
        <description/>
        <long-description/>
        <tag name="package" line="7" description="Default"/>
      </docblock>
      <property static="false" visibility="protected" namespace="Illuminate\Database" line="14" package="Default">
        <name>$tablePrefix</name>
        <full_name>\Illuminate\Database\Grammar::tablePrefix</full_name>
        <default>''</default>
        <docblock line="14">
          <description>The grammar table prefix.</description>
          <long-description/>
          <tag name="var" line="14" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database" line="22" package="Default">
        <name>wrapArray</name>
        <full_name>\Illuminate\Database\Grammar::wrapArray()</full_name>
        <docblock line="22">
          <description>Wrap an array of values.</description>
          <long-description/>
          <tag name="param" line="22" description="" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="return" line="22" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database" line="33" package="Default">
        <name>wrapTable</name>
        <full_name>\Illuminate\Database\Grammar::wrapTable()</full_name>
        <docblock line="33">
          <description>Wrap a table in keyword identifiers.</description>
          <long-description/>
          <tag name="param" line="33" description="" type="\Illuminate\Database\Query\Expression|string" variable="$table">
            <type>\Illuminate\Database\Query\Expression</type>
            <type>string</type>
          </tag>
          <tag name="return" line="33" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default/>
          <type>\Illuminate\Database\Query\Expression|string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database" line="49" package="Default">
        <name>wrap</name>
        <full_name>\Illuminate\Database\Grammar::wrap()</full_name>
        <docblock line="49">
          <description>Wrap a value in keyword identifiers.</description>
          <long-description/>
          <tag name="param" line="49" description="" type="\Illuminate\Database\Query\Expression|string" variable="$value">
            <type>\Illuminate\Database\Query\Expression</type>
            <type>string</type>
          </tag>
          <tag name="param" line="49" description="" type="boolean" variable="$prefixAlias">
            <type>boolean</type>
          </tag>
          <tag name="return" line="49" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>\Illuminate\Database\Query\Expression|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$prefixAlias</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Database" line="92" package="Default">
        <name>wrapValue</name>
        <full_name>\Illuminate\Database\Grammar::wrapValue()</full_name>
        <docblock line="92">
          <description>Wrap a single string in keyword identifiers.</description>
          <long-description/>
          <tag name="param" line="92" description="" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="return" line="92" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database" line="107" package="Default">
        <name>columnize</name>
        <full_name>\Illuminate\Database\Grammar::columnize()</full_name>
        <docblock line="107">
          <description>Convert an array of column names into a delimited string.</description>
          <long-description/>
          <tag name="param" line="107" description="" type="array" variable="$columns">
            <type>array</type>
          </tag>
          <tag name="return" line="107" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$columns</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database" line="118" package="Default">
        <name>parameterize</name>
        <full_name>\Illuminate\Database\Grammar::parameterize()</full_name>
        <docblock line="118">
          <description>Create query parameter place-holders for an array.</description>
          <long-description/>
          <tag name="param" line="118" description="" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="return" line="118" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database" line="129" package="Default">
        <name>parameter</name>
        <full_name>\Illuminate\Database\Grammar::parameter()</full_name>
        <docblock line="129">
          <description>Get the appropriate query parameter place-holder for a value.</description>
          <long-description/>
          <tag name="param" line="129" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="129" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database" line="140" package="Default">
        <name>getValue</name>
        <full_name>\Illuminate\Database\Grammar::getValue()</full_name>
        <docblock line="140">
          <description>Get the value of a raw expression.</description>
          <long-description/>
          <tag name="param" line="140" description="" type="\Illuminate\Database\Query\Expression" variable="$expression">
            <type>\Illuminate\Database\Query\Expression</type>
          </tag>
          <tag name="return" line="140" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$expression</name>
          <default/>
          <type>\Illuminate\Database\Query\Expression</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database" line="151" package="Default">
        <name>isExpression</name>
        <full_name>\Illuminate\Database\Grammar::isExpression()</full_name>
        <docblock line="151">
          <description>Determine if the given value is a raw expression.</description>
          <long-description/>
          <tag name="param" line="151" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="151" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default/>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database" line="161" package="Default">
        <name>getDateFormat</name>
        <full_name>\Illuminate\Database\Grammar::getDateFormat()</full_name>
        <docblock line="161">
          <description>Get the format for database stored dates.</description>
          <long-description/>
          <tag name="return" line="161" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database" line="171" package="Default">
        <name>getTablePrefix</name>
        <full_name>\Illuminate\Database\Grammar::getTablePrefix()</full_name>
        <docblock line="171">
          <description>Get the grammar's table prefix.</description>
          <long-description/>
          <tag name="return" line="171" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Database" line="182" package="Default">
        <name>setTablePrefix</name>
        <full_name>\Illuminate\Database\Grammar::setTablePrefix()</full_name>
        <docblock line="182">
          <description>Set the grammar's table prefix.</description>
          <long-description/>
          <tag name="param" line="182" description="" type="string" variable="$prefix">
            <type>string</type>
          </tag>
          <tag name="return" line="182" description="" type="\Illuminate\Database\Grammar">
            <type>\Illuminate\Database\Grammar</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$prefix</name>
          <default/>
          <type>string</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="7" code="PPC:ERR-50005">No summary for class \Illuminate\Database\Grammar</error>
    </parse_markers>
    <source>eJy1V9tu20YQfddXTAUhlAxZTvtoVXaDpE3zliJGi8I2ghU1lDYmuezu0rLb+N87e+FVpC4pShigRc6enTlzdmb443W2yQaDlCWoMhYifIjjPOEp03j3jmm2ZArng0GuOt/c/ZajfL77+SmTqBQXKZmypdKShRrCmCkF7yVLEiYH/wyArouzM3uHM7jZIKzdSyC0GIFAIv408waF3U+PZECQPF37Rxf2nkmhMdS4gpFd/tGuhgUEAXnR2uwPyTJgKTAp2TOICB5ZnKPa2Stj5BF4Mxg5q/KtRJ1LD9L0JV/GPIQoT0NNLMCWtntjrMYOyQNNrLFjwlx1vM8Jy8a3I73hagqBAQjup+XCuV3z0hOX54+n8IDPWyFXwFeYah5xlL0x3h2Tz6+OePAct5noSksHFTdm7dhBtDngEYxt1OdXXFUbF9aTmmmNMr9ijfp3Q1BhPS9tPVW7S4w/xYY13cwcwhS0zPEQ3TYp/y/ddos2xlKI2DwZuZPyJuZsR5xHpmTsdpg2sOjwRCxWx+fIYhydI2fdmaOLC/gQgaaS4LhdoqHBOJrRAd+QawxCQQTSabGebhG2PI4hRXqvBSg0HGkEkes6qoHMOIaoQAmzKmSOAEAWbkwlMBYK1wllUBW/sYwR6I83EMU2nVIpWRnDFL4Inirzb0LZ0RtYsvCB/KGgNyjJRXpkAIdMDSmANKWKJeSswSxlLBPK3LSIxRZlwRTVAaBQgwl8tygy06J6VHq+ME7HYoXjAIKicEzmg4a5TWQt4W24BuTtD/eE2nVUahbzxvqXwR4hONmVa1/fT2YuvlnNwEultkO3YEaFNhZwe1+LspOQWSchbc1xBanQtksYboyubFmtxDAlAQUkui+50k5EXEPMH7COmQqZsHhq5MYtvLTQiaC73jCjqFJw01LHFs34EnGpGnorAyKqCJB23Nrj4JzzQiSqySV6bl2TuM5j6pqNJkdXRD4Y1Vf8miUjqmKwuCqpa4vCisbaLOA1vHpFOs5TXWFM4Aq+71SSz9FtTUe1dlBs15IQIOn8BLSmYtpoexoCT+ry8OiHSr+iukS0+zp9WgvoKe57Cnc54jRqd6OcdpVqp+cF5Ss4C/qqszXa1zCDYTAjpz5LzGKaDMf0myrScFgdphk96uPrrUgfUerG0OUruB02iTsq2wxWGPOEmxgdAQdGMhg5kG/pe24l/xuLqcxD9YxlpT6mpqDuG9IKnF7xvKVzR73pL9PuwQaEmtqD5fV8I+IVqcaczpKtgyx0T6ZHkFDuXuNh73R6kIYSsT6w9lLxHrUtWHTapMgkP8SLo8WVsj5WEv5E+jnlYPWR0nOqmo2sawaC6755By4huO49JgUd7sjSGWEg2bbWc/7TPEmUVEjfwEsVSwXTx01lUeOgVwbvDNvkPvomCWv+SONU2YmPpcGnvjvzZl7eG19XJnvCK2Z+pVkaIiWq/tG7P7eRmQi0FfLKZ4rIp168Mr87vkJPShAlH3+xO4x7fA/+PE/OV/DrJb9UB4XoP8kDtf+j/CQXb6rhsc/H3TGzz9FPpzna7r3OrB2H3X5vGKoZhsdpR7MbhhlWMh9QZ9BFnC+DfwFPTRbq</source>
  <type>class</type></file>