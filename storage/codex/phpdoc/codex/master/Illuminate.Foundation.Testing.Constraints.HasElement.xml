<file path="codex/vendor/laravel/framework/src/Illuminate/Foundation/Testing/Constraints/HasElement.php" generated-path="codex.vendor.laravel.framework.src.Illuminate.Foundation.Testing.Constraints.HasElement.html" hash="e9c039aaed6a5cdd6836c4203920967b" package="Default">
    <docblock line="0">
      <description/>
      <long-description/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Crawler">\Symfony\Component\DomCrawler\Crawler</namespace-alias>
    <class final="false" abstract="false" namespace="Illuminate\Foundation\Testing\Constraints" line="7" package="Default">
      <extends>\Illuminate\Foundation\Testing\Constraints\PageConstraint</extends>
      <name>HasElement</name>
      <full_name>\Illuminate\Foundation\Testing\Constraints\HasElement</full_name>
      <docblock line="7">
        <description/>
        <long-description/>
        <tag name="package" line="7" description="Default"/>
        <tag name="inherited_from" description="\Illuminate\Foundation\Testing\Constraints\PageConstraint" refers="\Illuminate\Foundation\Testing\Constraints\PageConstraint" link="/classes/Illuminate.Foundation.Testing.Constraints.PageConstraint.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="Illuminate\Foundation\Testing\Constraints" line="14" package="Default">
        <name>$selector</name>
        <full_name>\Illuminate\Foundation\Testing\Constraints\HasElement::selector</full_name>
        <default/>
        <docblock line="14">
          <description>The name or ID of the element.</description>
          <long-description/>
          <tag name="var" line="14" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Illuminate\Foundation\Testing\Constraints" line="21" package="Default">
        <name>$attributes</name>
        <full_name>\Illuminate\Foundation\Testing\Constraints\HasElement::attributes</full_name>
        <default/>
        <docblock line="21">
          <description>The attributes the element should have.</description>
          <long-description/>
          <tag name="var" line="21" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Foundation\Testing\Constraints" line="30" package="Default">
        <name>__construct</name>
        <full_name>\Illuminate\Foundation\Testing\Constraints\HasElement::__construct()</full_name>
        <docblock line="30">
          <description>Create a new constraint instance.</description>
          <long-description/>
          <tag name="param" line="30" description="" type="string" variable="$selector">
            <type>string</type>
          </tag>
          <tag name="param" line="30" description="" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="return" line="30" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$selector</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$attributes</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Foundation\Testing\Constraints" line="42" package="Default">
        <name>matches</name>
        <full_name>\Illuminate\Foundation\Testing\Constraints\HasElement::matches()</full_name>
        <docblock line="42">
          <description>Check if the element is found in the given crawler.</description>
          <long-description/>
          <tag name="param" line="42" description="" type="\Symfony\Component\DomCrawler\Crawler|string" variable="$crawler">
            <type>\Symfony\Component\DomCrawler\Crawler</type>
            <type>string</type>
          </tag>
          <tag name="return" line="42" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$crawler</name>
          <default/>
          <type>\Symfony\Component\DomCrawler\Crawler|string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Foundation\Testing\Constraints" line="67" package="Default">
        <name>hasAttributes</name>
        <full_name>\Illuminate\Foundation\Testing\Constraints\HasElement::hasAttributes()</full_name>
        <docblock line="67">
          <description>Determines if the given element has the attributes.</description>
          <long-description/>
          <tag name="param" line="67" description="" type="\Symfony\Component\DomCrawler\Crawler" variable="$element">
            <type>\Symfony\Component\DomCrawler\Crawler</type>
          </tag>
          <tag name="return" line="67" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$element</name>
          <default/>
          <type>\Symfony\Component\DomCrawler\Crawler</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Foundation\Testing\Constraints" line="89" package="Default">
        <name>toString</name>
        <full_name>\Illuminate\Foundation\Testing\Constraints\HasElement::toString()</full_name>
        <docblock line="89">
          <description>Returns a string representation of the object.</description>
          <long-description>Placeholder method to avoid forcing definition of this method.</long-description>
          <tag name="return" line="89" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\Illuminate\Foundation\Testing\Constraints\PageConstraint::toString()" refers="\Illuminate\Foundation\Testing\Constraints\PageConstraint::toString()" link="/classes/Illuminate.Foundation.Testing.Constraints.PageConstraint.html#method_toString"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Foundation\Testing\Constraints" line="18" package="Default">
        <name>html</name>
        <full_name>\Illuminate\Foundation\Testing\Constraints\PageConstraint::html()</full_name>
        <docblock line="18">
          <description>Make sure we obtain the HTML from the crawler or the response.</description>
          <long-description/>
          <tag name="param" line="18" description="" type="\Symfony\Component\DomCrawler\Crawler|string" variable="$crawler">
            <type>\Symfony\Component\DomCrawler\Crawler</type>
            <type>string</type>
          </tag>
          <tag name="return" line="18" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$crawler</name>
          <default/>
          <type>\Symfony\Component\DomCrawler\Crawler|string</type>
        </argument>
        <inherited_from>\Illuminate\Foundation\Testing\Constraints\PageConstraint</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Foundation\Testing\Constraints" line="29" package="Default">
        <name>text</name>
        <full_name>\Illuminate\Foundation\Testing\Constraints\PageConstraint::text()</full_name>
        <docblock line="29">
          <description>Make sure we obtain the HTML from the crawler or the response.</description>
          <long-description/>
          <tag name="param" line="29" description="" type="\Symfony\Component\DomCrawler\Crawler|string" variable="$crawler">
            <type>\Symfony\Component\DomCrawler\Crawler</type>
            <type>string</type>
          </tag>
          <tag name="return" line="29" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$crawler</name>
          <default/>
          <type>\Symfony\Component\DomCrawler\Crawler|string</type>
        </argument>
        <inherited_from>\Illuminate\Foundation\Testing\Constraints\PageConstraint</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Foundation\Testing\Constraints" line="40" package="Default">
        <name>crawler</name>
        <full_name>\Illuminate\Foundation\Testing\Constraints\PageConstraint::crawler()</full_name>
        <docblock line="40">
          <description>Create a crawler instance if the given value is not already a Crawler.</description>
          <long-description/>
          <tag name="param" line="40" description="" type="\Symfony\Component\DomCrawler\Crawler|string" variable="$crawler">
            <type>\Symfony\Component\DomCrawler\Crawler</type>
            <type>string</type>
          </tag>
          <tag name="return" line="40" description="" type="\Symfony\Component\DomCrawler\Crawler">
            <type>\Symfony\Component\DomCrawler\Crawler</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$crawler</name>
          <default/>
          <type>\Symfony\Component\DomCrawler\Crawler|string</type>
        </argument>
        <inherited_from>\Illuminate\Foundation\Testing\Constraints\PageConstraint</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Foundation\Testing\Constraints" line="51" package="Default">
        <name>getEscapedPattern</name>
        <full_name>\Illuminate\Foundation\Testing\Constraints\PageConstraint::getEscapedPattern()</full_name>
        <docblock line="51">
          <description>Get the escaped text pattern for the constraint.</description>
          <long-description/>
          <tag name="param" line="51" description="" type="string" variable="$text">
            <type>string</type>
          </tag>
          <tag name="return" line="51" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$text</name>
          <default/>
          <type>string</type>
        </argument>
        <inherited_from>\Illuminate\Foundation\Testing\Constraints\PageConstraint</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Foundation\Testing\Constraints" line="71" package="Default">
        <name>fail</name>
        <full_name>\Illuminate\Foundation\Testing\Constraints\PageConstraint::fail()</full_name>
        <docblock line="71">
          <description>Throw an exception for the given comparison and test description.</description>
          <long-description/>
          <tag name="param" line="71" description="" type="\Symfony\Component\DomCrawler\Crawler|string" variable="$crawler">
            <type>\Symfony\Component\DomCrawler\Crawler</type>
            <type>string</type>
          </tag>
          <tag name="param" line="71" description="" type="string" variable="$description">
            <type>string</type>
          </tag>
          <tag name="param" line="71" description="" type="\SebastianBergmann\Comparator\ComparisonFailure|null" variable="$comparisonFailure">
            <type>\SebastianBergmann\Comparator\ComparisonFailure</type>
            <type>null</type>
          </tag>
          <tag name="return" line="71" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="throws" line="71" description="" type="\PHPUnit_Framework_ExpectationFailedException">
            <type>\PHPUnit_Framework_ExpectationFailedException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$crawler</name>
          <default/>
          <type>\Symfony\Component\DomCrawler\Crawler|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$description</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$comparisonFailure</name>
          <default>null</default>
          <type>\SebastianBergmann\Comparator\ComparisonFailure|null</type>
        </argument>
        <inherited_from>\Illuminate\Foundation\Testing\Constraints\PageConstraint</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Foundation\Testing\Constraints" line="98" package="Default">
        <name>getFailureDescription</name>
        <full_name>\Illuminate\Foundation\Testing\Constraints\PageConstraint::getFailureDescription()</full_name>
        <docblock line="98">
          <description>Get the description of the failure.</description>
          <long-description/>
          <tag name="return" line="98" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Illuminate\Foundation\Testing\Constraints\PageConstraint</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Foundation\Testing\Constraints" line="110" package="Default">
        <name>toString</name>
        <full_name>\Illuminate\Foundation\Testing\Constraints\PageConstraint::toString()</full_name>
        <docblock line="110">
          <description>Get a string representation of the object.</description>
          <long-description>Placeholder method to avoid forcing definition of this method.</long-description>
          <tag name="return" line="110" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Illuminate\Foundation\Testing\Constraints\PageConstraint</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="7" code="PPC:ERR-50005">No summary for class \Illuminate\Foundation\Testing\Constraints\HasElement</error>
    </parse_markers>
    <source>eJylVU1P3DAQvedXDGglsqh83Eu2raBVuVWFG4tWXmdCTBM7sp2lK7r/vZPE+U5a1PoS1sy8N37zPL76kMWZ50mWoskYR7hNkjwVkllcf1G5DJkVSq7v0Vghn9bXShqrmZDWvPe83CDc7dNIyT39J82URGnXNyq91uwlQb12XwrlCTMGvjLzOcGUogB/WpShgW/sCVtU79UDWhenp+UXTuE+RiiqA6Xh9gZUBJZ2sEI5d1F18Mcd00BQVKrbuii/mVYWucUQFoZSuVVFTRNMzFLyNrdoujRgYpUnIcRsh5OUTGu2n2NsMcec1xpJaWAg8QV4IwMI+otJPmbLmGYpuDNCe5xhQFkRdMmbCI021xJ2SoT9kvNtIjhEueRFz2GzqQrKufUbnncOuQMMATw8LkuIqnvFWthYmLNVnUYxHeUHQT2onlxF0GEsWoz8B4ieE0AYiAq/knTl/pPYoQReGXBOxvVb3PurEduhDZXcKpX8UcmUWR6j8WuAkVjuEOX5K01cZJtytopEYoudvrJLZ6pikSR+g0UYpIf1lxAEcLns0BXLlR6xxGDbkEMfC9PM7v1Rl5YzYGSVaaze+dr6NIY5R7+Rqal9Bt8VEjPzqamlzekwdzWpc8eyrOByzmE3SErTFCRHOptVdqrNRiWUu60m/+WwVqG/W6uZK41sfT1qyEaXgdciRSOHxzBuK9ChFuWoDVaw2LEkx2EjClMIs5F5ilpwv4weuWHoxIrDrxEDsqPMk2Qqbd6Zrat6v6gj9Aa9jb8sFo6CmbP9E/+U20e3Yeyv72UIKV4Pco2ZRkPFls9t/cqp7TP1emQtRzD1zg0Gj1V3ZZA/mjj03Bt6eelCHnen6MPrYLwcHo8HA+YI3joWGpLzAE7gRdh4cGng5PzZKLlByVWIE4iT06S+0Q691vjg/QZDLoYb</source>
  <type>class</type></file>