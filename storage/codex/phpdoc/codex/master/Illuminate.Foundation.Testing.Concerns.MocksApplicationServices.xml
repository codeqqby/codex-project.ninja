<file path="codex/vendor/laravel/framework/src/Illuminate/Foundation/Testing/Concerns/MocksApplicationServices.php" generated-path="codex.vendor.laravel.framework.src.Illuminate.Foundation.Testing.Concerns.MocksApplicationServices.html" hash="ffa652d4ba42100a5c83e84c538d3ad0" package="Default">
    <docblock line="0">
      <description/>
      <long-description/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Mockery">\Mockery</namespace-alias>
    <namespace-alias name="Exception">\Exception</namespace-alias>
    <trait namespace="Illuminate\Foundation\Testing\Concerns" line="8" package="Default">
      <name>MocksApplicationServices</name>
      <full_name>\Illuminate\Foundation\Testing\Concerns\MocksApplicationServices</full_name>
      <docblock line="8">
        <description/>
        <long-description/>
        <tag name="package" line="8" description="Default"/>
      </docblock>
      <property static="false" visibility="protected" namespace="Illuminate\Foundation\Testing\Concerns" line="15" package="Default">
        <name>$firedEvents</name>
        <full_name>\Illuminate\Foundation\Testing\Concerns\MocksApplicationServices::firedEvents</full_name>
        <default>array()</default>
        <docblock line="15">
          <description>All of the fired events.</description>
          <long-description/>
          <tag name="var" line="15" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Illuminate\Foundation\Testing\Concerns" line="22" package="Default">
        <name>$dispatchedJobs</name>
        <full_name>\Illuminate\Foundation\Testing\Concerns\MocksApplicationServices::dispatchedJobs</full_name>
        <default>array()</default>
        <docblock line="22">
          <description>All of the dispatched jobs.</description>
          <long-description/>
          <tag name="var" line="22" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Foundation\Testing\Concerns" line="34" package="Default">
        <name>expectsEvents</name>
        <full_name>\Illuminate\Foundation\Testing\Concerns\MocksApplicationServices::expectsEvents()</full_name>
        <docblock line="34">
          <description>Specify a list of events that should be fired for the given operation.</description>
          <long-description>These events will be mocked, so that handlers will not actually be executed.</long-description>
          <tag name="param" line="34" description="" type="array|string" variable="$events">
            <type>array</type>
            <type>string</type>
          </tag>
          <tag name="return" line="34" description="" type="\Illuminate\Foundation\Testing\Concerns\MocksApplicationServices">
            <type>\Illuminate\Foundation\Testing\Concerns\MocksApplicationServices</type>
          </tag>
          <tag name="throws" line="34" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$events</name>
          <default/>
          <type>array|string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Foundation\Testing\Concerns" line="61" package="Default">
        <name>doesntExpectEvents</name>
        <full_name>\Illuminate\Foundation\Testing\Concerns\MocksApplicationServices::doesntExpectEvents()</full_name>
        <docblock line="61">
          <description>Specify a list of events that should not be fired for the given operation.</description>
          <long-description>These events will be mocked, so that handlers will not actually be executed.</long-description>
          <tag name="param" line="61" description="" type="array|string" variable="$events">
            <type>array</type>
            <type>string</type>
          </tag>
          <tag name="return" line="61" description="" type="\Illuminate\Foundation\Testing\Concerns\MocksApplicationServices">
            <type>\Illuminate\Foundation\Testing\Concerns\MocksApplicationServices</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$events</name>
          <default/>
          <type>array|string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Foundation\Testing\Concerns" line="83" package="Default">
        <name>withoutEvents</name>
        <full_name>\Illuminate\Foundation\Testing\Concerns\MocksApplicationServices::withoutEvents()</full_name>
        <docblock line="83">
          <description>Mock the event dispatcher so all events are silenced and collected.</description>
          <long-description/>
          <tag name="return" line="83" description="" type="\Illuminate\Foundation\Testing\Concerns\MocksApplicationServices">
            <type>\Illuminate\Foundation\Testing\Concerns\MocksApplicationServices</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Illuminate\Foundation\Testing\Concerns" line="102" package="Default">
        <name>withoutObservers</name>
        <full_name>\Illuminate\Foundation\Testing\Concerns\MocksApplicationServices::withoutObservers()</full_name>
        <docblock line="102">
          <description>Specify a list of observers that will not run for the given operation.</description>
          <long-description/>
          <tag name="param" line="102" description="" type="array|string" variable="$observers">
            <type>array</type>
            <type>string</type>
          </tag>
          <tag name="return" line="102" description="" type="\Illuminate\Foundation\Testing\Concerns\MocksApplicationServices">
            <type>\Illuminate\Foundation\Testing\Concerns\MocksApplicationServices</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$observers</name>
          <default/>
          <type>array|string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Foundation\Testing\Concerns" line="121" package="Default">
        <name>getFiredEvents</name>
        <full_name>\Illuminate\Foundation\Testing\Concerns\MocksApplicationServices::getFiredEvents()</full_name>
        <docblock line="121">
          <description>Filter the given events against the fired events.</description>
          <long-description/>
          <tag name="param" line="121" description="" type="array" variable="$events">
            <type>array</type>
          </tag>
          <tag name="return" line="121" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$events</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Foundation\Testing\Concerns" line="134" package="Default">
        <name>expectsJobs</name>
        <full_name>\Illuminate\Foundation\Testing\Concerns\MocksApplicationServices::expectsJobs()</full_name>
        <docblock line="134">
          <description>Specify a list of jobs that should be dispatched for the given operation.</description>
          <long-description>These jobs will be mocked, so that handlers will not actually be executed.</long-description>
          <tag name="param" line="134" description="" type="array|string" variable="$jobs">
            <type>array</type>
            <type>string</type>
          </tag>
          <tag name="return" line="134" description="" type="\Illuminate\Foundation\Testing\Concerns\MocksApplicationServices">
            <type>\Illuminate\Foundation\Testing\Concerns\MocksApplicationServices</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$jobs</name>
          <default/>
          <type>array|string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Foundation\Testing\Concerns" line="161" package="Default">
        <name>doesntExpectJobs</name>
        <full_name>\Illuminate\Foundation\Testing\Concerns\MocksApplicationServices::doesntExpectJobs()</full_name>
        <docblock line="161">
          <description>Specify a list of jobs that should not be dispatched for the given operation.</description>
          <long-description>These jobs will be mocked, so that handlers will not actually be executed.</long-description>
          <tag name="param" line="161" description="" type="array|string" variable="$jobs">
            <type>array</type>
            <type>string</type>
          </tag>
          <tag name="return" line="161" description="" type="\Illuminate\Foundation\Testing\Concerns\MocksApplicationServices">
            <type>\Illuminate\Foundation\Testing\Concerns\MocksApplicationServices</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$jobs</name>
          <default/>
          <type>array|string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Foundation\Testing\Concerns" line="183" package="Default">
        <name>withoutJobs</name>
        <full_name>\Illuminate\Foundation\Testing\Concerns\MocksApplicationServices::withoutJobs()</full_name>
        <docblock line="183">
          <description>Mock the job dispatcher so all jobs are silenced and collected.</description>
          <long-description/>
          <tag name="return" line="183" description="" type="\Illuminate\Foundation\Testing\Concerns\MocksApplicationServices">
            <type>\Illuminate\Foundation\Testing\Concerns\MocksApplicationServices</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Foundation\Testing\Concerns" line="204" package="Default">
        <name>getDispatchedJobs</name>
        <full_name>\Illuminate\Foundation\Testing\Concerns\MocksApplicationServices::getDispatchedJobs()</full_name>
        <docblock line="204">
          <description>Filter the given jobs against the dispatched jobs.</description>
          <long-description/>
          <tag name="param" line="204" description="" type="array" variable="$jobs">
            <type>array</type>
          </tag>
          <tag name="return" line="204" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$jobs</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Foundation\Testing\Concerns" line="216" package="Default">
        <name>getDispatched</name>
        <full_name>\Illuminate\Foundation\Testing\Concerns\MocksApplicationServices::getDispatched()</full_name>
        <docblock line="216">
          <description>Filter the given classes against an array of dispatched classes.</description>
          <long-description/>
          <tag name="param" line="216" description="" type="array" variable="$classes">
            <type>array</type>
          </tag>
          <tag name="param" line="216" description="" type="array" variable="$dispatched">
            <type>array</type>
          </tag>
          <tag name="return" line="216" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$classes</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$dispatched</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Illuminate\Foundation\Testing\Concerns" line="230" package="Default">
        <name>wasDispatched</name>
        <full_name>\Illuminate\Foundation\Testing\Concerns\MocksApplicationServices::wasDispatched()</full_name>
        <docblock line="230">
          <description>Check if the given class exists in an array of dispatched classes.</description>
          <long-description/>
          <tag name="param" line="230" description="" type="string" variable="$needle">
            <type>string</type>
          </tag>
          <tag name="param" line="230" description="" type="array" variable="$haystack">
            <type>array</type>
          </tag>
          <tag name="return" line="230" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$needle</name>
          <default/>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$haystack</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
    </trait>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="8" code="PPC:ERR-50010">No summary for trait ""</error>
    </parse_markers>
    <source>eJzdWFtP20gUfs+vmAfUOCjQd1jotgWkXWm3Utt9IghN7ON4uhOPNTMmjTb89z1zsT3xBRJgkRYLCTlz5ly/c86X/PKhyIrRKKdLUAWNgfzGeblkOdUwuxJlnlDNRD77DkqzfDH7LPIYZK5OR6NSAflDxH+DXJ/al8ufMRRGGg+1pEzbY/WxKDiLrZpvIO9YDGr0z4jg8/7w0P4nh+Qj50SkRGdAUiYhIXAHuVbH/rwS+/WOSkKlpGv/yXv7v5BCQ6zx2oG9fWkvkzNyfYO+DJtKGMas4wwv/hDzJ1hrFPyO9wcMfisgZumaUMKZ0sa2Cw5doJqoTJQ8IfMq8FRI69uCoRARBUiburZv3zPAlHtFK4YxoYalKUcyJUo43RnNEw7SC+RCExrrknK+NtLwE+ISw+iEXVBJl8RFvlFaYuEJOXC2aiEJupQ5OdAZU20FOpNipcisRsR2/so5AoKkZR6bM/QDE6SVK1rk7UysqMOJefzHmGKmbq1ntST5UJ+eWK23C9Aos1DRxFfDajCeHp2vmMaMa2+tR2AOWAIIUHuB2JdiDUlUuxxNiEF840LjqNXkSnlWqUR/rhpc1rcC2+Zhaa3wT+EuoAob623C0rQ6nHr9k7ZZ89jUkxxWTTtGHSHzjD2CbPLrhiMrkGCRYk2ckOvxMVsWXCQQjacE/1oeTo7HN+OOAQwtfL2v3+7DoEMIuQv3T2se4+9baKD+/kgEqFxf2kK9oSaxcN+tUV4C6GXeC/VBmKevgW6zIC1YrUvNPpIGgQizylWKnirGAZdvQhCTJBac22A62BuGVb226gq1ytxGk+kGrI1f8icn5j0aBwQB2QAuepzdM6didlEHMN4Cjbl5dO669SvEgK0ZjU2Gx5Ojc4znq3X6L4WNEuDnIMYUYBHa09VhJdj01zcGQk76tL8a/hItiqNzlitNMZXR2KXXlNt4+PzZhCQAKY4ZGHZ81FNDlvmuc2lgeNSa958fvspfKg1Ro6xT8iaAcIY08maMNDLYN83bTZA9t7SWtAirWUkO1NOWZs7ypJGcku4wGdLSLpodJga6n0rGE5DBzaNzbDQ65/BFsgUimSOOMdFlrIWMJvXFqN3nwfv9NMjDvri5YlxDCIaqyxfUQPNxFhxCZHCxPERc67S2Bq7TOLBdOtmtuz0JqEmnOSe7t48h4W1WHHD0vTa71fUqe91YetL49cTXfHWIrJZOO/5w3yqaTrRSpgntye6b3Np47h53xlvNG9TnrBcbQXh9hNccIJm8CNWEnNecT0MzL0t7HUwq0ttY6aMEHVdfn/x2OsRT3zfcJSH9/V+3ioX7Pu3ywrS3gfrDME9eDd81/UXXesivdfi/pb6u2M8gvp/KPVlvFebDzDeoQT9b2v7lyRHg5rN9SPCW9p2C9HS5vvhs/uMKHbCfx36YaxGgvtmyK/1pdZ5nQH0j5kH+49dUX3EGCVAnDzGnSkGTCurDMJM/SIkXeywrXmzouFH4/NRVafMmp95ICOP+ZLpNn9pERM318Dug+awaq8NtsV2cFVVhcayO7cm23SH99fmcAc4BlrYrhKsP17EiLH9iheqlmAPghh2qUEbX2KNVozX1mQvBH51v2xlwhuq6VJrbVTEbjsYZZrqSIFSRB9JudlqEO9dFtF2gd+9a++7srIqYbDZmU6tybjN1K9JQclqJTXAFbjadBRQqrcYY5r+6NPzFEL/jweDy6sywlHIFFTbuR/8C/m5mJQ==</source>
  <type>trait</type></file>